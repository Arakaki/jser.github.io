<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 20 Mar 2018 11:13:30 +0900</pubDate>
    <lastBuildDate>Tue, 20 Mar 2018 11:13:30 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2018-03-20のJS: TypeScript 2.8RC、Firefox 59、#SmooshGate</title>
        <description>&lt;p&gt;JSer.info #375　- TypeScript 2.8 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/03/15/announcing-typescript-2-8-rc/&quot; title=&quot;Announcing TypeScript 2.8 RC | TypeScript&quot;&gt;Announcing TypeScript 2.8 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-28&quot; title=&quot;What&amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Conditional Typesのサポート、Mapped Type Modifierの&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;ができるようになりNonNullableへの変換が扱えるようになりました。&lt;br&gt;
また、JSX Pragmasをコメントで指定できるようなり、&lt;code&gt;.d.ts&lt;/code&gt;だけを出力する&lt;code&gt;--emitDeclarationsOnly&lt;/code&gt;のサポートなどが行われています。&lt;/p&gt;

&lt;p&gt;Conditional Typesで型の表現の幅が広がりますが、詳細はリリースノートや次の記事を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/Quramy/items/b45711789605ef9f96de&quot;&gt;TypeScript 2.8 の Conditional Types について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@bterlson/strongly-typed-event-emitters-2c2345801de8&quot;&gt;Strongly Typed Event Emitters with Conditional Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 59がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/59.0/releasenotes/&quot; title=&quot;Firefox — Notes (59.0) — Mozilla&quot;&gt;Firefox — Notes (59.0) — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/59&quot; title=&quot;Firefox 59 for developers - Mozilla | MDN&quot;&gt;Firefox 59 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent&quot; title=&quot;PointerEvent&quot;&gt;PointerEvent&lt;/a&gt;がデフォルトで有効化され、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior&quot; title=&quot;overscroll-behavior&quot;&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt;&lt;/a&gt;の実装、&lt;code&gt;EventTarget&lt;/code&gt;コンストラクタの実装がされています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/EventTarget&quot; title=&quot;EventTarget&quot;&gt;EventTarget&lt;/a&gt;はNode.jsのEventEmitterのように継承して利用できるpub/subなクラスとして利用できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2017-07-10/subclassible-eventtarget.html&quot; title=&quot;EventTarget の継承可能化による EventEmitter の代替 | blog.jxck.io&quot;&gt;EventTarget の継承可能化による EventEmitter の代替 | blog.jxck.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/smooshgate&quot; title=&quot;#SmooshGate FAQ  |  Web  |  Google Developers&quot;&gt;#SmooshGate FAQ  |  Web  |  Google Developers&lt;/a&gt;という記事では、最近話題となった&lt;a href=&quot;https://twitter.com/hashtag/smooshgate&quot; title=&quot;#smooshgate&quot;&gt;#smooshgate&lt;/a&gt;についてよくある質問を解説しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashtag/smooshgate&quot; title=&quot;#smooshgate&quot;&gt;#smooshgate&lt;/a&gt;とは現在Stage 3のProposalである&lt;a href=&quot;https://tc39.github.io/proposal-flatMap/&quot; title=&quot;Array.prototype.flatMap &amp;amp;amp; Array.prototype.flatten&quot;&gt;Array.prototype.flatMap &amp;amp; Array.prototype.flatten&lt;/a&gt;とbreak the webについての問題です。&lt;br&gt;
Firefox Nightlyに&lt;code&gt;Array.prototype.flatten&lt;/code&gt;が実験的に実装されてた所、MooToolsの&lt;code&gt;Array.prototype.flatten&lt;/code&gt;の実装と衝突し動作しないサイトがあることとわかりました。&lt;br&gt;
その回避案の１つとして&lt;code&gt;Array.prototype.flatten&lt;/code&gt;を&lt;code&gt;Array.prototype.smoosh&lt;/code&gt;にリネームするPRが出された一連の流れを&lt;a href=&quot;https://twitter.com/hashtag/smooshgate&quot; title=&quot;#smooshgate&quot;&gt;#smooshgate&lt;/a&gt;と呼んでいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-flatMap/pull/56&quot; title=&quot;rename flatten to smoosh by michaelficarra · Pull Request #56 · tc39/proposal-flatMap&quot;&gt;rename flatten to smoosh by michaelficarra · Pull Request #56 · tc39/proposal-flatMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@jacobdfriedmann/smooshgate-the-ongoing-struggle-between-progress-and-stability-in-javascript-2a971c1162dd&quot; title=&quot;SmooshGate: The ongoing struggle between progress and stability in JavaScript&quot;&gt;SmooshGate: The ongoing struggle between progress and stability in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;実際に判定ツールを書いたので&lt;a href=&quot;https://azu.github.io/can-i-standardize/&quot; title=&quot;Can I Standardize?&quot;&gt;Can I Standardize?&lt;/a&gt;試すことができますが、&lt;code&gt;Array.prototype.flatten&lt;/code&gt;はMooToolsやprototype.js、sugar.jsなどで実装されています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Can I Standardize?&lt;a href=&quot;https://t.co/Q1hA7MnHqB&quot;&gt;https://t.co/Q1hA7MnHqB&lt;/a&gt;&lt;br&gt;&lt;br&gt;`Array.prototype.flatten`:&lt;br&gt;- prototype.js define: true&lt;br&gt;- MooTools define: true&lt;br&gt;- Suger.js define: true&lt;br&gt;&lt;br&gt;`Array.prototype.smoosh`:&lt;br&gt;prototype.js define: false&lt;br&gt;MooTools define: false&lt;br&gt;Suger.js define: false&lt;br&gt;&lt;br&gt; &lt;a href=&quot;https://twitter.com/hashtag/smooshgate?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#smooshgate&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ecmascript?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ecmascript&lt;/a&gt; &lt;a href=&quot;https://t.co/JQluGQLU4N&quot;&gt;pic.twitter.com/JQluGQLU4N&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/971958777485312000?ref_src=twsrc%5Etfw&quot;&gt;March 9, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;この記事ではなぜprototype拡張によってbreak the webが起きるのか、なぜMooToolsを直しただけでは解決しないのか、TC39はこれからこの問題をどう修正していくかなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.8-rc-|-typescript&quot;&gt;Announcing TypeScript 2.8 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/03/15/announcing-typescript-2-8-rc/&quot; title=&quot;Announcing TypeScript 2.8 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/03/15/announcing-typescript-2-8-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.8 RCリリース。&lt;br&gt;
Conditional Types、Mapped Type Modifierの&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;ができるように、JSX Pragmasをコメントで指定できるようなるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.2.0-·-googlechrome/puppeteer&quot;&gt;Release v1.2.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.2.0&quot; title=&quot;Release v1.2.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;puppeteer 1.2.0リリース。&lt;br&gt;
&lt;code&gt;elementHandle.contentFrame()&lt;/code&gt;の追加、リダイレクト回数を返す&lt;code&gt;request.redirectChain()&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(59.0)-—-mozilla&quot;&gt;Firefox — Notes (59.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/59.0/releasenotes/&quot; title=&quot;Firefox — Notes (59.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/59.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 59リリース。&lt;br&gt;
開発者ツールの改善、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent&quot; title=&quot;PointerEvent&quot;&gt;PointerEvent&lt;/a&gt;をデフォルトで有効化、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior&quot; title=&quot;overscroll-behavior&quot;&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt;&lt;/a&gt;の実装、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/EventTarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;コンストラクタの実装など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/59&quot; title=&quot;Firefox 59 for developers - Mozilla | MDN&quot;&gt;Firefox 59 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-inferno-v5.0.0-·-infernojs/inferno&quot;&gt;Release Inferno v5.0.0 · infernojs/inferno&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/releases/tag/v5.0.0&quot; title=&quot;Release Inferno v5.0.0 · infernojs/inferno&quot;&gt;github.com/infernojs/inferno/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Inferno v5.0.0 リリース。 &lt;code&gt;.mjs&lt;/code&gt;で配布していたのを&lt;code&gt;.js&lt;/code&gt;に変更、 IE9のサポート終了、TypeScriptのサポート改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;とあるlpの制作現場---qiita&quot;&gt;とあるLPの制作現場 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/noplan1989/items/a52a957546ddb9efeca3&quot; title=&quot;とあるLPの制作現場 - Qiita&quot;&gt;qiita.com/noplan1989/items/a52a957546ddb9efeca3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;design&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;実際にウェブサイトのランディングページ(LP)の作る際にどのように作成したかについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-build-password-generator-with-electron-&amp;amp;-react-pt.1---setting-the-stage---alex-devero-blog&quot;&gt;How to Build Password Generator with Electron &amp;amp; React Pt.1 - Setting the Stage - Alex Devero Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.alexdevero.com/password-generator-pt1/&quot; title=&quot;How to Build Password Generator with Electron &amp;amp; React Pt.1 - Setting the Stage - Alex Devero Blog&quot;&gt;blog.alexdevero.com/password-generator-pt1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electronを使ったパスワードジェネレータアプリのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unblocking-clipboard-access- | -web- | -google-developers&quot;&gt;Unblocking Clipboard Access  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot; title=&quot;Unblocking Clipboard Access  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/03/clipboardapi&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;clipboard&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Async Clipboard APIについての紹介。&lt;br&gt;
今まで&lt;code&gt;document.execCommand&lt;/code&gt;でやっていたものをちゃんとしたPermissionモデルと共に扱えるAPIについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data-visualization-with-react-vis-–-dailyjs-–-medium&quot;&gt;Data visualization with react-vis – DailyJS – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dailyjs/data-visualization-with-react-vis-bd2587fe1660&quot; title=&quot;Data visualization with react-vis – DailyJS – Medium&quot;&gt;medium.com/dailyjs/data-visualization-with-react-vis-bd2587fe1660&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;react-visを使ったグラフの描画について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-4-の-optimization.splitchunks（廃止されたcommonschunkpluginの代わり）-の使い方、使い所---qiita&quot;&gt;webpack 4 の optimization.splitChunks（廃止されたCommonsChunkPluginの代わり） の使い方、使い所 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/soarflat/items/1b5aa7163c087a91877d&quot; title=&quot;webpack 4 の optimization.splitChunks（廃止されたCommonsChunkPluginの代わり） の使い方、使い所 - Qiita&quot;&gt;qiita.com/soarflat/items/1b5aa7163c087a91877d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4の&lt;code&gt;optimization&lt;/code&gt;オプションについて。&lt;br&gt;
&lt;code&gt;optimization.*&lt;/code&gt;の設定とそれぞれの出力結果について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;say-hello-to-houdini-and-the-css-paint-api-/-coder&amp;#39;s-block&quot;&gt;Say Hello to Houdini and the CSS Paint API / Coder&amp;#39;s Block&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codersblock.com/blog/say-hello-to-houdini-and-the-css-paint-api/&quot; title=&quot;Say Hello to Houdini and the CSS Paint API / Coder&amp;#39;s Block&quot;&gt;codersblock.com/blog/say-hello-to-houdini-and-the-css-paint-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Paint APIについての記事。&lt;br&gt;
Paint Workletを使ったスタイルの拡張の書き方やスタイルの適応方法について。&lt;br&gt;
また現時点でのCSS Paint APIを含めたHoudiniについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redruco:-truco-para-aprender-redux-(parte-1)-–-javier-fernandes-–-medium&quot;&gt;Redruco: Truco para aprender Redux (Parte 1) – Javier Fernandes – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@javierfernandes/redruco-truco-para-aprender-redux-parte-1-c72d052576b0&quot; title=&quot;Redruco: Truco para aprender Redux (Parte 1) – Javier Fernandes – Medium&quot;&gt;medium.com/@javierfernandes/redruco-truco-para-aprender-redux-parte-1-c72d052576b0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React/Reduxを使ったアプリケーション開発についての連載。&lt;br&gt;
Reduxが必要となる状態はどのようなケースか、また開発においてもアプリの状態とUIの詳細は独立して考えられることについて。&lt;br&gt;
Storybookでコンポーネントを確認しながら開発し、アプリを作るチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;#smooshgate-faq- | -web- | -google-developers&quot;&gt;#SmooshGate FAQ  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/smooshgate&quot; title=&quot;#SmooshGate FAQ  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/03/smooshgate&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TC39&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptで&lt;code&gt;Array.prototype.flatten&lt;/code&gt; Proposalが既存のMooToolsなどのライブラリと名前がバッティングするためbreak the webとなる問題について。&lt;br&gt;
標準化する実装と異なる点だけではなく、prototypeを列挙している点にも問題がある。&lt;br&gt;
また、なぜ既存の実装を変更しても解決にならないかや今後について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strongly-typed-event-emitters-–-brian-terlson-–-medium&quot;&gt;Strongly Typed Event Emitters – Brian Terlson – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bterlson/strongly-typed-event-emitters-2c2345801de8&quot; title=&quot;Strongly Typed Event Emitters – Brian Terlson – Medium&quot;&gt;medium.com/@bterlson/strongly-typed-event-emitters-2c2345801de8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.8(RC)のConditional Typeを使ったEventEmitterの型付けについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bterlson/strict-event-emitter-types&quot; title=&quot;bterlson/strict-event-emitter-types: A type-only library for strongly typing any event emitter&quot;&gt;bterlson/strict-event-emitter-types: A type-only library for strongly typing any event emitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nucleartide/emberconf-2018:-emberconf-2018-notes.&quot;&gt;nucleartide/emberconf-2018: EmberConf 2018 notes.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nucleartide/emberconf-2018&quot; title=&quot;nucleartide/emberconf-2018: EmberConf 2018 notes.&quot;&gt;github.com/nucleartide/emberconf-2018&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;EmberConf 2018の動画や発表のまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;everyone-can-now-run-javascript-on-cloudflare-with-workers&quot;&gt;Everyone can now run JavaScript on Cloudflare with Workers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-workers-unleashed/&quot; title=&quot;Everyone can now run JavaScript on Cloudflare with Workers&quot;&gt;blog.cloudflare.com/cloudflare-workers-unleashed/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Workersが一般公開された。&lt;br&gt;
CDN上でService Workerと同じようなAPIで処理を書くことができるサービス。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fromjs---understand-javascript-apps&quot;&gt;FromJS - Understand JavaScript Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.fromjs.com/&quot; title=&quot;FromJS - Understand JavaScript Apps&quot;&gt;www.fromjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DOMをインスペクトし、表示されている文字列がコードのどこで生成されているかを検索できるChrome拡張。 既存のHTMLを生成するDOM APIを上書きしトレースしている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vuex-orm/vuex-orm:-the-vuex-plugin-to-enable-object-relational-mapping-access-to-the-vuex-store.&quot;&gt;vuex-orm/vuex-orm: The Vuex plugin to enable Object-Relational Mapping access to the Vuex Store.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuex-orm/vuex-orm&quot; title=&quot;vuex-orm/vuex-orm: The Vuex plugin to enable Object-Relational Mapping access to the Vuex Store.&quot;&gt;github.com/vuex-orm/vuex-orm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vuex&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ORM&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;複雑なデータ構造を扱うためのVuexプラグイン。リレーションを持ったデータをノーマライズし、RailsやLaravelのようなORMライクなAPIでデータの検索、取得ができる。複雑にネストしたデータ構造をノーマライズすることで、データを扱うコストを一定に保つことが目的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/kiaking/items/bcd5360fb3106cf22a81&quot; title=&quot;Vuexでリレーションを持った複雑なデータ構造を上手く扱うには - Qiita&quot;&gt;Vuexでリレーションを持った複雑なデータ構造を上手く扱うには - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paularmstrong/normalizr&quot; title=&quot;paularmstrong/normalizr: Normalizes nested JSON according to a schema&quot;&gt;paularmstrong/normalizr: Normalizes nested JSON according to a schema&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maticzav/emma-cli:-📦-terminal-assistant-to-find-and-install-node-packages.&quot;&gt;maticzav/emma-cli: 📦 Terminal assistant to find and install node packages.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/maticzav/emma-cli&quot; title=&quot;maticzav/emma-cli: 📦 Terminal assistant to find and install node packages.&quot;&gt;github.com/maticzav/emma-cli&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmモジュールの検索とインストールを行うツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;terkelg/prompts:-lightweight,-beautiful-and-user-friendly-interactive-prompts&quot;&gt;terkelg/prompts: Lightweight, beautiful and user-friendly interactive prompts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/terkelg/prompts&quot; title=&quot;terkelg/prompts: Lightweight, beautiful and user-friendly interactive prompts&quot;&gt;github.com/terkelg/prompts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでインタラクティブなプロンプトを表示するライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Mar 2018 10:23:07 +0900</pubDate>
        <link>https://jser.info/2018/03/20/typescript-2.8rc-firefox-59-smooshgate/</link>
        <guid isPermaLink="true">https://jser.info/2018/03/20/typescript-2.8rc-firefox-59-smooshgate/</guid>
        
        <category>TypeScript</category>
        
        <category>firefox</category>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-03-13のJS: MobX 4.0.0、PreactとGlimmerのパフォーマンス比較実験</title>
        <description>&lt;p&gt;JSer.info #374 - &lt;a href=&quot;https://github.com/mobxjs/mobx&quot; title=&quot;MobX&quot;&gt;MobX&lt;/a&gt; 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da&quot;&gt;MobX 4: Better, simpler, faster, smaller – Michel Weststrate – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/blob/master/CHANGELOG.md#400&quot;&gt;mobx/CHANGELOG.md at master · mobxjs/mobx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Decorator proposal(&lt;code&gt;@decorator&lt;/code&gt;)を使わずにObservableオブジェクトを作成する&lt;code&gt;decorate&lt;/code&gt;関数の追加、&lt;a href=&quot;https://mobx.js.org/refguide/object-api.html&quot; title=&quot;Object api | MobX&quot;&gt;Object api&lt;/a&gt;の追加、&lt;code&gt;when&lt;/code&gt;や&lt;code&gt;flow&lt;/code&gt;のような非同期サポートの補助する関数の追加などが行われています。&lt;/p&gt;

&lt;p&gt;破壊的な変更として&lt;code&gt;shareGlobalState&lt;/code&gt;の削除、observable mapに&lt;code&gt;Map&lt;/code&gt;を使うように、&lt;code&gt;extras&lt;/code&gt;関係のAPIのリネーム、&lt;code&gt;mobx&lt;/code&gt;モジュールがdefault exportをしなくなるなどが行われています。&lt;br&gt;
次のページにマイグレーションガイドが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/wiki/Migrating-from-mobx-3-to-mobx-4&quot; title=&quot;Migrating from mobx 3 to mobx 4 · mobxjs/mobx Wiki&quot;&gt;Migrating from mobx 3 to mobx 4 · mobxjs/mobx Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、現在開発中の&lt;a href=&quot;https://github.com/mobxjs/mobx/pull/1380&quot;&gt;MobX 5(15?)&lt;/a&gt;ではObservableにES Proxyを使ったものを予定しているようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/issues/1390&quot; title=&quot;Road to MobX 5 · Issue #1390 · mobxjs/mobx&quot;&gt;Road to MobX 5 · Issue #1390 · mobxjs/mobx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/03/how-we-built-the-same-app-twice-with-preact-and-glimmerjs&quot; title=&quot;Lighter than Lightweight: How We Built the Same App Twice with Preact and Glimmer.js | LinkedIn Engineering&quot;&gt;Lighter than Lightweight: How We Built the Same App Twice with Preact and Glimmer.js | LinkedIn Engineering&lt;/a&gt;という記事では、同じアプリをPreactとGlimmer.jsで実装し、ページロードに関するパフォーマンスの比較実験をした結果について書かれています。&lt;br&gt;
それぞれのアプリでページ表示に関する値を指標として比較した時に、極端な差はでませんでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://havelog.ayumusato.com/develop/performance/e744-performance_metrics.html&quot; title=&quot;Web クライアントサイドのパフォーマンスメトリクス — Speed Index、Paint Timing、TTI etc... ::ハブろぐ&quot;&gt;Web クライアントサイドのパフォーマンスメトリクス — Speed Index、Paint Timing、TTI etc... ::ハブろぐ&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;First Meaningful PaintやTime to Interactiveについての解説&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Preact(3kb)とGlimmer.js(30kb)ではファイルサイズに差がありますが、その差がそのままページの表示時間に出てないことについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;donejs-2.0-released&quot;&gt;DoneJS 2.0 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bitovi.com/blog/donejs-2.0&quot; title=&quot;DoneJS 2.0 Released&quot;&gt;www.bitovi.com/blog/donejs-2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DoneJS 2.0リリース。&lt;br&gt;
CanJS 4.0に対応、CIやデプロイの設定を&lt;code&gt;donejs add&lt;/code&gt;で行えるように、&lt;code&gt;donejs upgrade&lt;/code&gt;でマイグレーションができるようになっている。&lt;br&gt;
HTTP/2 pushを使ったインクリメンタルレンダリングの対応改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bitovi.com/streamable&quot; title=&quot;Create Streamable, High-Performance Web Applications&quot;&gt;Create Streamable, High-Performance Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;we-have-released-version-3.0-of-openpgpjs,-an-open-source-openpgp-library---protonmail-blog&quot;&gt;We have released version 3.0 of OpenPGPjs, an open source OpenPGP library - ProtonMail Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://protonmail.com/blog/openpgpjs-3-release/&quot; title=&quot;We have released version 3.0 of OpenPGPjs, an open source OpenPGP library - ProtonMail Blog&quot;&gt;protonmail.com/blog/openpgpjs-3-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;OpenPGPの実装であるOpenPGP.js 3.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-65- | -web- | -google-developers&quot;&gt;New in Chrome 65  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/nic65&quot; title=&quot;New in Chrome 65  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/03/nic65&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 65の変更点について。&lt;br&gt;
CSS Paint API、Server Tming API、&lt;code&gt;display: contents&lt;/code&gt;の対応、Feature Policyの対応など。&lt;br&gt;
また&lt;code&gt;document.all&lt;/code&gt;が上書きできなくなるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D65&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/02/chrome-65-beta-css-paint-api-and.html&quot; title=&quot;Chromium Blog: Chrome 65 Beta: CSS Paint API and the ServerTiming API&quot;&gt;Chromium Blog: Chrome 65 Beta: CSS Paint API and the ServerTiming API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mobx-4:-better,-simpler,-faster,-smaller-–-michel-weststrate-–-medium&quot;&gt;MobX 4: Better, simpler, faster, smaller – Michel Weststrate – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da&quot; title=&quot;MobX 4: Better, simpler, faster, smaller – Michel Weststrate – Medium&quot;&gt;medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MobX 4リリース。&lt;br&gt;
Decorator proposal(&lt;code&gt;@decorator&lt;/code&gt;)を使わずに同じことをする&lt;code&gt;decorate&lt;/code&gt;関数の追加、コレクション向けのUtility APIを追加、&lt;code&gt;when&lt;/code&gt;の追加など。&lt;br&gt;
また&lt;code&gt;shareGlobalState&lt;/code&gt;の削除、APIのリネーム、default exportをしないようにするなどの破壊的変更が行われている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/wiki/Migrating-from-mobx-3-to-mobx-4&quot; title=&quot;Migrating from mobx 3 to mobx 4 · mobxjs/mobx Wiki&quot;&gt;Migrating from mobx 3 to mobx 4 · mobxjs/mobx Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/blob/master/CHANGELOG.md#400&quot; title=&quot;mobx/CHANGELOG.md at master · mobxjs/mobx&quot;&gt;mobx/CHANGELOG.md at master · mobxjs/mobx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-futura-·-sass/libsass&quot;&gt;Release Futura · sass/libsass&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sass/libsass/releases/tag/3.5.0&quot; title=&quot;Release Futura · sass/libsass&quot;&gt;github.com/sass/libsass/releases/tag/3.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;libsass 3.5リリース。 引数のtrailing commasサポート、&lt;code&gt;content-exists&lt;/code&gt;関数のサポート、CSSのCustom Property、&lt;code&gt;var()&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-imperative-guide-to-forms-in-react-–-logrocket&quot;&gt;An imperative guide to forms in React – LogRocket&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/an-imperative-guide-to-forms-in-react-927d9670170a&quot; title=&quot;An imperative guide to forms in React – LogRocket&quot;&gt;blog.logrocket.com/an-imperative-guide-to-forms-in-react-927d9670170a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったフォームの扱いについての記事。&lt;br&gt;
Formikを使ったフォームの作成などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;emscripting-a-c-library-to-wasm- | -web- | -google-developers&quot;&gt;Emscripting a C library to Wasm  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/emscripting-a-c-library&quot; title=&quot;Emscripting a C library to Wasm  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/03/emscripting-a-c-library&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Emscriptenを使いCのコードをWebAssemblyにして実行するチュートリアル。&lt;br&gt;
libwebpをwasmにコンパイルする話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;feature-policy-による-permission-delegation-|-blog.jxck.io&quot;&gt;Feature Policy による Permission Delegation | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2018-03-08/feature-policy-permission-delegation.html&quot; title=&quot;Feature Policy による Permission Delegation | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2018-03-08/feature-policy-permission-delegation.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;iframe sandbox、CSP、Feature Policyの役割について。&lt;br&gt;
&lt;code&gt;sandbox&lt;/code&gt;はホワイリトストでの機能制限、CSPはブラックリストでの機能制限、Feature Policyは権限の設定をオリジンに対して行う。&lt;br&gt;
また&lt;code&gt;sandbox&lt;/code&gt;とFeature Policyの機能重複はしないことについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-workers-to-the-rescue-–-rastislav-svarba-–-medium&quot;&gt;Web Workers to the rescue – Rastislav Svarba – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rast.io/web-workers-rescue&quot; title=&quot;Web Workers to the rescue – Rastislav Svarba – Medium&quot;&gt;rast.io/web-workers-rescue&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Workerを使った処理の移譲のコストと効果についての記事。&lt;br&gt;
データの取得と処理をWorkerに移動した場合の処理時間とWorkerへのデータ受け渡しのコストについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-introducing-`npm-ci`-for-faster,-more-reliable...&quot;&gt;The npm Blog — Introducing `npm ci` for faster, more reliable...&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot; title=&quot;The npm Blog — Introducing \`npm ci\` for faster, more reliable...&quot;&gt;blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pacakge-lock.json&lt;/code&gt;から常にクリーンインストールする&lt;code&gt;npm ci&lt;/code&gt;について。 現在の存在する&lt;code&gt;node_modules&lt;/code&gt;ディレクトリを削除し、&lt;code&gt;pacakge-lock.json&lt;/code&gt;を元にインストールする。 キャッシュを使わないCI環境向けのインストールコマンド。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mstssk/items/8759c71f328cab802670&quot; title=&quot;npm ciを使おう あるいはより速く - Qiita&quot;&gt;npm ciを使おう あるいはより速く - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lighter-than-lightweight:-how-we-built-the-same-app-twice-with-preact-and-glimmer.js-|-linkedin-engineering&quot;&gt;Lighter than Lightweight: How We Built the Same App Twice with Preact and Glimmer.js | LinkedIn Engineering&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.linkedin.com/blog/2018/03/how-we-built-the-same-app-twice-with-preact-and-glimmerjs&quot; title=&quot;Lighter than Lightweight: How We Built the Same App Twice with Preact and Glimmer.js | LinkedIn Engineering&quot;&gt;engineering.linkedin.com/blog/2018/03/how-we-built-the-same-app-twice-with-preact-and-glimmerjs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;同じアプリをPreactとGlimmer.jsで実装し、ページロードに関するパフォーマンスの比較実験をした結果について。&lt;br&gt;
ファイルサイズは重要であるが、ファイルサイズがすべてを決めるわけではないという点について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;andrew--r/frontend-case-studies:-💼-a-curated-list-of-technical-talks-and-articles-about-real-world-enterprise-frontend-development&quot;&gt;andrew--r/frontend-case-studies: 💼 A curated list of technical talks and articles about real-world enterprise frontend development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andrew--r/frontend-case-studies&quot; title=&quot;andrew--r/frontend-case-studies: 💼 A curated list of technical talks and articles about real-world enterprise frontend development&quot;&gt;github.com/andrew--r/frontend-case-studies&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;企業&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドのケーススタディのまとめ。&lt;br&gt;
色々な企業の事例が書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;30-seconds-of-css&quot;&gt;30 Seconds of CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://atomiks.github.io/30-seconds-of-css/&quot; title=&quot;30 Seconds of CSS&quot;&gt;atomiks.github.io/30-seconds-of-css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのスニペットとその解説をまとめたもの。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;boxy-svg-editor&quot;&gt;Boxy SVG Editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://boxy-svg.com/&quot; title=&quot;Boxy SVG Editor&quot;&gt;boxy-svg.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVGエディタアプリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pshihn/workly:-a-really-simple-way-to-move-a-stand-alone-function/class-to-a-web-worker.-🏋️‍♀️→-😄&quot;&gt;pshihn/workly: A really simple way to move a stand-alone function/class to a web worker. 🏋️‍♀️→ 😄&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pshihn/workly&quot; title=&quot;pshihn/workly: A really simple way to move a stand-alone function/class to a web worker. 🏋️‍♀️→ 😄&quot;&gt;github.com/pshihn/workly&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ProxyとWebWorkerを使い既存の関数やクラスをWorkerで処理するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;midwayjs/pandora:-a-manageable,-measurable-and-traceable-node.js-application-manager-represented-by-alibaba-powered-by-typescript&quot;&gt;midwayjs/pandora: A Manageable, Measurable and Traceable Node.js Application Manager represented by Alibaba powered by TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/midwayjs/pandora&quot; title=&quot;midwayjs/pandora: A Manageable, Measurable and Traceable Node.js Application Manager represented by Alibaba powered by TypeScript&quot;&gt;github.com/midwayjs/pandora&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Alibaba製のNode.jsアプリケーションの管理ツール。&lt;br&gt;
アプリケーションプロセスの管理、計測、監視、トラブルシューティングのためのデバッグの仕組みなどが持っている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;run&quot;&gt;Run&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://run.tools/&quot; title=&quot;Run&quot;&gt;run.tools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js製のデプロイツール。&lt;br&gt;
&amp;quot;Resource&amp;quot;という単位で設定を行い、S3へデプロイといったことを行える。&lt;br&gt;
Resourceは自分で作成することができ、どのようなオプションを受け取るかやオプションを受け取って処理を記述できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://run.tools/docs/reference/resources&quot; title=&quot;Resources&quot;&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zipson-|-json-parse-and-stringify-with-compression&quot;&gt;zipson | JSON parse and stringify with compression&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jgranstrom.github.io/zipson/&quot; title=&quot;zipson | JSON parse and stringify with compression&quot;&gt;jgranstrom.github.io/zipson/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JSON.stringify&lt;/code&gt;/&lt;code&gt;JSON.parse&lt;/code&gt;の代替ライブラリ。&lt;br&gt;
データの圧縮やStreamingのサポートを目的にしている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rough.js&quot;&gt;Rough.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://roughjs.com/&quot; title=&quot;Rough.js&quot;&gt;roughjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;手書き風の線を描くCanvasライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 13 Mar 2018 10:26:18 +0900</pubDate>
        <link>https://jser.info/2018/03/13/preactglimmer/</link>
        <guid isPermaLink="true">https://jser.info/2018/03/13/preactglimmer/</guid>
        
        <category>MobX</category>
        
        <category>Preact</category>
        
        <category>glimmer</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-03-06のJS:  TestCafe v0.19.0、ランタイム情報を使ったTypeScriptの型付け、Web Componentsでの開発</title>
        <description>&lt;p&gt;JSer.info #373 - TestCafe v0.19.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-19-0-released.html&quot; title=&quot;TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc | TestCafe&quot;&gt;TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc | TestCafe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ファイルの変更を監視し、更新されたら再実行できる&lt;code&gt;testcafe-live&lt;/code&gt;コマンドの追加されています。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RWQtB6Xv01Q&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/&quot; title=&quot;Cypress&quot;&gt;Cypress&lt;/a&gt;もそうですが、テストを書く際にトライアンドエラーがしやすい機能を持ったテストフレームワークが増えている印象です。&lt;/p&gt;

&lt;p&gt;また、セレクタの結果をフィルターする&lt;code&gt;filterVisible&lt;/code&gt;と&lt;code&gt;filterHidden&lt;/code&gt;、テキストマッチした要素を取得する&lt;code&gt;withExactText&lt;/code&gt;の追加などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/urish/typewiz&quot; title=&quot;typewiz&quot;&gt;typewiz&lt;/a&gt;というTypeScriptの型付を補助するツールが公開されています。&lt;/p&gt;

&lt;p&gt;このツールで&lt;a href=&quot;https://github.com/urish/typewiz/blob/master/packages/typewiz-node/README.md&quot; title=&quot;typewiz-node&quot;&gt;typewiz-node&lt;/a&gt;、&lt;a href=&quot;https://github.com/urish/typewiz/blob/master/packages/typewiz-webpack/README.md&quot; title=&quot;typewiz-webpack&quot;&gt;typewiz-webpack&lt;/a&gt;で変換して実行して得た実行時の型情報を元に、コードベースに型を付けるツールです。&lt;/p&gt;

&lt;p&gt;ASTを使ったコード変換したコードの実行時に関数の引数/変数/返り値にどのような値が入るかを記録し、その情報を元に&lt;code&gt;string&lt;/code&gt;/&lt;code&gt;number&lt;/code&gt;/&lt;code&gt;boolean&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt;/&lt;code&gt;undefined&lt;/code&gt;といった型を推測します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/urish/typewiz/blob/35e8dc31fb7cdca968b212ba905710af4dfb2d22/src/instrument.ts&quot; title=&quot;instrument.ts&quot;&gt;instrument.ts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/urish/typewiz/blob/master/src/type-collector-snippet.ts&quot; title=&quot;type-collector-snippet.ts&quot;&gt;type-collector-snippet.ts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;any&lt;/code&gt;で型を付けされたTypeScriptのコードに対して型を付けることが目的のツールです。&lt;br&gt;
詳細は次の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@urish/manual-typing-is-no-fun-introducing-typewiz-58e3e8813f4c&quot; title=&quot;Manual Typing is No Fun: Introducing TypeWiz! – Uri Shaked – Medium&quot;&gt;Manual Typing is No Fun: Introducing TypeWiz! – Uri Shaked – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1.11:-css-fixes-and-new-typescript-feature-support-·-prettier&quot;&gt;Prettier 1.11: CSS fixes and new TypeScript feature support · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2018/02/26/1.11.0.html&quot; title=&quot;Prettier 1.11: CSS fixes and new TypeScript feature support · Prettier&quot;&gt;prettier.io/blog/2018/02/26/1.11.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.11リリース。&lt;br&gt;
Facebookのコードベースは100% Prettierを通すようになった。&lt;br&gt;
PostCSSの対応改善、TypeScript 2.7の対応、pluginでオプションのサポートなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-developers-blog:-announcing-flutter-beta-1:-build-beautiful-native-apps&quot;&gt;Google Developers Blog: Announcing Flutter beta 1: Build beautiful native apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.googleblog.com/2018/02/announcing-flutter-beta-1.html&quot; title=&quot;Google Developers Blog: Announcing Flutter beta 1: Build beautiful native apps&quot;&gt;developers.googleblog.com/2018/02/announcing-flutter-beta-1.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;dart&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Dartを使いモバイルアプリを作るフレームワークのFlutter β1がリリースされた。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.7.0-(current)-|-node.js&quot;&gt;Node v9.7.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.7.0/&quot; title=&quot;Node v9.7.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.7.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 9.7.0リリース。&lt;br&gt;
&lt;code&gt;util.getSystemErrorName&lt;/code&gt;の追加、&lt;code&gt;immediate.ref()&lt;/code&gt;と&lt;code&gt;immediate.unref()&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moment/changelog.md-at-develop-·-moment/moment&quot;&gt;moment/CHANGELOG.md at develop · moment/moment&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moment/moment/blob/develop/CHANGELOG.md&quot; title=&quot;moment/CHANGELOG.md at develop · moment/moment&quot;&gt;github.com/moment/moment/blob/develop/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;moment 2.21.0リリース。&lt;br&gt;
バグ修正やロケールの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jasmine/3.1.0.md-at-master-·-jasmine/jasmine&quot;&gt;jasmine/3.1.0.md at master · jasmine/jasmine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jasmine/jasmine/blob/master/release_notes/3.1.0.md&quot; title=&quot;jasmine/3.1.0.md at master · jasmine/jasmine&quot;&gt;github.com/jasmine/jasmine/blob/master/release_notes/3.1.0.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jasmine&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jasmine 3.1リリース。 matcherに&lt;code&gt;truthy&lt;/code&gt;、&lt;code&gt;falsy&lt;/code&gt;、&lt;code&gt;empty&lt;/code&gt;、&lt;code&gt;notEmpty&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe-v0.19.0-released---rapid-test-development-tool,-screenshots-of-page-elements,-etc-|-testcafe&quot;&gt;TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-19-0-released.html&quot; title=&quot;TestCafe v0.19.0 Released - Rapid Test Development Tool, Screenshots of Page Elements, etc | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/testcafe-v0-19-0-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TestCafe 0.19.0リリース。 ファイル監視し保存されたら再実行できる&lt;code&gt;testcafe-live&lt;/code&gt;コマンドの追加。 セレクタの結果をフィルターする&lt;code&gt;filterVisible&lt;/code&gt;と&lt;code&gt;filterHidden&lt;/code&gt;の追加、テキストマッチした要素を取得する&lt;code&gt;withExactText&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;demystifying-es6-classes-and-prototypal-inheritance-―-scotch&quot;&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Scotch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&quot; title=&quot;Demystifying ES6 Classes And Prototypal Inheritance ― Scotch&quot;&gt;scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES2015の&lt;code&gt;class&lt;/code&gt;構文についての解説。&lt;br&gt;
クラスの定義や使い方、継承について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-different-graphql-clients-–-itnext&quot;&gt;Exploring different GraphQL Clients – ITNEXT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://itnext.io/exploring-different-graphql-clients-d1bc69de305f&quot; title=&quot;Exploring different GraphQL Clients – ITNEXT&quot;&gt;itnext.io/exploring-different-graphql-clients-d1bc69de305f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLクライアントの紹介記事。&lt;br&gt;
FetchQL、GraphQL Request、Apollo Fetch、Lokka、Micro GraphQL React、URQL、Apollo Client、Relay Modernについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manual-typing-is-no-fun:-introducing-typewiz!-–-uri-shaked-–-medium&quot;&gt;Manual Typing is No Fun: Introducing TypeWiz! – Uri Shaked – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@urish/manual-typing-is-no-fun-introducing-typewiz-58e3e8813f4c&quot; title=&quot;Manual Typing is No Fun: Introducing TypeWiz! – Uri Shaked – Medium&quot;&gt;medium.com/@urish/manual-typing-is-no-fun-introducing-typewiz-58e3e8813f4c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型付けを補助するツール。&lt;br&gt;
webpackやnode hookを使い変換したコードを実行し、実行時の関数の引数、返り値、変数へ実際に入った値から型を推測する。&lt;br&gt;
その推測した型をTypeScriptのコードに対して適応することで型付けを補助する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-capacitor-1.0.0-alpha-|-the-official-ionic-blog&quot;&gt;Announcing Capacitor 1.0.0 Alpha | The Official Ionic Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.ionicframework.com/announcing-capacitor-1-0-0-alpha/&quot; title=&quot;Announcing Capacitor 1.0.0 Alpha | The Official Ionic Blog&quot;&gt;blog.ionicframework.com/announcing-capacitor-1-0-0-alpha/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ionicからクロスプラットフォームで動作するアプリ開発フレームワークのCapacitorがα版公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-v6で導入されるtree-shakable-diの紹介---らこらこブログ&quot;&gt;Angular v6で導入されるTree-Shakable DIの紹介 - らこらこブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://lacolaco.hatenablog.com/entry/2018/03/01/150847&quot; title=&quot;Angular v6で導入されるTree-Shakable DIの紹介 - らこらこブログ&quot;&gt;lacolaco.hatenablog.com/entry/2018/03/01/150847&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 6で導入される新しいDependency Injectionの仕組みと目的について。&lt;br&gt;
bundleする際のdead codeを削除し易い依存関係にしたDIの仕組み&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-frequently-faced-problems-–-samer-buna-–-medium&quot;&gt;React.js Frequently Faced Problems – Samer Buna – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@samerbuna/react-js-frequently-faced-problems-45e7060ef884&quot; title=&quot;React.js Frequently Faced Problems – Samer Buna – Medium&quot;&gt;medium.com/@samerbuna/react-js-frequently-faced-problems-45e7060ef884&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;初めてReactを使うときのRact/JSXのつまりどころについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;🌏-hello-world!-progressive-web-blog!!&quot;&gt;🌏 Hello World! Progressive Web-Blog!!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.uskay.io/article/001-pwa-blog-loading&quot; title=&quot;🌏 Hello World! Progressive Web-Blog!!&quot;&gt;blog.uskay.io/article/001-pwa-blog-loading&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsを使ったブログの開発とPRPL Patternでのパフォーマンス最適化について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyperhtmlやlit-htmlが効率的に再描画を行う仕組み---qiita&quot;&gt;hyperHTMLやlit-htmlが効率的に再描画を行う仕組み - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/rikuba/items/92da6d99e2b0f831cc65&quot; title=&quot;hyperHTMLやlit-htmlが効率的に再描画を行う仕組み - Qiita&quot;&gt;qiita.com/rikuba/items/92da6d99e2b0f831cc65&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;hyperHTMLやlit-htmlのDOM更新の仕組みについて。&lt;br&gt;
タグ付きテンプレート関数を使い、初回時に更新時はどの位置の要素を更新するかをマッピング、更新時はマッピングを元に要素/値の更新だけを行う。&lt;br&gt;
またテンプレートのキャッシュを利用し無駄なパースを避けるなどの工夫について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;loading-third-party-javascript- | -web-fundamentals- | -google-developers&quot;&gt;Loading Third-Party JavaScript  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/&quot; title=&quot;Loading Third-Party JavaScript  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;サードパーティスクリプトのパフォーマンスへの影響について。&lt;br&gt;
開発者ツールを使っての可視化、開発者ツールやWebPageTestでリクエストをブロックしての影響度の確認方法、Long Taskの確認方法、Resource Hintなどを使った改善方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-introducing-`npm-ci`-for-faster,-more-reliable...&quot;&gt;The npm Blog — Introducing `npm ci` for faster, more reliable...&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot; title=&quot;The npm Blog — Introducing \`npm ci\` for faster, more reliable...&quot;&gt;blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pacakge-lock.json&lt;/code&gt;から常にクリーンインストールする&lt;code&gt;npm ci&lt;/code&gt;について。&lt;br&gt;
現在の存在する&lt;code&gt;node_modules&lt;/code&gt;ディレクトリを削除し、&lt;code&gt;pacakge-lock.json&lt;/code&gt;を元にインストールするCI環境向けのインストールコマンド。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zkat/node-package-manager-benchmark/tree/zkat/cipm&quot; title=&quot;zkat/node-package-manager-benchmark at zkat/cipm&quot;&gt;zkat/node-package-manager-benchmark at zkat/cipm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#39;s-new-in-devtools-(chrome-66)- | -web- | -google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 66)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/02/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 66)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/02/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 66の開発者ツールの変更点について。&lt;br&gt;
ネットワークパネルからブラックボックススクリプト化を選択できるように、CSSファイルの変更のみだったLocal OverridesがHTML内のCSSにも対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack4への簡単なマイグレーションガイド---技術探し&quot;&gt;webpack4への簡単なマイグレーションガイド - 技術探し&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://abouthiroppy.hatenablog.jp/entry/migrate-to-webpack4&quot; title=&quot;webpack4への簡単なマイグレーションガイド - 技術探し&quot;&gt;abouthiroppy.hatenablog.jp/entry/migrate-to-webpack4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4の変更点とマイグレーションのために必要な変更について。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-components-で-社内-ui-ライブラリを作っている話&quot;&gt;Web Components で 社内 UI ライブラリを作っている話&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jmblog/web-components-de-she-nei-ui-raiburariwozuo-tuteiruhua-1&quot; title=&quot;Web Components で 社内 UI ライブラリを作っている話&quot;&gt;speakerdeck.com/jmblog/web-components-de-she-nei-ui-raiburariwozuo-tuteiruhua-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;プリミティブなコンポーネントをWebComponentとして作成することに関するスライド。&lt;br&gt;
ReactやAngularなど各種ライブラリから利用できる共通コンポーネントとして作成。&lt;br&gt;
&lt;code&gt;lit-html&lt;/code&gt;を使ったコンポーネントとスタイル、コンポーネントの配布の問題についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://custom-elements-everywhere.com/&quot; title=&quot;Custom Elements Everywhere&quot;&gt;Custom Elements Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jmblog.jp/posts/2018-02-15/lit-html-with-shadycss/&quot; title=&quot;lit-html と ShadyCSS - jmblog.jp&quot;&gt;lit-html と ShadyCSS - jmblog.jp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bit---the-fastest-way-to-share-code&quot;&gt;Bit - The fastest way to share code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsrc.io/&quot; title=&quot;Bit - The fastest way to share code&quot;&gt;bitsrc.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコード/コンポーネントシェアサービス。&lt;br&gt;
コンポーネントを管理/公開するCLIが用意されている。&lt;br&gt;
コンポーネントの公開/管理/発見の難しさの問題の解決を意図したサービス。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.bitsrc.io/how-to-publish-multiple-packages-from-any-repository-in-5-minutes-9aafd31d85b7&quot; title=&quot;How To “Publish” Multiple Packages From Any Repository In 5 Minutes&quot;&gt;How To “Publish” Multiple Packages From Any Repository In 5 Minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fabiandev/ts-runtime:-runtime-type-checks-for-typescript&quot;&gt;fabiandev/ts-runtime: Runtime Type Checks for TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fabiandev/ts-runtime&quot; title=&quot;fabiandev/ts-runtime: Runtime Type Checks for TypeScript&quot;&gt;github.com/fabiandev/ts-runtime&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのコードをランタイムチェックできるように変換するツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 06 Mar 2018 10:36:45 +0900</pubDate>
        <link>https://jser.info/2018/03/06/testcafe-v0.19.0-web-components/</link>
        <guid isPermaLink="true">https://jser.info/2018/03/06/testcafe-v0.19.0-web-components/</guid>
        
        <category>E2E</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-02-27のJS: webpack 4、プロファイルとパフォーマンス改善、KeyboardEvent.keyCodeの問題</title>
        <description>&lt;p&gt;JSer.info #372 - webpack 4が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-released-today-6cdb994702d4&quot;&gt;🎼webpack 4: released today!!✨ – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0&quot;&gt;Release v4.0.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ビルドパフォーマンスの改善、&lt;code&gt;mode&lt;/code&gt;オプションの追加、&lt;code&gt;CommonsChunkPlugin&lt;/code&gt;を廃止し代わりに&lt;code&gt;optimize&lt;/code&gt;オプションの追加、&lt;code&gt;.wasm&lt;/code&gt;、&lt;code&gt;.mjs&lt;/code&gt;などをEntry Pointとしてサポートなどが行われています。&lt;/p&gt;

&lt;p&gt;新しいプラグインシステムが導入され、plugin/loader周りに破壊的な変更が行われています。&lt;br&gt;
まだ、いくつかのplugin/loaderは4.xには対応していないものもあります。&lt;/p&gt;

&lt;p&gt;plugin/loader作者向けのマイグレーションガイドは次の記事で公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-migration-guide-for-plugins-loaders-20a79b927202&quot; title=&quot;webpack 4: migration guide for plugins/loaders – webpack – Medium&quot;&gt;webpack 4: migration guide for plugins/loaders – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html&quot; title=&quot;Maybe you don&amp;amp;#39;t need Rust and WASM to speed up your JS&quot;&gt;Maybe you don&amp;#39;t need Rust and WASM to speed up your JS&lt;/a&gt;という記事では、&lt;a href=&quot;https://twitter.com/mraleph&quot; title=&quot;@mraleph&quot;&gt;@mraleph&lt;/a&gt;さんがプロファイルを取りながらパフォーマンス改善を行うことについてを&lt;a href=&quot;https://github.com/mozilla/source-map&quot; title=&quot;mozilla/source-map&quot;&gt;mozilla/source-map&lt;/a&gt;を例に解説しています。&lt;/p&gt;

&lt;p&gt;最近、&lt;a href=&quot;https://github.com/mozilla/source-map&quot; title=&quot;mozilla/source-map&quot;&gt;mozilla/source-map&lt;/a&gt;は作者である&lt;a href=&quot;https://twitter.com/fitzgen&quot; title=&quot;@fitzgen&quot;&gt;@fitzgen&lt;/a&gt;さんによってWebAssembly + Rustに書き換えられパフォーマンスが改善されました。これについては次の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/&quot; title=&quot;Oxidizing Source Maps with Rust and WebAssembly – Mozilla Hacks – the Web developer blog&quot;&gt;Oxidizing Source Maps with Rust and WebAssembly – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;しかし&lt;a href=&quot;https://twitter.com/mraleph&quot; title=&quot;@mraleph&quot;&gt;@mraleph&lt;/a&gt;さんは、元となったJavaScript版での改善の余地について分析し、JavaScript版を元に改善のアプローチを3つのグループに分けて解説しています。&lt;br&gt;
この記事では&lt;code&gt;d8&lt;/code&gt;(V8)や&lt;code&gt;perf&lt;/code&gt;を使ったプロファイルを取りながら、言語やV8の実装など深いところまで見ていく形になっています。&lt;/p&gt;

&lt;p&gt;また、この記事に対して&lt;a href=&quot;https://twitter.com/fitzgen&quot; title=&quot;@fitzgen&quot;&gt;@fitzgen&lt;/a&gt;さんが&lt;a href=&quot;http://fitzgeraldnick.com/2018/02/26/speed-without-wizardry.html&quot; title=&quot;Speed Without Wizardry&quot;&gt;Speed Without Wizardry&lt;/a&gt;というレスポンス記事を書いているので併せて読むと良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://d-toybox.com/studio/lib/what_is_keyCode.html&quot; title=&quot;KeyboardEvent.keyCodeとは何か - WebStudio&quot;&gt;KeyboardEvent.keyCodeとは何か - WebStudio&lt;/a&gt;という記事では&lt;code&gt;KeyboardEvent.keyCode&lt;/code&gt;の歴史や問題点について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;KeyboardEvent.keyCode&lt;/code&gt;はブラウザやOS間で互換性の問題があり、また標準仕様がない問題について書かれています。&lt;br&gt;
&lt;code&gt;keyCode&lt;/code&gt;の代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key&quot; title=&quot;KeyboardEvent.key&quot;&gt;KeyboardEvent.key&lt;/a&gt;や&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/KeyboardEvent/code&quot; title=&quot;KeyboardEvent.code&quot;&gt;KeyboardEvent.code&lt;/a&gt;など仕様化されたものがあります。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest/changelog.md-at-v22.4.0-·-facebook/jest&quot;&gt;jest/CHANGELOG.md at v22.4.0 · facebook/jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jest/blob/v22.4.0/CHANGELOG.md&quot; title=&quot;jest/CHANGELOG.md at v22.4.0 · facebook/jest&quot;&gt;github.com/facebook/jest/blob/v22.4.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 22.4.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nohoist-in-workspaces-|-yarn-blog&quot;&gt;nohoist in Workspaces | Yarn Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2018/02/15/nohoist/&quot; title=&quot;nohoist in Workspaces | Yarn Blog&quot;&gt;yarnpkg.com/blog/2018/02/15/nohoist/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;yarn workspaceの&lt;code&gt;nohoist&lt;/code&gt;オプションについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.1.0-·-googlechrome/puppeteer&quot;&gt;Release v1.1.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.1.0&quot; title=&quot;Release v1.1.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;puppeteer 1.1.0リリース。&lt;br&gt;
Chromium 66.0.3348.0に更新、&lt;code&gt;BrowserFetcher&lt;/code&gt;、&lt;code&gt;page.waitForXPath&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;frame&lt;/code&gt;周りのイベントサポートの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-electron-v2.0.0-beta.1-·-electron/electron&quot;&gt;Release electron v2.0.0-beta.1 · electron/electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v2.0.0-beta.1&quot; title=&quot;Release electron v2.0.0-beta.1 · electron/electron&quot;&gt;github.com/electron/electron/releases/tag/v2.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron v2.0.0-beta.1リリース。&lt;br&gt;
Chrome 61.0.3163.10、Node 8.9.3に更新。&lt;br&gt;
非推奨のAPIの削除、&lt;code&gt;window.loadFile&lt;/code&gt;のサポート、Macでin-app purchaseのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.6.0-(current)-|-node.js&quot;&gt;Node v9.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.6.0/&quot; title=&quot;Node v9.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.6.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v9.6.0リリース。&lt;br&gt;
&lt;code&gt;asyncResource.emit{Before,After}&lt;/code&gt;が非推奨となり&lt;code&gt;asyncResource.runInAsyncScope&lt;/code&gt;を代わりに追加。&lt;br&gt;
Dynamic Importのサポート、&lt;code&gt;vm&lt;/code&gt;モジュールがES Moduleをサポート、&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-almin@0.16.0-·-almin/almin&quot;&gt;Release almin@0.16.0 · almin/almin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/almin/almin/releases/tag/almin%400.16.0&quot; title=&quot;Release almin@0.16.0 · almin/almin&quot;&gt;github.com/almin/almin/releases/tag/almin%400.16.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;almin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;almin 0.16.0リリース。&lt;br&gt;
&lt;code&gt;Context&lt;/code&gt;の&lt;code&gt;dispatcher&lt;/code&gt;がオプショナルな引数に変更、&lt;code&gt;almin-react-container&lt;/code&gt;のバグ修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;🎼webpack-4:-released-today!!✨-–-webpack-–-medium&quot;&gt;🎼webpack 4: released today!!✨ – webpack – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-released-today-6cdb994702d4&quot; title=&quot;🎼webpack 4: released today!!✨ – webpack – Medium&quot;&gt;medium.com/webpack/webpack-4-released-today-6cdb994702d4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4リリース。&lt;br&gt;
ビルドパフォーマンスの改善、&lt;code&gt;mode&lt;/code&gt;オプションの追加、&lt;code&gt;CommonsChunkPlugin&lt;/code&gt;の代わりに&lt;code&gt;optimize&lt;/code&gt;オプションの追加、&lt;code&gt;.wasm&lt;/code&gt;、&lt;code&gt;.mjs&lt;/code&gt;のサポートなど。&lt;br&gt;
新しいプラグインシステムが導入され、plugin/loader周りに破壊的な変更が行われている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · webpack/webpack&quot;&gt;Release v4.0.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-mode-and-optimization-5423a6bc597a&quot; title=&quot;webpack 4: mode and optimization – webpack – Medium&quot;&gt;webpack 4: mode and optimization – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-migration-guide-for-plugins-loaders-20a79b927202&quot; title=&quot;webpack 4: migration guide for plugins/loaders – webpack – Medium&quot;&gt;webpack 4: migration guide for plugins/loaders – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/webpack-4-release-what-is-new/&quot; title=&quot;Webpack 4.0 Release: What&amp;amp;amp;#39;s New?&quot;&gt;Webpack 4.0 Release: What&amp;#39;s New?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5.7.0-·-npm/npm&quot;&gt;Release v5.7.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v5.7.0&quot; title=&quot;Release v5.7.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v5.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 5.7プレリリース。&lt;br&gt;
package-lockのgit merge conflictを解決する&lt;code&gt;npm-merge-driver&lt;/code&gt;の公開、&lt;br&gt;
常にlock-fileのみを参照する&lt;code&gt;npm ci&lt;/code&gt;コマンドの追加など。&lt;br&gt;
5.7.0には&lt;code&gt;sudo&lt;/code&gt;利用時に問題があるため、5.7.1がリリースされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/npm-merge-driver&quot; title=&quot;npm-merge-driver&quot;&gt;npm-merge-driver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-promise.prototype.finally-in-node.js-|-www.thecodebarbarian.com&quot;&gt;Using Promise.prototype.finally in Node.js | www.thecodebarbarian.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://thecodebarbarian.com/using-promise-finally-in-node-js.html&quot; title=&quot;Using Promise.prototype.finally in Node.js | www.thecodebarbarian.com&quot;&gt;thecodebarbarian.com/using-promise-finally-in-node-js.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Promise#finally&lt;/code&gt;についての記事。&lt;br&gt;
Promiseの状態遷移や&lt;code&gt;finally&lt;/code&gt;の動作について。また&lt;code&gt;finally&lt;/code&gt;のハンドラでエラーが起きた際の動作について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;measuring-the-impact-of-3rd-party-tags-with-webpagetest---andy-davies&quot;&gt;Measuring the Impact of 3rd-Party Tags with WebPageTest - Andy Davies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://andydavies.me/blog/2018/02/19/using-webpagetest-to-measure-the-impact-of-3rd-party-tags/&quot; title=&quot;Measuring the Impact of 3rd-Party Tags with WebPageTest - Andy Davies&quot;&gt;andydavies.me/blog/2018/02/19/using-webpagetest-to-measure-the-impact-of-3rd-party-tags/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebPageTestを使ってサードパーティスクリプトがロードパフォーマンスにどのような影響を与えているかを比較する方法について。&lt;br&gt;
特定のリクエストをブロックした結果と比較する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;keyboardevent.keycodeとは何か---webstudio&quot;&gt;KeyboardEvent.keyCodeとは何か - WebStudio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://d-toybox.com/studio/lib/what_is_keyCode.html&quot; title=&quot;KeyboardEvent.keyCodeとは何か - WebStudio&quot;&gt;d-toybox.com/studio/lib/what_is_keyCode.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;キーボード&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;KeyboardEvent.keyCode&lt;/code&gt;の歴史や実装について。 &lt;code&gt;keyCode&lt;/code&gt;はOSやブラウザ間で問題があり標準化もされていないため、&lt;code&gt;key&lt;/code&gt;や&lt;code&gt;code&lt;/code&gt;を代わりに使うべきという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maybe-you-don&amp;#39;t-need-rust-and-wasm-to-speed-up-your-js&quot;&gt;Maybe you don&amp;#39;t need Rust and WASM to speed up your JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html&quot; title=&quot;Maybe you don&amp;#39;t need Rust and WASM to speed up your JS&quot;&gt;mrale.ph/blog/2018/02/03/maybe-you-dont-need-rust-to-speed-up-your-js.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;プロファイルを取りながらパフォーマンスを改善していく話。 Rust + wasmで書き直されたSource Mapライブラリを例に、JS版でのボトルネックを調べ改善していく話。 アルゴリズムの改善、言語に依存する問題、実装に依存する問題について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascriptの使い方&quot;&gt;ECMAScriptの使い方&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/2018/node/ecmascript39.html&quot; title=&quot;ECMAScriptの使い方&quot;&gt;azu.github.io/slide/2018/node/ecmascript39.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptのバージョンの歴史、なぜES2016以降の策定プロセスを変更したのかについて。&lt;br&gt;
各ブラウザ実装の比較、仕様やプロポーザルの調べ方や利用方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wedgetail&quot;&gt;Wedgetail&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wedgetail.js.org/index.html&quot; title=&quot;Wedgetail&quot;&gt;wedgetail.js.org/index.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コードの実行時間が期待値かをテストするライブラリ。 low、hight、averageを指定しコードの実行時間のテストを行える。 またパーセンタイルに対応している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;theia-ide/theia:-theia-is-a-cloud-&amp;amp;-desktop-ide-framework-implemented-in-typescript.&quot;&gt;theia-ide/theia: Theia is a cloud &amp;amp; desktop IDE framework implemented in TypeScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/theia-ide/theia&quot; title=&quot;theia-ide/theia: Theia is a cloud &amp;amp; desktop IDE framework implemented in TypeScript.&quot;&gt;github.com/theia-ide/theia&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;monaco-editorベースのCould IDE、Desktop IDE。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/monaco-editor&quot; title=&quot;Microsoft/monaco-editor: A browser based code editor&quot;&gt;Microsoft/monaco-editor: A browser based code editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-es2018-and-es2019&quot;&gt;Exploring ES2018 and ES2019&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://exploringjs.com/es2018-es2019/&quot; title=&quot;Exploring ES2018 and ES2019&quot;&gt;exploringjs.com/es2018-es2019/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Exploring ES2018 and ES2019が公開された&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 27 Feb 2018 11:15:36 +0900</pubDate>
        <link>https://jser.info/2018/02/27/webpack-4-keyboardevent.keycode/</link>
        <guid isPermaLink="true">https://jser.info/2018/02/27/webpack-4-keyboardevent.keycode/</guid>
        
        <category>webpack</category>
        
        <category>performance</category>
        
        <category>keyboard</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-02-20のJS: Ember 3.0、Propel MLでの機械学習</title>
        <description>&lt;p&gt;JSer.info #371 - Ember.js 3.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/02/14/ember-3-0-released.html&quot; title=&quot;Ember.js - Ember 3.0 Released&quot;&gt;Ember.js - Ember 3.0 Released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;スクリプトタブベースからEmber CLIベースを基本とする方針へ変更されています。&lt;br&gt;
3.0からはスクリプトタグから利用できるようにビルドしたものは公開しなくなっています。&lt;br&gt;
これは、&lt;a href=&quot;https://emberjs.com/blog/2017/10/10/glimmer-progress-report.html&quot; title=&quot;Glimmer.js&quot;&gt;Glimmer.js&lt;/a&gt;のようなAOTビルドによって最適化なども考慮し、ビルドプロセスを含むEmber CLI経由がデフォルトになったことを意味しています。&lt;/p&gt;

&lt;p&gt;また、Ember.js 2.xで非推奨となったAPIなどが削除されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://emberjs.com/deprecations/v2.x/&quot; title=&quot;Ember.js - Deprecations for v2.x&quot;&gt;Ember.js - Deprecations for v2.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://emberjs.com/deprecations/ember-data/v2.x/&quot; title=&quot;Ember.js - Deprecations for Ember Data v2.x&quot;&gt;Ember.js - Deprecations for Ember Data v2.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、2.xから3.xにマイグレーションを行うための補助ツールも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mixonic/ember-cli-deprecation-workflow&quot; title=&quot;mixonic/ember-cli-deprecation-workflow&quot;&gt;mixonic/ember-cli-deprecation-workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/emberjs/ember-2-legacy&quot; title=&quot;emberjs/ember-2-legacy&quot;&gt;emberjs/ember-2-legacy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript向けの機械学習ライブラリである&lt;a href=&quot;http://propelml.org/&quot; title=&quot;Propel ML&quot;&gt;Propel ML&lt;/a&gt;が公開されています。&lt;br&gt;
&lt;a href=&quot;http://propelml.org/&quot; title=&quot;Propel ML&quot;&gt;Propel ML&lt;/a&gt;はブラウザ、Node.jsどちらでも動くライブラリです。&lt;br&gt;
ブラウザでは&lt;a href=&quot;https://deeplearnjs.org/&quot; title=&quot;deeplearn.js&quot;&gt;deeplearn.js&lt;/a&gt;を利用し、Node.jsからは&lt;a href=&quot;https://www.tensorflow.org/install/install_c&quot;&gt;TensorFlowのC API&lt;/a&gt;を利用しています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;http://propelml.org/notebook/&quot; title=&quot;Propel Notebook&quot;&gt;Propel Notebook&lt;/a&gt;から試せますが、&lt;a href=&quot;https://github.com/HIPS/autograd&quot; title=&quot;autograd&quot;&gt;autograd&lt;/a&gt;のようなAPIもサポートしています。&lt;/p&gt;

&lt;p&gt;このライブラリは元々Node.jsの開発者である&lt;a href=&quot;https://github.com/ry&quot; title=&quot;Ryan Dahl&quot;&gt;Ryan Dahl&lt;/a&gt;と&lt;a href=&quot;https://github.com/piscisaureus&quot; title=&quot;Bert Belder&quot;&gt;Bert Belder&lt;/a&gt;によって作られています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember-3.0-released&quot;&gt;Ember.js - Ember 3.0 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/02/14/ember-3-0-released.html&quot; title=&quot;Ember.js - Ember 3.0 Released&quot;&gt;emberjs.com/blog/2018/02/14/ember-3-0-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.0リリース。&lt;br&gt;
Ember Data、Ember CLIもあわせて3.0に更新されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tell-ej:-echo-js,-a-status-update---echo-js&quot;&gt;Tell EJ: Echo JS, a status update - Echo JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.echojs.com/news/25644&quot; title=&quot;Tell EJ: Echo JS, a status update - Echo JS&quot;&gt;www.echojs.com/news/25644&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;echojsが再開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;normalize.css/changelog.md-at-8.0.0-·-necolas/normalize.css&quot;&gt;normalize.css/CHANGELOG.md at 8.0.0 · necolas/normalize.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/necolas/normalize.css/blob/8.0.0/CHANGELOG.md&quot; title=&quot;normalize.css/CHANGELOG.md at 8.0.0 · necolas/normalize.css&quot;&gt;github.com/necolas/normalize.css/blob/8.0.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;normalize.css 8.0.0リリース。&lt;br&gt;
Android 4、Safari 7、IE 9のサポート終了。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassembly-first-public-working-drafts-|-w3c-news&quot;&gt;WebAssembly First Public Working Drafts | W3C News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/6838&quot; title=&quot;WebAssembly First Public Working Drafts | W3C News&quot;&gt;www.w3.org/blog/news/archives/6838&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのFirst Public Working Draftsが公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;axios/changelog.md-at-v0.18.0-·-axios/axios&quot;&gt;axios/CHANGELOG.md at v0.18.0 · axios/axios&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/axios/axios/blob/v0.18.0/CHANGELOG.md&quot; title=&quot;axios/CHANGELOG.md at v0.18.0 · axios/axios&quot;&gt;github.com/axios/axios/blob/v0.18.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;axios 0.18.0リリース。&lt;br&gt;
Node.jsでUnix Socketのサポート、型定義の修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/issues/1333&quot; title=&quot;Umbrella issue for v1.0.0 · Issue #1333 · axios/axios&quot;&gt;Umbrella issue for v1.0.0 · Issue #1333 · axios/axios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;service-worker-スクリプトのインストールと更新処理&quot;&gt;Service Worker スクリプトのインストールと更新処理&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://nhiroki.jp/2018/02/15/service-worker-install-and-update-scripts&quot; title=&quot;Service Worker スクリプトのインストールと更新処理&quot;&gt;nhiroki.jp/2018/02/15/service-worker-install-and-update-scripts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Service Workerスクリプトのインストール、更新確認のロジック、キャッシュについて。&lt;br&gt;
&lt;code&gt;updateViaCache&lt;/code&gt;でのキャッシュを利用するかの設定、24時間以上経過した場合は必ずサーバへ更新確認を行うことについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;creating-and-publishing-web-components-with-stencil&quot;&gt;Creating and Publishing Web Components with Stencil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.twilio.com/blog/2018/02/creating-and-publishing-web-components-with-stencil.html&quot; title=&quot;Creating and Publishing Web Components with Stencil&quot;&gt;www.twilio.com/blog/2018/02/creating-and-publishing-web-components-with-stencil.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;stencilを使ったWeb Componentsをnpmに更新するチュートリアル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stenciljs.com/docs/distribution&quot; title=&quot;Distributing web components built with Stencil - Stencil&quot;&gt;Distributing web components built with Stencil - Stencil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lit-html-と-shadycss---jmblog.jp&quot;&gt;lit-html と ShadyCSS - jmblog.jp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jmblog.jp/posts/2018-02-15/lit-html-with-shadycss/&quot; title=&quot;lit-html と ShadyCSS - jmblog.jp&quot;&gt;jmblog.jp/posts/2018-02-15/lit-html-with-shadycss/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lit-htmlのShandyCSSサポートについて。&lt;br&gt;
lit-html+ShandyCSSでスタイルのカプセル化を行う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;“web-componentsだけ”-で新サービスを実装して見えたこと---qiita&quot;&gt;“Web Componentsだけ” で新サービスを実装して見えたこと - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/aggre/items/9d77085a32764ffe994d&quot; title=&quot;“Web Componentsだけ” で新サービスを実装して見えたこと - Qiita&quot;&gt;qiita.com/aggre/items/9d77085a32764ffe994d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;lit-html&lt;/code&gt;を使ったWeb Componentsでのウェブアプリ開発について。&lt;br&gt;
Custom Elementをwidgetとして利用することについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescriptの型入門---qiita&quot;&gt;TypeScriptの型入門 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/uhyo/items/e2fdef2d3236b9bfe74a&quot; title=&quot;TypeScriptの型入門 - Qiita&quot;&gt;qiita.com/uhyo/items/e2fdef2d3236b9bfe74a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TyepScriptの型定義についての記事。&lt;br&gt;
基本的なプリミティブ、オブジェクト、関数などの型の書き方や意味の説明、特殊な型定義などについてを説明している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-–-next.js-5:-universal-webpack,-css-imports,-plugins-and-zones&quot;&gt;ZEIT – Next.js 5: Universal Webpack, CSS Imports, Plugins and Zones&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zeit.co/blog/next5&quot; title=&quot;ZEIT – Next.js 5: Universal Webpack, CSS Imports, Plugins and Zones&quot;&gt;zeit.co/blog/next5&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 5.0リリース。&lt;br&gt;
Universal Webpack、CSSやpreact、TypeScriptなどをオプトインでサポートするプラグイン機構の導入、ビルドの高速化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;replacing-jquery-with-vue.js:-no-build-step-necessary-—-smashing-magazine&quot;&gt;Replacing jQuery With Vue.js: No Build Step Necessary — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/02/jquery-vue-javascript/&quot; title=&quot;Replacing jQuery With Vue.js: No Build Step Necessary — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/02/jquery-vue-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryで書いたシンプルなフォームをVueに置き換えていくチュートリアル。&lt;br&gt;
jQueryとVueでのやり方をそれぞれ紹介しながら書き換えている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;micro-benchmarking-is-hard-(inside-frontend-2,-2018-feb)---google-スライド&quot;&gt;Micro-benchmarking is Hard (Inside Frontend 2, 2018 Feb) - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1MXlFGqFQFJByv8k6Ege0pt0GwJQqbjoh7GdIYia9UQg/edit#slide=id.p&quot; title=&quot;Micro-benchmarking is Hard (Inside Frontend 2, 2018 Feb) - Google スライド&quot;&gt;docs.google.com/presentation/d/1MXlFGqFQFJByv8k6Ege0pt0GwJQqbjoh7GdIYia9UQg/edit#slide&amp;#x3D;id.p&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;マイクロベンチマークの難しさについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs/webpack-libs-optimizations:-using-a-library-in-your-webpack-project?-here’s-how-to-optimize-it&quot;&gt;GoogleChromeLabs/webpack-libs-optimizations: Using a library in your webpack project? Here’s how to optimize it&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/webpack-libs-optimizations&quot; title=&quot;GoogleChromeLabs/webpack-libs-optimizations: Using a library in your webpack project? Here’s how to optimize it&quot;&gt;github.com/GoogleChromeLabs/webpack-libs-optimizations&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackを使ったプロジェクトの最適化について。&lt;br&gt;
不要な依存を削除してファイルサイズの削減する方法や、代替手段やマイグレーション方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;photonstorm/phaser:-phaser-is-a-fun,-free-and-fast-2d-game-framework-for-making-html5-games-for-desktop-and-mobile-web-browsers,-supporting-canvas-and-webgl-rendering.&quot;&gt;photonstorm/phaser: Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/photonstorm/phaser&quot; title=&quot;photonstorm/phaser: Phaser is a fun, free and fast 2D game framework for making HTML5 games for desktop and mobile web browsers, supporting Canvas and WebGL rendering.&quot;&gt;github.com/photonstorm/phaser&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;phaser 3.0.0がリリースされた&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-contrib/webpack-stylish:-a-stylish,-optionated-reporter-for-webpack&quot;&gt;webpack-contrib/webpack-stylish: A stylish, optionated reporter for webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack-contrib/webpack-stylish&quot; title=&quot;webpack-contrib/webpack-stylish: A stylish, optionated reporter for webpack&quot;&gt;github.com/webpack-contrib/webpack-stylish&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackのビルド結果の出力を&lt;code&gt;stylish&lt;/code&gt;形式にするプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;propel-ml&quot;&gt;Propel ML&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://propelml.org/&quot; title=&quot;Propel ML&quot;&gt;propelml.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;numpyライクなGPUバックエンドを提供するライブラリ。&lt;br&gt;
ブラウザとNode.jsどちらでも動作する。&lt;br&gt;
Ryan DahlとBert Belderが開発している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;busterc/nvx:-run-commands-on-multiple-node-versions-as-specified-from-.travis.yml,-circle.yml-or-arguments;-uses-npx-and-is-ideal-for-testing.&quot;&gt;busterc/nvx: Run commands on multiple node versions as specified from .travis.yml, circle.yml or arguments; uses npx and is ideal for testing.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/busterc/nvx&quot; title=&quot;busterc/nvx: Run commands on multiple node versions as specified from .travis.yml, circle.yml or arguments; uses npx and is ideal for testing.&quot;&gt;github.com/busterc/nvx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;指定したNode.jsのバージョンを使ってコマンドを実行できるツール。&lt;br&gt;
npmに公開されているNode.jsバイナリを&lt;code&gt;npx&lt;/code&gt;経由で実行する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist/franxx:-a-vanilla-javascript-router-that-works-everywhere.&quot;&gt;egoist/franxx: A vanilla JavaScript router that works everywhere.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/franxx&quot; title=&quot;egoist/franxx: A vanilla JavaScript router that works everywhere.&quot;&gt;github.com/egoist/franxx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;特定のフレームワークに依存しないルーターライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blotter.js&quot;&gt;Blotter.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blotter.js.org/&quot; title=&quot;Blotter.js&quot;&gt;blotter.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;example&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;テキストにエフェクトを与えるライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Feb 2018 11:48:02 +0900</pubDate>
        <link>https://jser.info/2018/02/20/ember-3.0-propel-ml/</link>
        <guid isPermaLink="true">https://jser.info/2018/02/20/ember-3.0-propel-ml/</guid>
        
        <category>ember</category>
        
        <category>ML</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-02-13のJS: Inferno v4、SafariでのService Worker、Eloquent JavaScript第三版</title>
        <description>&lt;p&gt;JSer.info #370 - ReactライクなAPIをもつInferno v4がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/releases/tag/v4.0.2&quot; title=&quot;Release Inferno v4 · infernojs/inferno&quot;&gt;Release Inferno v4 · infernojs/inferno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Inferno.createPortal&lt;/code&gt;の追加、&lt;a href=&quot;https://github.com/infernojs/inferno/tree/master/packages/inferno-router&quot; title=&quot;inferno-router&quot;&gt;inferno-router&lt;/a&gt;がReact Router v4相当に、MobxやReduxとの連携の更新などが行われています。&lt;br&gt;
主にモジュール分割の破壊的な変更もあり、その詳細は次のマイグレーションガイドにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/blob/master/docs/v4-migration.md&quot; title=&quot;inferno/v4-migration.md at master · infernojs/inferno&quot;&gt;inferno/v4-migration.md at master · infernojs/inferno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8090/workers-at-your-service/&quot; title=&quot;Workers at Your Service | WebKit&quot;&gt;Workers at Your Service | WebKit&lt;/a&gt;という記事では、&lt;a href=&quot;https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html&quot; title=&quot;Safari 11.1&quot;&gt;Safari 11.1&lt;/a&gt;(beta)に実装されたService Workerについて解説されています。&lt;/p&gt;

&lt;p&gt;仕様的な面やSafariでの実装、キャッシュの保存場所や削除方法について書かれています。&lt;br&gt;
Safari 11.1では数週間利用されていないService Workerやキャッシュが自動的に削除される、キャッシュサイズは50MB/partitionに制限されている点などについても書かれています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://medium.com/@firt/pwas-are-coming-to-ios-11-3-cupertino-we-have-a-problem-2ff49fd7d6ea&quot; title=&quot;PWAs are coming to iOS 11.3: Cupertino, we have a problem&quot;&gt;PWAs are coming to iOS 11.3: Cupertino, we have a problem&lt;/a&gt;という別の記事では、Safariと他のブラウザとの実装が異なる点や、ホームスクリーンアプリとした時のWeb App Manifestの対応、注意点についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://eloquentjavascript.net/3rd_edition/&quot; title=&quot;Eloquent JavaScript&quot;&gt;Eloquent JavaScript&lt;/a&gt;の第三版のドラフト版が公開されました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;You&amp;#39;re all invited to read the full draft of Eloquent JavaScript&amp;#39;s 3rd edition: &lt;a href=&quot;https://t.co/8M5hp5awU2&quot;&gt;https://t.co/8M5hp5awU2&lt;/a&gt;&lt;br&gt;&lt;br&gt;Finishing touches are still ongoing, but this should be a readable text.&lt;/p&gt;&amp;mdash; Marijn Haverbeke (@MarijnJH) &lt;a href=&quot;https://twitter.com/MarijnJH/status/958665332448784384?ref_src=twsrc%5Etfw&quot;&gt;January 31, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;JavaScriptやプログラミングについてを学ぶ書籍です。&lt;br&gt;
間違いやtypoを見つけた場合は&lt;a href=&quot;https://github.com/marijnh/Eloquent-JavaScript/issues&quot;&gt;Issue&lt;/a&gt;から報告できます。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest/changelog.md-at-v22.2.0-·-facebook/jest&quot;&gt;jest/CHANGELOG.md at v22.2.0 · facebook/jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jest/blob/v22.2.0/CHANGELOG.md&quot; title=&quot;jest/CHANGELOG.md at v22.2.0 · facebook/jest&quot;&gt;github.com/facebook/jest/blob/v22.2.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 22.2.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;browserify/changelog.markdown-at-v16.0.0-·-browserify/browserify&quot;&gt;browserify/changelog.markdown at v16.0.0 · browserify/browserify&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/browserify/browserify/blob/v16.0.0/changelog.markdown&quot; title=&quot;browserify/changelog.markdown at v16.0.0 · browserify/browserify&quot;&gt;github.com/browserify/browserify/blob/v16.0.0/changelog.markdown&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Browserify 16.0.0リリース。&lt;br&gt;
&lt;code&gt;--preserve-symlinks&lt;/code&gt;のサポート、&lt;code&gt;events&lt;/code&gt;のshimを更新、&lt;code&gt;--node&lt;/code&gt;オプションを渡したときに&lt;code&gt;__dirname&lt;/code&gt;と&lt;code&gt;__filename&lt;/code&gt;を動的に設定するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-what’s-new-in-chromium-64-and-opera-51&quot;&gt;Dev.Opera — What’s new in Chromium 64 and Opera 51&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-51/&quot; title=&quot;Dev.Opera — What’s new in Chromium 64 and Opera 51&quot;&gt;dev.opera.com/blog/opera-51/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Opera 51 (based on Chromium 64)リリース。&lt;br&gt;
Resize Observer、&lt;code&gt;import.meta&lt;/code&gt;、ES2018の正規表現の実装、AudioWorkletのフラグ付き実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-49-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 49 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8088/release-notes-for-safari-technology-preview-49/&quot; title=&quot;Release Notes for Safari Technology Preview 49 | WebKit&quot;&gt;webkit.org/blog/8088/release-notes-for-safari-technology-preview-49/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 49リリース。&lt;br&gt;
Service Worker、Fetchのバグ修正、ITPにデバッグモードを試験的に追加、Media Queryで&lt;code&gt;calc()&lt;/code&gt;をサポート。&lt;br&gt;
&lt;code&gt;String#trimStart&lt;/code&gt;、json superset proposalの実装など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot; title=&quot;tc39/proposal-json-superset: Proposal to make all JSON text valid ECMA-262&quot;&gt;tc39/proposal-json-superset: Proposal to make all JSON text valid ECMA-262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-65-beta:-css-paint-api-and-the-servertiming-api&quot;&gt;Chromium Blog: Chrome 65 Beta: CSS Paint API and the ServerTiming API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2018/02/chrome-65-beta-css-paint-api-and.html&quot; title=&quot;Chromium Blog: Chrome 65 Beta: CSS Paint API and the ServerTiming API&quot;&gt;blog.chromium.org/2018/02/chrome-65-beta-css-paint-api-and.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 65 Betaリリース。&lt;br&gt;
CSS Paint API、Server Timing API、Feature-Policyの&lt;code&gt;sync-xhr&lt;/code&gt;をサポート、TLS 1.3(draft-23)のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eloquent-javascript&quot;&gt;Eloquent JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eloquentjavascript.net/3rd_edition/&quot; title=&quot;Eloquent JavaScript&quot;&gt;eloquentjavascript.net/3rd_edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Eloquent JavaScripの第3版が公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;canjs-4.0&quot;&gt;CanJS 4.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bitovi.com/blog/canjs-4.0&quot; title=&quot;CanJS 4.0&quot;&gt;www.bitovi.com/blog/canjs-4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CanJS 4.0リリース。&lt;br&gt;
デバッグツールの追加、テンプレートの記法を統一、ProxyとクラスベースのObservableオブジェクトの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-inferno-v4-·-infernojs/inferno&quot;&gt;Release Inferno v4 · infernojs/inferno&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/releases/tag/v4.0.2&quot; title=&quot;Release Inferno v4 · infernojs/inferno&quot;&gt;github.com/infernojs/inferno/releases/tag/v4.0.2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Inferno v4リリース。&lt;br&gt;
&lt;code&gt;Inferno.Component&lt;/code&gt;は&lt;code&gt;inferno&lt;/code&gt;パッケージに移動、&lt;code&gt;findDOMNode&lt;/code&gt;は&lt;code&gt;inferno-compat&lt;/code&gt;パッケージに移動。&lt;br&gt;
&lt;code&gt;createPortal&lt;/code&gt;のサポート、RouterがReact Router v4と同じAPIに変更、Mobx、Redux連携の更新、IE9+のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/blob/master/docs/v4-migration.md&quot; title=&quot;inferno/v4-migration.md at master · infernojs/inferno&quot;&gt;inferno/v4-migration.md at master · infernojs/inferno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;echo-js-on-twitter:-&amp;quot;echo-js,-2011-2018---https://t.co/veiefdntf8&amp;quot;&quot;&gt;Echo JS on Twitter: &amp;quot;Echo JS, 2011-2018 - https://t.co/vEiEFdntF8&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/echojs/status/962996800738258945&quot; title=&quot;Echo JS on Twitter: \&amp;quot;Echo JS, 2011-2018 - https://t.co/vEiEFdntF8\&amp;quot;&quot;&gt;twitter.com/echojs/status/962996800738258945&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;echojs.com が閉鎖された&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p lang=&quot;pt&quot; dir=&quot;ltr&quot;&gt;Echo JS, 2011-2018 - &lt;a href=&quot;https://t.co/vEiEFdntF8&quot;&gt;https://t.co/vEiEFdntF8&lt;/a&gt;&lt;/p&gt;&amp;mdash; Echo JS (@echojs) &lt;a href=&quot;https://twitter.com/echojs/status/962996800738258945?ref_src=twsrc%5Etfw&quot;&gt;February 12, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;なぜプロダクトに-vue.js-を採用したのか?-運用してみてどうっだった?-という話-|-nagisaのすゝめ&quot;&gt;なぜプロダクトに Vue.js を採用したのか? 運用してみてどうっだった? という話 | Nagisaのすゝめ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.nagisa-inc.jp/archives/2980&quot; title=&quot;なぜプロダクトに Vue.js を採用したのか? 運用してみてどうっだった? という話 | Nagisaのすゝめ&quot;&gt;blog.nagisa-inc.jp/archives/2980&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Riotで作られていたサイトをVueでリニューアルした話。&lt;br&gt;
Vueの特徴、ルータ、ステート管理、メリット、デメリットについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;welcoming-progressive-web-apps-to-microsoft-edge-and-windows-10---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;Welcoming Progressive Web Apps to Microsoft Edge and Windows 10 - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/02/06/welcoming-progressive-web-apps-edge-windows-10/&quot; title=&quot;Welcoming Progressive Web Apps to Microsoft Edge and Windows 10 - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2018/02/06/welcoming-progressive-web-apps-edge-windows-10/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Microsoft StoreにPWAアプリを登録できるようになる。&lt;br&gt;
また、BingでPWAアプリのクロールを行い一定の条件を満たしたものを表示する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pwabuilder.com/generator&quot; title=&quot;PWABuilder&quot;&gt;PWABuilder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pwas-are-coming-to-ios-11.3:-cupertino,-we-have-a-problem&quot;&gt;PWAs are coming to iOS 11.3: Cupertino, we have a problem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@firt/pwas-are-coming-to-ios-11-3-cupertino-we-have-a-problem-2ff49fd7d6ea&quot; title=&quot;PWAs are coming to iOS 11.3: Cupertino, we have a problem&quot;&gt;medium.com/@firt/pwas-are-coming-to-ios-11-3-cupertino-we-have-a-problem-2ff49fd7d6ea&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 11.1で実装されたService Workerについて。&lt;br&gt;
数週間使わてないService Workerは自動的に削除される点やWeb App Manifestのサポート、ホームスクリーンアプリとしての動作で注意する点などについて書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/8090/workers-at-your-service/&quot; title=&quot;Workers at Your Service | WebKit&quot;&gt;Workers at Your Service | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction- | -web-fundamentals- | -google-developers&quot;&gt;Introduction  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/webpack/&quot; title=&quot;Introduction  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/webpack/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackを使った場合に置けるコードの最適化についての記事。&lt;br&gt;
コード分割やキャッシュ、分析や計測などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hygen&quot;&gt;Hygen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hygen.io/&quot; title=&quot;Hygen&quot;&gt;www.hygen.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コードジェネレートツール。&lt;br&gt;
テンプレートからコードを生成できる。&lt;br&gt;
YAML Frontmatterでメタデータの定義、ejsでテンプレートの記述、特定の依存がある場合に動作するhook処理などを書ける&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jake-archibald:-in-the-loop---jsconf.asia-2018---youtube&quot;&gt;Jake Archibald: In The Loop - JSConf.Asia 2018 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cCOL7MC4Pl0&quot; title=&quot;Jake Archibald: In The Loop - JSConf.Asia 2018 - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;cCOL7MC4Pl0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのイベントループについての発表。&lt;br&gt;
&lt;code&gt;setTimeout&lt;/code&gt;、&lt;code&gt;requestAnimationFrame&lt;/code&gt;の違い。&lt;br&gt;
イベントループとスタイルの変更の反映のタイミングについて。それぞれを可視化しながら解説している。&lt;br&gt;
また、PromiseなどのMicroTaskとの処理順について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconf.asia-2018---youtube&quot;&gt;JSConf.Asia 2018 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list=PL37ZVnwpeshFqN5dcZ704lxI3F5iHDYkl&quot; title=&quot;JSConf.Asia 2018 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL37ZVnwpeshFqN5dcZ704lxI3F5iHDYkl&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSConf.Asia 2018の動画が公開された&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2018.jsconf.asia/&quot; title=&quot;JSConf.Asia Singapore 2018&quot;&gt;JSConf.Asia Singapore 2018&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-assembly-studio&quot;&gt;Web Assembly Studio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webassembly.studio/&quot; title=&quot;Web Assembly Studio&quot;&gt;webassembly.studio/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CなどでWebAssembly向けのコードを書いて、コンパイル実行できるエディタツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/unstated:-state-that-goes-without-saying&quot;&gt;thejameskyle/unstated: State that goes without saying&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/unstated&quot; title=&quot;thejameskyle/unstated: State that goes without saying&quot;&gt;github.com/thejameskyle/unstated&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactの新しいContext APIを使ったステート管理ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vimeosmashing-magazine&quot;&gt;VimeoSmashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vimeo.com/smashingmagazine&quot; title=&quot;VimeoSmashing Magazine&quot;&gt;vimeo.com/smashingmagazine&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SmashingConf London 2018の動画が公開された&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 13 Feb 2018 11:04:48 +0900</pubDate>
        <link>https://jser.info/2018/02/13/inferno-v4-safariservice-worker-eloquent-javascript/</link>
        <guid isPermaLink="true">https://jser.info/2018/02/13/inferno-v4-safariservice-worker-eloquent-javascript/</guid>
        
        <category>React</category>
        
        <category>inferno</category>
        
        <category>Safari</category>
        
        <category>book</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-02-05のJS: AVA 1.0.0β、TypeScript 2.7、MDNのブラウザ互換性情報</title>
        <description>&lt;p&gt;JSer.info #369 - テストフレームワークの&lt;a href=&quot;https://github.com/avajs/ava&quot; title=&quot;AVA&quot;&gt;AVA&lt;/a&gt; 1.0.0βが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.0-beta.1&quot; title=&quot;Release 1.0.0-beta.1 · avajs/ava&quot;&gt;Release 1.0.0-beta.1 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 7βを利用するようになり、その影響で&lt;code&gt;powerAssert&lt;/code&gt;など既存の変換オプションなどが変更されています。&lt;br&gt;
&lt;code&gt;babel&lt;/code&gt;と&lt;code&gt;compileEnhancements&lt;/code&gt;オプションで統一的に管理されるようになっていて、どちらも&lt;code&gt;false&lt;/code&gt;にすればBabelを使った変換を一切行わないようになりました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ava&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;babel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;compileEnhancements&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/issues/1556&quot; title=&quot;No transpile option · Issue #1556 · avajs/ava&quot;&gt;No transpile option · Issue #1556 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;code&gt;test&lt;/code&gt;関数がテストタイトルとなるものが必須となり、次のように名前のない関数だけを渡した&lt;code&gt;test&lt;/code&gt;は利用できなくなりました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// エラー&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;AVA 1.0.0βは&lt;code&gt;ava@next&lt;/code&gt;で試すことができます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install ava@next
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;TypeScript 2.7がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/&quot; title=&quot;Announcing TypeScript 2.7 | TypeScript&quot;&gt;Announcing TypeScript 2.7 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;strict&lt;/code&gt;の挙動にクラスのフィールドの初期化チェックを厳密に行う&lt;code&gt;strictPropertyInitialization&lt;/code&gt;の追加やDefinite assignment assertions(&lt;code&gt;!&lt;/code&gt;)の追加、&lt;code&gt;--esModuleInterop&lt;/code&gt;を追加しdefault exportするcommonjsとのinteropの改善などが行われています。&lt;/p&gt;

&lt;p&gt;詳しくは次の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/3a1e628e53a5dd99dfe0&quot; title=&quot;TypeScript 2.7.1 変更点 - Qiita&quot;&gt;TypeScript 2.7.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/02/mdn-browser-compatibility-data/&quot; title=&quot;MDN browser compatibility data: Taking the guesswork out of web compatibility – Mozilla Hacks – the Web developer blog&quot;&gt;MDN browser compatibility data: Taking the guesswork out of web compatibility – Mozilla Hacks – the Web developer blog&lt;/a&gt;という記事ではMDNが表示しているブラウザの互換性データについて書かれています。&lt;/p&gt;

&lt;p&gt;MDNの機能のリファレンスページにはその機能をサポートしてるブラウザやバージョンの一覧が表示されています。&lt;br&gt;
このデータは&lt;a href=&quot;https://www.npmjs.com/package/mdn-browser-compat-data&quot; title=&quot;mdn-browser-compat-data&quot;&gt;mdn-browser-compat-data&lt;/a&gt;というnpmパッケージからも利用できるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot; title=&quot;mdn/browser-compat-data: This repository contains compatibility data for Web technologies as displayed on MDN&quot;&gt;mdn/browser-compat-data: This repository contains compatibility data for Web technologies as displayed on MDN&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;データを管理するGitHubリポジトリ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事ではこれらのデータを活用方法などについて紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.5.0-(current)-|-node.js&quot;&gt;Node v9.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.5.0/&quot; title=&quot;Node v9.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.5.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v9.5.0リリース。&lt;br&gt;
&lt;code&gt;performance.clearEntries(name)&lt;/code&gt;のサポート、&lt;code&gt;cluster.settings&lt;/code&gt;に&lt;code&gt;cwd&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.7-|-typescript&quot;&gt;Announcing TypeScript 2.7 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/&quot; title=&quot;Announcing TypeScript 2.7 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.7リリース。&lt;br&gt;
クラスプロパティのStrictオプションの追加、Definite assignment assertions(&lt;code&gt;!&lt;/code&gt;)の追加、&lt;code&gt;--esModuleInterop&lt;/code&gt;を追加しdefault exportするcommonjsとのinteropの改善。&lt;br&gt;
Tuple、&lt;code&gt;in&lt;/code&gt;、&lt;code&gt;instanceof&lt;/code&gt;、オブジェクトリテラルの型改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/3a1e628e53a5dd99dfe0&quot; title=&quot;TypeScript 2.7.1 変更点 - Qiita&quot;&gt;TypeScript 2.7.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1.0.0-beta.1-·-avajs/ava&quot;&gt;Release 1.0.0-beta.1 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.0-beta.1&quot; title=&quot;Release 1.0.0-beta.1 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v1.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 1.0.0β1リリース。&lt;br&gt;
Babel 7βを利用するように、&lt;code&gt;test&lt;/code&gt;がテストタイトルを必須に、&lt;code&gt;powerAssert&lt;/code&gt;の無効オプションは、&lt;code&gt;babel&lt;/code&gt;と&lt;code&gt;compileEnhancements&lt;/code&gt;オプションで管理されるように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/issues/1556&quot; title=&quot;No transpile option · Issue #1556 · avajs/ava&quot;&gt;No transpile option · Issue #1556 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-v6.5&quot;&gt;V8 JavaScript Engine: V8 release v6.5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8project.blogspot.com/2018/02/v8-release-65.html&quot; title=&quot;V8 JavaScript Engine: V8 release v6.5&quot;&gt;v8project.blogspot.com/2018/02/v8-release-65.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 6.5リリース。&lt;br&gt;
Unstruted code modeがデフォルトで有効化、WebAssemblyのStreaming compilationのサポート、Arrayメソッドの改善、疎の配列の改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/v8/v8/wiki/Untrusted-code-mitigations&quot; title=&quot;Untrusted code mitigations · v8/v8 Wiki&quot;&gt;Untrusted code mitigations · v8/v8 Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-4.0-release:-what’s-new?&quot;&gt;Bootstrap 4.0 Release: What’s New?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/whats-new-in-bootstrap4/&quot; title=&quot;Bootstrap 4.0 Release: What’s New?&quot;&gt;auth0.com/blog/whats-new-in-bootstrap4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BootStrap 4.0の変更点についての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stimulus-1.0:-a-modest-javascript-framework-for-the-html-you-already-have&quot;&gt;Stimulus 1.0: A modest JavaScript framework for the HTML you already have&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://m.signalvnoise.com/stimulus-1-0-a-modest-javascript-framework-for-the-html-you-already-have-f04307009130&quot; title=&quot;Stimulus 1.0: A modest JavaScript framework for the HTML you already have&quot;&gt;m.signalvnoise.com/stimulus-1-0-a-modest-javascript-framework-for-the-html-you-already-have-f04307009130&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Stimulus 1.0リリース。&lt;br&gt;
RailsのTurbolinksと共存して動作できるJavaScriptフレームワーク。&lt;br&gt;
HTMLなテンプレートとJavaScriptなコントローラーを組み合わせてアプリケーションを作る。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;automatic-visual-diffing-with-puppeteer-–-monica-dinculescu&quot;&gt;Automatic visual diffing with Puppeteer – Monica Dinculescu&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://meowni.ca/posts/2017-puppeteer-tests/&quot; title=&quot;Automatic visual diffing with Puppeteer – Monica Dinculescu&quot;&gt;meowni.ca/posts/2017-puppeteer-tests/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteerを使ったVisual Diffテストについて。&lt;br&gt;
スクリーンショットをPixelmatchで比較し、画像のDiffを元にテストする話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-react-easy-state-|-@risingstack&quot;&gt;Introducing React Easy State | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.risingstack.com/introducing-react-easy-state/&quot; title=&quot;Introducing React Easy State | @RisingStack&quot;&gt;blog.risingstack.com/introducing-react-easy-state/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Proxyを使ったステート管理ライブラリについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/solkimicreb/react-easy-state&quot; title=&quot;solkimicreb/react-easy-state: Simple React state management. Made with ❤️ and ES6 Proxies.&quot;&gt;solkimicreb/react-easy-state: Simple React state management. Made with ❤️ and ES6 Proxies.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-javascript-with-a-real-debugger-you-did-not-know-you-already-have-—-smashing-magazine&quot;&gt;Debugging JavaScript With A Real Debugger You Did Not Know You Already Have — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/02/javascript-firefox-debugger/&quot; title=&quot;Debugging JavaScript With A Real Debugger You Did Not Know You Already Have — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/02/javascript-firefox-debugger/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefoxの開発者ツールの紹介と&lt;code&gt;debugger.html&lt;/code&gt;について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jestなどを使わずにスナップショットテストを書く-|-web-scratch&quot;&gt;Jestなどを使わずにスナップショットテストを書く | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2018/02/02/snapshot-test/&quot; title=&quot;Jestなどを使わずにスナップショットテストを書く | Web Scratch&quot;&gt;efcl.info/2018/02/02/snapshot-test/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;特別なライブラリを使わずにスナップショットテストを実装する方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-your-npm-package-before-releasing-it-using-verdaccio-+-ngrok&quot;&gt;Testing your npm package before releasing it using Verdaccio + ngrok&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.strapi.io/testing-npm-package-before-releasing-it-using-verdaccio-and-ngrok/&quot; title=&quot;Testing your npm package before releasing it using Verdaccio + ngrok&quot;&gt;blog.strapi.io/testing-npm-package-before-releasing-it-using-verdaccio-and-ngrok/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージをpublishする前にテスト方法について。&lt;br&gt;
Private npm registryであるVerdaccioにpublishして、localhostトンネルであるngrokを使ってテストするという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-css-performance-with-chrome’s-profiling-tools---ada-developers-academy&quot;&gt;Debugging CSS Performance with Chrome’s Profiling Tools - Ada Developers Academy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://adadevacademy.tumblr.com/post/170121818942/debugging-css-performance-with-chromes-profiling&quot; title=&quot;Debugging CSS Performance with Chrome’s Profiling Tools - Ada Developers Academy&quot;&gt;adadevacademy.tumblr.com/post/170121818942/debugging-css-performance-with-chromes-profiling&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのパフォーマンス問題について。&lt;br&gt;
Reactの問題かと疑って色々試した結果、CSSのレンダリングの問題であったケースについて。&lt;br&gt;
インラインCSS、gradientを直すことで改善されたが、開発者ツールではこの問題がどう見えていたかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-node-clinic---a-performance-toolkit-for-node.js-developers-|-nearform&quot;&gt;Introducing Node Clinic - A performance toolkit for Node.js developers | nearForm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.nearform.com/blog/introducing-node-clinic-a-performance-toolkit-for-node-js-developers/&quot; title=&quot;Introducing Node Clinic - A performance toolkit for Node.js developers | nearForm&quot;&gt;www.nearform.com/blog/introducing-node-clinic-a-performance-toolkit-for-node-js-developers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsアプリのパフォーマンスモニタリングツールであるClinicについて。&lt;br&gt;
ダッシュボードでCPU、メモリ、イベントループの遅延などを見ることができる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nearform/node-clinic&quot; title=&quot;nearform/node-clinic: Clinic diagnoses your Node.js performance issues&quot;&gt;nearform/node-clinic: Clinic diagnoses your Node.js performance issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-javascript-works:-the-building-blocks-of-web-workers-+-5-cases-when-you-should-use-them&quot;&gt;How JavaScript works: The building blocks of Web Workers + 5 cases when you should use them&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sessionstack.com/how-javascript-works-the-building-blocks-of-web-workers-5-cases-when-you-should-use-them-a547c0757f6a&quot; title=&quot;How JavaScript works: The building blocks of Web Workers + 5 cases when you should use them&quot;&gt;blog.sessionstack.com/how-javascript-works-the-building-blocks-of-web-workers-5-cases-when-you-should-use-them-a547c0757f6a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebWorkerの使い方やユースケースについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mdn-browser-compatibility-data:-taking-the-guesswork-out-of-web-compatibility-–-mozilla-hacks-–-the-web-developer-blog&quot;&gt;MDN browser compatibility data: Taking the guesswork out of web compatibility – Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/02/mdn-browser-compatibility-data/&quot; title=&quot;MDN browser compatibility data: Taking the guesswork out of web compatibility – Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2018/02/mdn-browser-compatibility-data/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNが利用してるブラウザのサポート状況をまとめたデータがnpmパッケージとして利用できるようになった。&lt;br&gt;
このデータの使い方やサイトのサポートブラウザの可視化する拡張などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/mdn-browser-compat-data&quot; title=&quot;mdn-browser-compat-data&quot;&gt;mdn-browser-compat-data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/compat-report/&quot; title=&quot;Compat Report – Add-ons for Firefox&quot;&gt;Compat Report – Add-ons for Firefox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/glow:-make-your-flow-errors-glow&quot;&gt;thejameskyle/glow: Make your Flow errors GLOW&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/glow&quot; title=&quot;thejameskyle/glow: Make your Flow errors GLOW&quot;&gt;github.com/thejameskyle/glow&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FlowのエラーをCodeFrameにして表示、Watchモード、globで対象のフィルターを行えるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fullhuman/purgecss:-remove-unused-css&quot;&gt;FullHuman/purgecss: Remove unused css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/FullHuman/purgecss&quot; title=&quot;FullHuman/purgecss: Remove unused css&quot;&gt;github.com/FullHuman/purgecss&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;使ってないCSSを削除するツール。&lt;br&gt;
コンテンツ(HTML、JSなど)とCSSを渡し、不要となったCSSを削除できる。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 05 Feb 2018 20:07:52 +0900</pubDate>
        <link>https://jser.info/2018/02/05/ava-1.0.0b-typescript-2.7-mdn/</link>
        <guid isPermaLink="true">https://jser.info/2018/02/05/ava-1.0.0b-typescript-2.7-mdn/</guid>
        
        <category>ava</category>
        
        <category>TypeScript</category>
        
        <category>mdn</category>
        
        <category>npm</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-01-29のJS: Firefox 58、Safari 11.1(β)、Parcel 1.5.0、webpack 4(β)、ES 2018の機能が決定</title>
        <description>&lt;p&gt;JSer.info #368 - Firefox 58.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/58.0/releasenotes/&quot;&gt;Firefox — Notes (58.0) — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/58&quot; title=&quot;Firefox 58 for developers - Mozilla | MDN&quot;&gt;Firefox 58 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/58/&quot; title=&quot;Firefox 58 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 58 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API#Policies_in_place_to_aid_background_page_performance&quot;&gt;バッググラウンドタブにおけるスロットリングの強化&lt;/a&gt;、WebAssembly Streaming Compilerの導入。&lt;br&gt;
CSS Font Displayのサポート、&lt;code&gt;Promise#finally&lt;/code&gt;の追加、&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt; APIの実装など&lt;/p&gt;

&lt;p&gt;詳しくは次の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/01/firefox-58-the-quantum-era-continues/&quot; title=&quot;Firefox 58: The Quantum Era Continues – Mozilla Hacks – the Web developer blog&quot;&gt;Firefox 58: The Quantum Era Continues – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/01/making-webassembly-even-faster-firefoxs-new-streaming-and-tiering-compiler/&quot; title=&quot;Making WebAssembly even faster: Firefox’s new streaming and tiering compiler – Mozilla Hacks – the Web developer blog&quot;&gt;Making WebAssembly even faster: Firefox’s new streaming and tiering compiler – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html&quot; title=&quot;Safari 11.1&quot;&gt;Safari 11.1&lt;/a&gt;(β)が開発者向けに公開されています。&lt;/p&gt;

&lt;p&gt;Safari 11.1ではService Worker、Payment Request API、&lt;code&gt;HTMLImageElement.decode()&lt;/code&gt;、Beacon APIのサポート。&lt;br&gt;
Subresource Integrity、Storage Access API、Intelligent Tracking Preventionの挙動の変更などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;BundlerであるParcel 1.5.0がリリースされました。&lt;br&gt;
Source Mapsの対応や、WebAssemblyなどAssertsの対応が追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@devongovett/parcel-v1-5-0-released-source-maps-webassembly-rust-and-more-3a6385e43b95&quot; title=&quot;📦 Parcel v1.5.0 released: Source Maps, WebAssembly, Rust, and more! 🚀&quot;&gt;📦 Parcel v1.5.0 released: Source Maps, WebAssembly, Rust, and more! 🚀&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、webpack 4(β)もリリースされています。&lt;br&gt;
&lt;code&gt;--mode&lt;/code&gt;オプションが必須となり、典型的な設定は&lt;code&gt;mode: development&lt;/code&gt;または&lt;code&gt;mode: production&lt;/code&gt;で行うようになっています。デフォルトでは&lt;code&gt;src&lt;/code&gt;をソースディレクトリにし、&lt;code&gt;dist&lt;/code&gt;ディレクトリに出力するといった設定ファイルなしでの利用改善が図られています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2&quot;&gt;🚀webpack 4 beta — try it today!🚀 – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0-beta.0&quot;&gt;Release v4.0.0-beta.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また&lt;code&gt;CommonsChunkPlugin&lt;/code&gt;などの一部プラグインが削除され、代わりに&lt;code&gt;optimization&lt;/code&gt;のオプションで設定できるようになるといった変更なども含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693&quot; title=&quot;RIP CommonsChunkPlugin.md&quot;&gt;RIP CommonsChunkPlugin.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2018/01.md&quot; title=&quot;62nd meeting of Ecma TC39&quot;&gt;62nd meeting of Ecma TC39&lt;/a&gt;が行われ、ECMAScript 2018に最終的に入るProposalが決定しました。&lt;br&gt;
ECMAScriptは毎年6月ごろにリリースされるため、これから新しい機能(Proposal)を入れると間に合わなくなります。&lt;br&gt;
そのため、1月ごろに機能(Proposal)の追加はフリーズされ、この時期からStage 4となったProposalは&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;ECMAScript&quot;&gt;ECMAScript仕様本体&lt;/a&gt;へマージされます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/pulls?utf8=%E2%9C%93&amp;amp;q=is%3Apr+label%3A%22pending+stage+4%22+&quot;&gt;is:pr label:&amp;quot;pending stage 4&amp;quot;&lt;/a&gt;で実際にマージの様子が確認できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/proposals/blob/master/finished-proposals.md&quot; title=&quot;Finished Proposals&quot;&gt;Finished Proposals&lt;/a&gt;にまとめられていますが、ES2018には次の8つのProposalがマージされます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-template-literal-revision&quot;&gt;tc39/proposal-template-literal-revision&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;テンプレートリテラルの改善&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-regexp-dotall-flag&quot;&gt;tc39/proposal-regexp-dotall-flag: Proposal to add the &lt;code&gt;s&lt;/code&gt; (&lt;code&gt;dotAll&lt;/code&gt;) flag to regular expressions in ECMAScript.&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/./s&lt;/code&gt;が改行や絵文字などにもマッチできるようにする&lt;code&gt;s&lt;/code&gt;フラグの追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-regexp-named-groups&quot;&gt;tc39/proposal-regexp-named-groups: Named capture groups for JavaScript RegExps&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;正規表現の名前付きキャプチャ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-regexp-lookbehind&quot;&gt;tc39/proposal-regexp-lookbehind: RegExp lookbehind assertions&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;正規表現の肯定後読みのサポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-regexp-unicode-property-escapes&quot;&gt;tc39/proposal-regexp-unicode-property-escapes: Proposal to add Unicode property escapes &lt;code&gt;\p{…}&lt;/code&gt; and &lt;code&gt;\P{…}&lt;/code&gt; to regular expressions in ECMAScript.&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/^\p{White_Space}+$/u&lt;/code&gt; Unicode character propertiesのサポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;tc39/proposal-object-rest-spread: Rest/Spread Properties for ECMAScript&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ ...obj }&lt;/code&gt; オブジェクト版のRest/Spreadプロパティ(配列はES2015から利用できる)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-promise-finally&quot;&gt;tc39/proposal-promise-finally: ECMAScript Proposal, specs, and reference implementation for Promise.prototype.finally&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;resolve、rejectどちらの場合でも実行されるコールバックを指定できる&lt;code&gt;Promise.prototype.finally&lt;/code&gt;のサポート&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-async-iteration&quot;&gt;tc39/proposal-async-iteration: Asynchronous iteration for JavaScript&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;IteratorのAsync版&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proposalの解説は次の記事にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2ality.com/2017/02/ecmascript-2018.html&quot;&gt;ECMAScript 2018: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://arui.tech/es2018-new-features/&quot; title=&quot;ECMAScript 2018（ES2018）の新機能まとめ | あるいてっく&quot;&gt;ECMAScript 2018（ES2018）の新機能まとめ | あるいてっく&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今回のTC39ミーティングで変化があったProposalは次のページにまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2018/01/28/ecmascript-proposal-updates&quot;&gt;ECMAScript proposal updates at 2018-01 | ECMAScript Daily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-11.6.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 11.6.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/11.6.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 11.6.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/11.6.0/Changelog.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jsdom 11.6.0リリース。&lt;br&gt;
&lt;code&gt;WebSocket&lt;/code&gt;の実装、&lt;code&gt;performance&lt;/code&gt;の実装、&lt;code&gt;window.devicePixelRatio&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(58.0)-—-mozilla&quot;&gt;Firefox — Notes (58.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/58.0/releasenotes/&quot; title=&quot;Firefox — Notes (58.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/58.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 58リリース。&lt;br&gt;
バッググラウンドタブにおけるスロットリングの強化、WebAssembly Streaming Compilerの導入。&lt;br&gt;
CSS Font Displayのサポート、&lt;code&gt;Promise#finally&lt;/code&gt;の追加、&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt; APIの実装など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/01/firefox-58-the-quantum-era-continues/&quot; title=&quot;Firefox 58: The Quantum Era Continues – Mozilla Hacks – the Web developer blog&quot;&gt;Firefox 58: The Quantum Era Continues – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/58&quot; title=&quot;Firefox 58 for developers - Mozilla | MDN&quot;&gt;Firefox 58 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/58/&quot; title=&quot;Firefox 58 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 58 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;📦-parcel-v1.5.0-released:-source-maps,-webassembly,-rust,-and-more!-🚀&quot;&gt;📦 Parcel v1.5.0 released: Source Maps, WebAssembly, Rust, and more! 🚀&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@devongovett/parcel-v1-5-0-released-source-maps-webassembly-rust-and-more-3a6385e43b95&quot; title=&quot;📦 Parcel v1.5.0 released: Source Maps, WebAssembly, Rust, and more! 🚀&quot;&gt;medium.com/@devongovett/parcel-v1-5-0-released-source-maps-webassembly-rust-and-more-3a6385e43b95&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel v1.5.0リリース。&lt;br&gt;
Source Mapのサポート、WebAssemblyのサポート、&lt;code&gt;.env&lt;/code&gt;ファイルに対応。&lt;br&gt;
また、コンフィグファイルが追加されたときにキャッシュを削除するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.0.0-beta.0-·-webpack/webpack&quot;&gt;Release v4.0.0-beta.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0-beta.0&quot; title=&quot;Release v4.0.0-beta.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v4.0.0-beta.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4.0.0βリリース。&lt;br&gt;
Node.js 4のサポート終了、&lt;code&gt;mode&lt;/code&gt;が必須のオプションに、&lt;code&gt;import()&lt;/code&gt;は常に名前空間オブジェクトを返すように。&lt;br&gt;
また、&lt;code&gt;CommonsChunkPlugin&lt;/code&gt;などの一部プラグインを削除し代わりに&lt;code&gt;optimization&lt;/code&gt;のオプションで設定できるように変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/sokra/1522d586b8e5c0f5072d7565c2bee693&quot; title=&quot;RIP CommonsChunkPlugin.md&quot;&gt;RIP CommonsChunkPlugin.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2&quot; title=&quot;🚀webpack 4 beta — try it today!🚀 – webpack – Medium&quot;&gt;🚀webpack 4 beta — try it today!🚀 – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-48-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 48 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8084/release-notes-for-safari-technology-preview-48/&quot; title=&quot;Release Notes for Safari Technology Preview 48 | WebKit&quot;&gt;webkit.org/blog/8084/release-notes-for-safari-technology-preview-48/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 48リリース。&lt;br&gt;
Storage Access APIをデフォルトで有効化、Service Workerの対応改善、&lt;code&gt;createImageBitmap(ImageBitmap)&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-11.1&quot;&gt;Safari 11.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html&quot; title=&quot;Safari 11.1&quot;&gt;developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;現在β公開中のSafari 11.1の変更点について。&lt;br&gt;
Service Worker、Payment Request、&lt;code&gt;HTMLImageElement.decode()&lt;/code&gt;、Beacon APIのサポート。&lt;br&gt;
Subresource Integrity、Storage Access API、Intelligent Tracking Preventionの挙動の変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stable-angularjs-and-long-term-support-–-angular-blog&quot;&gt;Stable AngularJS and Long Term Support – Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/stable-angularjs-and-long-term-support-7e077635ee9c&quot; title=&quot;Stable AngularJS and Long Term Support – Angular Blog&quot;&gt;blog.angular.io/stable-angularjs-and-long-term-support-7e077635ee9c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AngularJS(1.x)のLTSスケジュールについて。&lt;br&gt;
現在開発中のAngularJS 1.7は2018年7月にリリースされ、そこから3年間メンテされるLTSとなる。&lt;br&gt;
1.7.x以降はAngularJSに新しい機能などは追加しない予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;improvements-to-the-devtools-console-in-the-windows-10-fall-creators-update---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;Improvements to the DevTools Console in the Windows 10 Fall Creators Update - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/01/17/devtools-console-improvements-edgehtml-16/&quot; title=&quot;Improvements to the DevTools Console in the Windows 10 Fall Creators Update - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2018/01/17/devtools-console-improvements-edgehtml-16/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;EdgeHTML16の開発者ツールの改善について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;🚀webpack-4-beta — try-it-today!🚀-–-webpack-–-medium&quot;&gt;🚀webpack 4 beta — try it today!🚀 – webpack – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2&quot; title=&quot;🚀webpack 4 beta — try it today!🚀 – webpack – Medium&quot;&gt;medium.com/webpack/webpack-4-beta-try-it-today-6b1d27d7d7e2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4βについての解説記事。&lt;br&gt;
パフォーマンス、設定、ファイルサイズ、ファイルタイプのサポート、最適化オプションなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-at-2018-01-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates at 2018-01 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2018/01/28/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates at 2018-01 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2018/01/28/ecmascript-proposal-updates&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年1月のTC39のミーティング結果を反映したECMAScript Proposalのステータスまとめ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-64- | -web- | -google-developers&quot;&gt;New in Chrome 64  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/01/nic64&quot; title=&quot;New in Chrome 64  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/01/nic64&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 64の変更点について&lt;br&gt;
&lt;code&gt;ResizeObservers&lt;/code&gt;、RegExpのNamed Capture、&lt;code&gt;import.meta&lt;/code&gt;のサポート。&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;や&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;の&lt;code&gt;preload&lt;/code&gt;属性のデフォルト値が&lt;code&gt;metadata&lt;/code&gt;へと変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=y5sb-icqOyg&quot; title=&quot;New in Chrome 64: ResizeObservers, Named Captures, import.meta and more! - YouTube&quot;&gt;New in Chrome 64: ResizeObservers, Named Captures, import.meta and more! - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;top-10-javascript-errors-from-1000+-projects-(and-how-to-avoid-them)&quot;&gt;Top 10 JavaScript errors from 1000+ projects (and how to avoid them)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rollbar.com/blog/top-10-javascript-errors/&quot; title=&quot;Top 10 JavaScript errors from 1000+ projects (and how to avoid them)&quot;&gt;rollbar.com/blog/top-10-javascript-errors/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;エラー収集サービスのRollbarにおいて報告されたJavaScriptのエラーランキング。&lt;br&gt;
どのようなエラーメッセージか、またどのような状況で発生するかなどを解説している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Errors&quot; title=&quot;JavaScript エラーリファレンス - JavaScript | MDN&quot;&gt;JavaScript エラーリファレンス - JavaScript | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2018:-the-final-feature-set&quot;&gt;ECMAScript 2018: the final feature set&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://2ality.com/2017/02/ecmascript-2018.html&quot; title=&quot;ECMAScript 2018: the final feature set&quot;&gt;2ality.com/2017/02/ecmascript-2018.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年1月でECMAScript 2018に入るProposalが決まったため、そのProposalをまとめた記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-object-explorer&quot;&gt;JavaScript Object Explorer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sdras.github.io/object-explorer/&quot; title=&quot;JavaScript Object Explorer&quot;&gt;sdras.github.io/object-explorer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのオブジェクトに関する操作方法(作成、削除、更新など)を対話的に選択してコードを出してくれるサイト。&lt;br&gt;
配列版もあり、翻訳も募集している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sdras.github.io/array-explorer/&quot; title=&quot;JavaScript Array Explorer&quot;&gt;JavaScript Array Explorer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sdras/object-explorer/issues/1&quot; title=&quot;Translations needed! · Issue #1 · sdras/object-explorer&quot;&gt;Translations needed! · Issue #1 · sdras/object-explorer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;0x00a/scratches:-a-scratchpad.-read,-evaluate,-print,-loop,-but-with-a-nicer-editor.&quot;&gt;0x00A/scratches: A scratchpad. Read, Evaluate, Print, Loop, but with a nicer editor.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/0x00A/scratches&quot; title=&quot;0x00A/scratches: A scratchpad. Read, Evaluate, Print, Loop, but with a nicer editor.&quot;&gt;github.com/0x00A/scratches&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mac &lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron製のJavaScriptスクラッチパッド。&lt;br&gt;
JavaScriptのコードを実行して評価結果を並べて表示するアプリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fastpack/fastpack:-pack-js-code-fast-&amp;amp;-easy&quot;&gt;fastpack/fastpack: Pack JS code fast &amp;amp; easy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fastpack/fastpack&quot; title=&quot;fastpack/fastpack: Pack JS code fast &amp;amp; easy&quot;&gt;github.com/fastpack/fastpack&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;OCaml製のJavaScript Bundlerツール。&lt;br&gt;
Flowをパーサとして使い、コードのbundleを行う。postprocessとして他のツールを呼びだすことができる。&lt;br&gt;
高速なインクリメンタルビルドを行うことが目的。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webサイトパフォーマンス実践入門-高速なwebページを作りたいあなたに（jeremyl.wagner-武舎広幸-阿部和也-上西昌弘）｜翔泳社の本&quot;&gt;Webサイトパフォーマンス実践入門 高速なWebページを作りたいあなたに（JeremyL.Wagner 武舎広幸 阿部和也 上西昌弘）｜翔泳社の本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.shoeisha.co.jp/book/detail/9784798155098&quot; title=&quot;Webサイトパフォーマンス実践入門 高速なWebページを作りたいあなたに（JeremyL.Wagner 武舎広幸 阿部和也 上西昌弘）｜翔泳社の本&quot;&gt;www.shoeisha.co.jp/book/detail/9784798155098&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年03月19日発売。&lt;br&gt;
Web Performance in Actionの翻訳本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 30 Jan 2018 06:51:02 +0900</pubDate>
        <link>https://jser.info/2018/01/30/firefox-58-safari-11.1b-parcel-1.5.0-webpack-4b-es-2018/</link>
        <guid isPermaLink="true">https://jser.info/2018/01/30/firefox-58-safari-11.1b-parcel-1.5.0-webpack-4b-es-2018/</guid>
        
        <category>firefox</category>
        
        <category>Safari</category>
        
        <category>Bundler</category>
        
        <category>webpack</category>
        
        <category>parcel</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-01-23のJS: 2018-01-23のJS: Bootstrap 4、create-react-app 1.1.0と2.0、kuker</title>
        <description>&lt;p&gt;JSer.info #367 - CSSフレームワークのBootstrap 4が正式リリースされました。&lt;br&gt;
&lt;a href=&quot;http://blog.getbootstrap.com/2014/10/29/bootstrap-3-3-0-released/&quot; title=&quot;Bootstrap 3.3.0&quot;&gt;Bootstrap 3.3.0&lt;/a&gt;から約3年ぶりのメジャーアップデートとなります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/01/18/bootstrap-4/&quot;&gt;Bootstrap 4 · Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.0では実装をLessからSassへ変更、GridシステムにFlexboxを利用、Panelsやthumbnailsを廃止しCardsへの移行などの変更が行なわれています。そのため、コンポーネントへ指定するクラス名のリネームも行われています。&lt;br&gt;
詳しい変更点とv3からの違いについてはマイグレーションガイドを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.0/migration/&quot;&gt;Migrating to v4 · Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、IE 8、9のサポート終了し、v4からはIE10+、iOS 7+、Android 5.0+が対象となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/browsers-devices/&quot; title=&quot;Browsers and devices · Bootstrap&quot;&gt;Browsers and devices · Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Reactの開発ツールである&lt;a href=&quot;https://github.com/facebook/create-react-app&quot; title=&quot;create-react-app&quot;&gt;create-react-app&lt;/a&gt; 1.1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/releases/tag/v1.1.0&quot; title=&quot;Release v1.1.0 · facebook/create-react-app&quot;&gt;Release v1.1.0 · facebook/create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;--use-npm&lt;/code&gt;の追加、&lt;code&gt;--scripts-version&lt;/code&gt;で&lt;code&gt;.tar.gz&lt;/code&gt;や&lt;code&gt;file:&lt;/code&gt;のサポートなどが行われています。&lt;br&gt;
また、このリリースが1.x系の最後となり、次のメジャーアップデート候補である2.0に含める機能についての議論が行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/issues/3815&quot; title=&quot;Roadmap for react-scripts@2.0 · Issue #3815 · facebook/create-react-app&quot;&gt;Roadmap for react-scripts@2.0 · Issue #3815 · facebook/create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/krasimir/kuker&quot; title=&quot;kuker&quot;&gt;kuker&lt;/a&gt;というReact、Angular、Vue、Redux、MobX、HTMLなどに対応したデバッグツールが公開されています。&lt;br&gt;
kukerは、ライブラリの状態やイベントのログを&lt;code&gt;postMessage&lt;/code&gt;で送り、そのログを表示できるブラウザ拡張となっています。&lt;/p&gt;

&lt;p&gt;たとえば、Reduxならばコンポーネントのライフサイクルログを表示し、ReduxならReduxからdispatchされたActionとその時点でのStateを表示できるようになります。&lt;/p&gt;

&lt;p&gt;同じ系統のデバッグブラウザ拡張として&lt;a href=&quot;https://github.com/gaearon/redux-devtools&quot; title=&quot;Redux DevTools&quot;&gt;Redux DevTools&lt;/a&gt;があります。&lt;br&gt;
&lt;a href=&quot;https://almin.js.org/&quot; title=&quot;Almin&quot;&gt;Almin&lt;/a&gt;というライブラリ向けに、&lt;a href=&quot;https://github.com/almin/almin-devtools&quot;&gt;Redux DevToolsに対応したもの&lt;/a&gt;と&lt;a href=&quot;https://github.com/almin/almin-kuker-devtools&quot;&gt;kukerに対応したもの&lt;/a&gt;をそれぞれ書いてみました。&lt;br&gt;
どちらも任意のデータを送る仕組みを持っていますが、kukerは単純に&lt;code&gt;postMessage&lt;/code&gt;でイベントやStateを送るだけなので特別な仕組みは必要ありません。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sendToDevTools&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;kuker&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Almin&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;fa-money&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#bada55&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;詳しくは作者のブログで必要となった理由や仕組みについて書かれているので見てみると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/debugging-your-front-end-like-is-2019&quot; title=&quot;Debugging your front-end like it&amp;amp;#39;s 2019&quot;&gt;Debugging your front-end like it&amp;#39;s 2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0-·-googlechrome/puppeteer&quot;&gt;Release v1.0.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer 1.0.0リリース。&lt;br&gt;
コードカバレッジAPIのサポート、PDFのカスタマイズ、XPathのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/puppeteer/&quot; title=&quot;Puppeteer  |  Tools for Web Developers  |  Google Developers&quot;&gt;Puppeteer  |  Tools for Web Developers  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.7-rc-|-typescript&quot;&gt;Announcing TypeScript 2.7 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/01/17/announcing-typescript-2-7-rc/&quot; title=&quot;Announcing TypeScript 2.7 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/01/17/announcing-typescript-2-7-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.7RCリリース&lt;/p&gt;

&lt;p&gt;クラスプロパティへの代入忘れをチェックする&lt;code&gt;--strictPropertyInitialization&lt;/code&gt;の追加、Tupleの扱いの変更、&lt;code&gt;in&lt;/code&gt;と&lt;code&gt;instanceof&lt;/code&gt;の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-4-·-bootstrap&quot;&gt;Bootstrap 4 · Bootstrap&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/01/18/bootstrap-4/&quot; title=&quot;Bootstrap 4 · Bootstrap&quot;&gt;blog.getbootstrap.com/2018/01/18/bootstrap-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 4リリース。&lt;br&gt;
4.0ではLessからSassへ、Flexboxの利用、Cardsへの移行、IE 8、9などのサポート終了など。&lt;br&gt;
β3からの変更として、printのスタイルの更新サンプル、ドキュメントの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2017/08/10/bootstrap-4-beta/&quot; title=&quot;Bootstrap 4 Beta · Bootstrap&quot;&gt;Bootstrap 4 Beta · Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/4.0/migration/&quot; title=&quot;Migrating to v4 · Bootstrap&quot;&gt;Migrating to v4 · Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5.0.0-·-mochajs/mocha&quot;&gt;Release v5.0.0 · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mocha 5.0.0リリース。&lt;br&gt;
IE 9、10のサポート終了、テストファイルを追加指定する&lt;code&gt;--file&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymer-3.0:-new-year,-new-preview---polymer-project&quot;&gt;Polymer 3.0: New Year, New Preview - Polymer Project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/blog/2018-01-18-polymer-3-new-preview&quot; title=&quot;Polymer 3.0: New Year, New Preview - Polymer Project&quot;&gt;www.polymer-project.org/blog/2018-01-18-polymer-3-new-preview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Polymer 3.0-pre.4リリース。&lt;br&gt;
&lt;code&gt;PropertiesMixin&lt;/code&gt;の追加、&lt;code&gt;html&lt;/code&gt;タグ関数の改善。&lt;br&gt;
Stableリリースは2018年Q1末を予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3.3.0-–-a-fragrant-bouquet-of-deprecations-and…is-that-a-new-feature?-|-official-jquery-blog&quot;&gt;jQuery 3.3.0 – A fragrant bouquet of deprecations and…is that a new feature? | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2018/01/19/jquery-3-3-0-a-fragrant-bouquet-of-deprecations-and-is-that-a-new-feature/&quot; title=&quot;jQuery 3.3.0 – A fragrant bouquet of deprecations and…is that a new feature? | Official jQuery Blog&quot;&gt;blog.jquery.com/2018/01/19/jquery-3-3-0-a-fragrant-bouquet-of-deprecations-and-is-that-a-new-feature/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.3.0リリース。&lt;br&gt;
&lt;code&gt;.addClass()&lt;/code&gt;、&lt;code&gt;.removeClass()&lt;/code&gt;、&lt;code&gt;.toggleClass()&lt;/code&gt;が配列を受け取れるように。&lt;br&gt;
&lt;code&gt;jQuery.now&lt;/code&gt;や&lt;code&gt;jQuery.isFunction&lt;/code&gt;などが非推奨になるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.1.0-·-facebookincubator/create-react-app&quot;&gt;Release v1.1.0 · facebookincubator/create-react-app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app/releases/tag/v1.1.0&quot; title=&quot;Release v1.1.0 · facebookincubator/create-react-app&quot;&gt;github.com/facebookincubator/create-react-app/releases/tag/v1.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;create-react-app 1.1.0リリース。&lt;br&gt;
&lt;code&gt;--use-npm&lt;/code&gt;の追加、&lt;code&gt;--scripts-version&lt;/code&gt;で&lt;code&gt;.tar.gz&lt;/code&gt;や&lt;code&gt;file:&lt;/code&gt;のサポートなど。&lt;br&gt;
2.0のα版もリリースされ、2.0に含める機能についてはIssueで議論している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app/issues/3815&quot; title=&quot;Roadmap for react-scripts@2.0 · Issue #3815 · facebookincubator/create-react-app&quot;&gt;Roadmap for react-scripts@2.0 · Issue #3815 · facebookincubator/create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-svg-coordinate-systems-and-transformations-(part-1)-—-the-viewport,-viewbox,-and-preserveaspectratio&quot;&gt;Understanding SVG Coordinate Systems and Transformations (Part 1) — The viewport, viewBox, and preserveAspectRatio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sarasoueidan.com/blog/svg-coordinate-systems/&quot; title=&quot;Understanding SVG Coordinate Systems and Transformations (Part 1) — The viewport, viewBox, and preserveAspectRatio&quot;&gt;www.sarasoueidan.com/blog/svg-coordinate-systems/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVGのviewport、viewBox、preserveAspectRatioについての詳しい解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oxidizing-source-maps-with-rust-and-webassembly-–-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Oxidizing Source Maps with Rust and WebAssembly – Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/&quot; title=&quot;Oxidizing Source Maps with Rust and WebAssembly – Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2018/01/oxidizing-source-maps-with-rust-and-webassembly/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;sourcemap&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Source Mapパーサ、ジェネレーターをRust + WebAssemblyに書き換えた話。&lt;br&gt;
Rustで書いてwasmに変換して使うことで、JavaScriptの実装に比べて処理時間や処理の安定性が向上したという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/source-map/pull/306&quot; title=&quot;Use WebAssembly to speed up SourceMapConsumer by fitzgen · Pull Request #306 · mozilla/source-map&quot;&gt;Use WebAssembly to speed up SourceMapConsumer by fitzgen · Pull Request #306 · mozilla/source-map&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#39;s-new-in-devtools-(chrome-65)- | -web- | -google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 65)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/01/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 65)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/01/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 65での開発者ツールの変更点について。&lt;br&gt;
Local Overrides、アクセシビリティツール、カラーピッカーにコンストラスト情報の表示、ステップ実行でWorkerやsetTimeoutなどの非同期処理のサポート。&lt;br&gt;
パフォーマンスパネルで複数の記録を保存できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-your-front-end-like-it&amp;#39;s-2019&quot;&gt;Debugging your front-end like it&amp;#39;s 2019&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/debugging-your-front-end-like-is-2019&quot; title=&quot;Debugging your front-end like it&amp;#39;s 2019&quot;&gt;krasimirtsonev.com/blog/article/debugging-your-front-end-like-is-2019&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;kukerという開発者ツールについて。&lt;br&gt;
redux-devtoolsのようにブラウザに拡張をインストールし、ReduxやReact、Angularなどライブラリのログを見ることができる。&lt;br&gt;
ログを投げる側は&lt;code&gt;postMessage&lt;/code&gt;を送ることで記録できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/krasimir/kuker&quot; title=&quot;krasimir/kuker: Kick-ass browser extension to debug your apps&quot;&gt;krasimir/kuker: Kick-ass browser extension to debug your apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-grid-—-learn-all-about-css-grid-with-wes-bos-in-this-free-video-series!&quot;&gt;CSS Grid — Learn all about CSS Grid with Wes Bos in this free video series!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cssgrid.io/&quot; title=&quot;CSS Grid — Learn all about CSS Grid with Wes Bos in this free video series!&quot;&gt;cssgrid.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Grid講座&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;render-props---react&quot;&gt;Render Props - React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/docs/render-props.html&quot; title=&quot;Render Props - React&quot;&gt;reactjs.org/docs/render-props.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactのRender Propsのパターンについてのドキュメント&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-·-a-roadmap-for-node.js-security&quot;&gt;Introduction · A Roadmap for Node.js Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodesecroadmap.fyi/&quot; title=&quot;Introduction · A Roadmap for Node.js Security&quot;&gt;nodesecroadmap.fyi/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティに関するドキュメント。Node.jsにおいてセキュリティ的な問題が起きる項目について。&lt;br&gt;
またDynamic requireなどコード別の問題などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;krasimir/kuker:-kick-ass-browser-extension-to-debug-your-apps&quot;&gt;krasimir/kuker: Kick-ass browser extension to debug your apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/krasimir/kuker&quot; title=&quot;krasimir/kuker: Kick-ass browser extension to debug your apps&quot;&gt;github.com/krasimir/kuker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;クライアントから&lt;code&gt;postMessage&lt;/code&gt;で投げたログとStateを表示できるビューアのブラウザ拡張。&lt;br&gt;
React、Redux、Angular、Vue、HTMLなどに対応したデバッグツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;skerit/json-dry:-json-dry-allows-you-to-serialize-&amp;amp;-revive-objects-containing-circular-references,-dates,-regexes,-class-instances,...&quot;&gt;skerit/json-dry: JSON-dry allows you to serialize &amp;amp; revive objects containing circular references, dates, regexes, class instances,...&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/skerit/json-dry&quot; title=&quot;skerit/json-dry: JSON-dry allows you to serialize &amp;amp; revive objects containing circular references, dates, regexes, class instances,...&quot;&gt;github.com/skerit/json-dry&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;正規表現や循環参照に対応したJSONシリアライズ/デシリアライズライブラリ。&lt;br&gt;
オブジェクトのクローンも行える。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;boltpkg/bolt:-⚡️-super-powered-javascript-project-management&quot;&gt;boltpkg/bolt: ⚡️ Super-powered JavaScript project management&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/boltpkg/bolt&quot; title=&quot;boltpkg/bolt: ⚡️ Super-powered JavaScript project management&quot;&gt;github.com/boltpkg/bolt&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lerna/yarn workspaceのようなmonorepo管理ツール。&lt;br&gt;
buildやtestなどにデフォルト設定があり、monorepoの環境構築を簡単にできるようにすることが目的&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;functional-light…-by-kyle-simpson-[leanpub-pdf/ipad/kindle]&quot;&gt;Functional-Light… by Kyle Simpson [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/fljs&quot; title=&quot;Functional-Light… by Kyle Simpson \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/fljs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Functional programming (FP)のアプローチをJavaScriptに適応してFPについて学ぶ書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simplifying-javascript:-writing-modern-javascript-with-es5,-es6,-and-beyond-by-joe-morgan-|-the-pragmatic-bookshelf&quot;&gt;Simplifying JavaScript: Writing Modern JavaScript with ES5, ES6, and Beyond by Joe Morgan | The Pragmatic Bookshelf&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pragprog.com/book/es6tips/simplifying-javascript&quot; title=&quot;Simplifying JavaScript: Writing Modern JavaScript with ES5, ES6, and Beyond by Joe Morgan | The Pragmatic Bookshelf&quot;&gt;pragprog.com/book/es6tips/simplifying-javascript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年5月10日発売&lt;br&gt;
ES2015以降の新しい構文を学び、読みやすく拡張し易いコードを書く方法についてを学ぶ書籍。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-vue.js-applications:-edd-yerburgh:-9781617295249:-amazon.com:-books&quot;&gt;Testing Vue.js Applications: Edd Yerburgh: 9781617295249: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Testing-Vue-Js-Applications/dp/1617295248&quot; title=&quot;Testing Vue.js Applications: Edd Yerburgh: 9781617295249: Amazon.com: Books&quot;&gt;www.amazon.com/Testing-Vue-Js-Applications/dp/1617295248&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2017年7月30日発売&lt;br&gt;
Vueアプリケーションのテストについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Jan 2018 12:05:24 +0900</pubDate>
        <link>https://jser.info/2018/01/23/2018-01-23js-bootstrap-4-create-react-app-1.1.02.0-kuker/</link>
        <guid isPermaLink="true">https://jser.info/2018/01/23/2018-01-23js-bootstrap-4-create-react-app-1.1.02.0-kuker/</guid>
        
        <category>CSS</category>
        
        <category>React</category>
        
        <category>debug</category>
        
        <category>browser</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2018-01-16のJS: Prettier 1.10、Secure Contexts、TDD in Framework</title>
        <description>&lt;p&gt;JSer.info #366 - コード整形ツールの&lt;a href=&quot;https://prettier.io/&quot; title=&quot;Prettier&quot;&gt;Prettier&lt;/a&gt; 1.10がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/blog/2018/01/10/1.10.0.html&quot; title=&quot;Prettier 1.10: One Year of Prettier 🎂 · Prettier&quot;&gt;Prettier 1.10: One Year of Prettier 🎂 · Prettier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue Single File Components(&lt;code&gt;.vue&lt;/code&gt;)のサポート、&lt;a href=&quot;https://prettier.io/docs/en/plugins.html&quot;&gt;Plugin API&lt;/a&gt;のサポートが行われています。&lt;/p&gt;

&lt;p&gt;Plugin APIは、&lt;a href=&quot;https://github.com/prettier/prettier/pull/3349&quot;&gt;Pythonサポート&lt;/a&gt;や&lt;a href=&quot;https://github.com/prettier/prettier/issues/3503&quot; title=&quot;Prettier 2.0&quot;&gt;Prettier 2.0&lt;/a&gt;の議論の中でコンポーネントの分離をする流れで開発されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/prettier/prettier/issues/3511&quot; title=&quot;Use a monorepo and separate out Prettier’s components · Issue #3511 · prettier/prettier&quot;&gt;Use a monorepo and separate out Prettier’s components · Issue #3511 · prettier/prettier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在このAPIを使ってPython、PHP、Swiftのサポートが開発中となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/prettier/prettier-python&quot;&gt;prettier/prettier-python: Prettier Python Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/prettier/prettier-php&quot;&gt;prettier/prettier-php: Prettier PHP Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/prettier/prettier-swift&quot;&gt;prettier/prettier-swift: Prettier Swift Plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2018/01/15/secure-contexts-everywhere/&quot; title=&quot;Secure Contexts Everywhere | Mozilla Security Blog&quot;&gt;Secure Contexts Everywhere | Mozilla Security Blog&lt;/a&gt;という記事では、今後のFirefoxでサポートする新しいウェブプラットフォームAPIなどはSecure Contextsでのみ動作する方針について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot; title=&quot;Secure contexts&quot;&gt;Secure contexts&lt;/a&gt;は大雑把にいうとHTTPS/TLSで配信されているコンテンツの実行コンテキストのことで、&lt;code&gt;window.isSecureContext&lt;/code&gt;で判定できます。&lt;br&gt;
(localhostもSecure Contextなので開発時は問題ありません)&lt;/p&gt;

&lt;p&gt;たとえば、このサイトはHTTPSで配信しているのでSecure Contextsでのコンテンツと判断されます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; &amp;quot;https://jser.info/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isSecureContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;今後Firefoxで新しい機能(JavaScript、CSS、HTTP、メディアフォーマットなど)をサポートする際にはSecure Contextsを必須にすることについて書かれています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Web-exposed means that the feature is observable from a web page or server, whether through JavaScript, CSS, HTTP, media formats, etc. A feature can be anything from an extension of an existing IDL-defined object, a new CSS property, a new HTTP response header, to bigger features such as WebVR.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;その機能が使えるかどうかの判定は、今までどおり&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/%40supports&quot; title=&quot;@supports&quot;&gt;@supports&lt;/a&gt;やFeature Detectをすることが推奨されています。&lt;br&gt;
また、すでにある機能の値の追加は例外になるケース(実装が複雑となるため)などについても書かれています。&lt;/p&gt;

&lt;p&gt;他のブラウザなども含めSecure Contextsを必須とするAPIなどについては次のページに纏められています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts/features_restricted_to_secure_contexts&quot; title=&quot;Features restricted to secure contexts - Web security | MDN&quot;&gt;Features restricted to secure contexts - Web security | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://permission.site/&quot; title=&quot;permission.site&quot;&gt;permission.site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.5.0-·-qunitjs/qunit&quot;&gt;Release 2.5.0 · qunitjs/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/releases/tag/2.5.0&quot; title=&quot;Release 2.5.0 · qunitjs/qunit&quot;&gt;github.com/qunitjs/qunit/releases/tag/2.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;QUnit 2.5.0リリース。&lt;br&gt;
&lt;code&gt;assert.rejects&lt;/code&gt;の追加、&lt;code&gt;QUnit.onUnhandledRejection&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.4.0-(current)-|-node.js&quot;&gt;Node v9.4.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.4.0/&quot; title=&quot;Node v9.4.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.4.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v9.4.0リリース。&lt;br&gt;
npm 5.6.0へアップデート、zlibモジュールで&lt;code&gt;ArrayBuffer&lt;/code&gt;をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-47-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 47 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8060/release-notes-for-safari-technology-preview-47/&quot; title=&quot;Release Notes for Safari Technology Preview 47 | WebKit&quot;&gt;webkit.org/blog/8060/release-notes-for-safari-technology-preview-47/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 47リリース。&lt;br&gt;
Storage Access APIの実験的サポート、Service Workerの改善、Web InspectorのCanvasタブをデフォルトで有効化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/html/issues/3338&quot; title=&quot;Proposal: Storage Access API · Issue #3338 · whatwg/html&quot;&gt;Proposal: Storage Access API · Issue #3338 · whatwg/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1.10:-one-year-of-prettier-🎂-·-prettier&quot;&gt;Prettier 1.10: One Year of Prettier 🎂 · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2018/01/10/1.10.0.html&quot; title=&quot;Prettier 1.10: One Year of Prettier 🎂 · Prettier&quot;&gt;prettier.io/blog/2018/01/10/1.10.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.10リリース。&lt;br&gt;
Vue Single File Componentsのサポート、Prettier Plugin APIの追加。&lt;br&gt;
Python、PHP、Swiftをプラグインでサポート。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-storybook-3.3-–-storybook-–-medium&quot;&gt;Announcing Storybook 3.3 – Storybook – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/storybookjs/announcing-storybook-3-3-9972c4bc87ac&quot; title=&quot;Announcing Storybook 3.3 – Storybook – Medium&quot;&gt;medium.com/storybookjs/announcing-storybook-3-3-9972c4bc87ac&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybook 3.3リリース。&lt;br&gt;
Angularプロジェクトをサポート、viewportのシミュレート、storyshotsでのテスト改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.63.0-·-facebook/flow&quot;&gt;Release v0.63.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.63.0&quot; title=&quot;Release v0.63.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.63.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.63.0リリース。&lt;br&gt;
Strict modeでは関数の引数を&lt;code&gt;const&lt;/code&gt;として扱うように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;secure-contexts-everywhere-|-mozilla-security-blog&quot;&gt;Secure Contexts Everywhere | Mozilla Security Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2018/01/15/secure-contexts-everywhere/&quot; title=&quot;Secure Contexts Everywhere | Mozilla Security Blog&quot;&gt;blog.mozilla.org/security/2018/01/15/secure-contexts-everywhere/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefoxは今後に新しい機能(JavaScript、CSS、HTTP、フォーマットなど)に利用する際にはSecure Contexts(HTTPS)を必須にする方針について。&lt;br&gt;
新しいCSS color keywordのような既存部分の変更については例外とする場合があることについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.0.0-·-epoberezkin/ajv&quot;&gt;Release v6.0.0 · epoberezkin/ajv&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/epoberezkin/ajv/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · epoberezkin/ajv&quot;&gt;github.com/epoberezkin/ajv/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSON Schema Validatorのajv 6.0.0リリース。&lt;br&gt;
JSON Schema Draft-07をサポート&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://json-schema.org/draft-07/json-schema-release-notes.html&quot; title=&quot;JSON Schema Draft-07 Release Notes&quot;&gt;JSON Schema Draft-07 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;but-really,-what-is-a-javascript-test?-–-kentcdodds&quot;&gt;But really, what is a JavaScript test? – kentcdodds&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.kentcdodds.com/but-really-what-is-a-javascript-test-46fe5f3fad77&quot; title=&quot;But really, what is a JavaScript test? – kentcdodds&quot;&gt;blog.kentcdodds.com/but-really-what-is-a-javascript-test-46fe5f3fad77&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptにおけるテストとはどうやって動くものかについて。&lt;br&gt;
ifとthrowを使ったものから&lt;code&gt;assert&lt;/code&gt;を使ったもの、テストフレームワークを使った構造化など順を追って見ていく話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-immer:-immutability-the-easy-way-–-michel-weststrate-–-medium&quot;&gt;Introducing Immer: Immutability the easy way – Michel Weststrate – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mweststrate/introducing-immer-immutability-the-easy-way-9d73d8f71cb3&quot; title=&quot;Introducing Immer: Immutability the easy way – Michel Weststrate – Medium&quot;&gt;medium.com/@mweststrate/introducing-immer-immutability-the-easy-way-9d73d8f71cb3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Immutableにオブジェクトを更新する&lt;code&gt;immer&lt;/code&gt;について。&lt;br&gt;
Proxyなどを使い実際に変更された場合にのみ、オブジェクト自身を更新する仕組みをもち、また開発中は自動で&lt;code&gt;Object.freeze&lt;/code&gt;を適応する&lt;br&gt;
ReduxのReducerのようなパターンをMutableなAPIで書ける。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://egghead.io/lessons/redux-simplify-creating-immutable-data-trees-with-immer&quot; title=&quot;Simplify Creating Immutable Data Trees With Immer from @mweststrate on @eggheadio&quot;&gt;Simplify Creating Immutable Data Trees With Immer from @mweststrate on @eggheadio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;http/2-の内幕&quot;&gt;HTTP/2 の内幕&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/jp/web/library/wa-http2-under-the-hood/index.html&quot; title=&quot;HTTP/2 の内幕&quot;&gt;www.ibm.com/developerworks/jp/web/library/wa-http2-under-the-hood/index.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP2&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP/2の歴史や特徴などの概要を簡単にまとめた記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;低帯域幅と高レイテンシの理解- | -web- | -google-developers&quot;&gt;低帯域幅と高レイテンシの理解  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/poor-connectivity/?hl=ja&quot; title=&quot;低帯域幅と高レイテンシの理解  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/poor-connectivity/?hl&amp;#x3D;ja&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ネットワークの帯域やレイテンシのシミュレートするツールやlie-fiと呼ばれる問題のあるネットワークの問題について。&lt;br&gt;
Service Workerを使ったネットワークタイムアウトについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-tdd-in-react&quot;&gt;Learn TDD in React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://learntdd.in/react/&quot; title=&quot;Learn TDD in React&quot;&gt;learntdd.in/react/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypressを使ったE2Eテストを書いてからコンポーネントの実装を行う方法についてのチュートリアル。&lt;br&gt;
&lt;code&gt;data-test&lt;/code&gt;属性を使ってのテストコンポーネントの指定、機能の実装などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://learntdd.in/vue/&quot; title=&quot;Learn TDD in Vue&quot;&gt;Learn TDD in Vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what’s-new-in-vue-devtools-4.0-–-the-vue-point-–-medium&quot;&gt;What’s new in Vue Devtools 4.0 – The Vue Point – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-vue-point/whats-new-in-vue-devtools-4-0-9361e75e05d0&quot; title=&quot;What’s new in Vue Devtools 4.0 – The Vue Point – Medium&quot;&gt;medium.com/the-vue-point/whats-new-in-vue-devtools-4-0-9361e75e05d0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue DevTools 4.0の変更点について。&lt;br&gt;
コンポーネントのデータ編集、アイテムの追加や削除、Quick Edit、エディタで開く、イベントフィルターの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-read-the-ecmascript-specification&quot;&gt;How to Read the ECMAScript Specification&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://timothygu.me/es-howto/&quot; title=&quot;How to Read the ECMAScript Specification&quot;&gt;timothygu.me/es-howto/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの仕様書の読み方についてのドキュメント&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2017-javascript-rising-stars&quot;&gt;2017 JavaScript Rising Stars&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://risingstars.js.org/2017/en/&quot; title=&quot;2017 JavaScript Rising Stars&quot;&gt;risingstars.js.org/2017/en/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2017年のJavaScript関連におけるStarの増加率でのランキングまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-studio&quot;&gt;React Studio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactstudio.com/&quot; title=&quot;React Studio&quot;&gt;reactstudio.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mac &lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったサイトを作るGUIエディタ。ページ間の遷移なども扱える。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;russellgoldenberg/scrollama:-scrollytelling-with-intersectionobserver.&quot;&gt;russellgoldenberg/scrollama: Scrollytelling with IntersectionObserver.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/russellgoldenberg/scrollama&quot; title=&quot;russellgoldenberg/scrollama: Scrollytelling with IntersectionObserver.&quot;&gt;github.com/russellgoldenberg/scrollama&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;IntersectionObserverを使ったスクロールでのクラスの付け外しなどを行えるライブラリ。&lt;br&gt;
スクロールでデザインが変わるパターンの実装補助ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nervjs/nerv:-a-blazing-fast-react-alternative,-compatible-with-ie8-and-react-16.&quot;&gt;NervJS/nerv: A blazing fast React alternative, compatible with IE8 and React 16.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/NervJS/nerv&quot; title=&quot;NervJS/nerv: A blazing fast React alternative, compatible with IE8 and React 16.&quot;&gt;github.com/NervJS/nerv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactライクなAPIをもつライブラリ。ファイルサイズや小さくしつつReactとの互換性をもつことを目的にしている。また、IE8をサポートしていて、devToolsやReduxとの連携するパッケージも用意されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NervJS/nerv/issues/10#issuecomment-356913486&quot; title=&quot;What&amp;amp;amp;#39;s the tradeoff? · Issue #10 · NervJS/nerv&quot;&gt;What&amp;#39;s the tradeoff? · Issue #10 · NervJS/nerv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zouhir/jarvis:-a-very-intelligent-browser-based-webpack-dashboard&quot;&gt;zouhir/jarvis: A very intelligent browser based Webpack dashboard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zouhir/jarvis&quot; title=&quot;zouhir/jarvis: A very intelligent browser based Webpack dashboard&quot;&gt;github.com/zouhir/jarvis&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackのダッシュボードプラグイン。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react本格入門-導入からテストまで高速で描写するための開発手法（穴井宏幸-柴田和祈-石井直矢-三宮肇）｜翔泳社の本&quot;&gt;React本格入門 導入からテストまで高速で描写するための開発手法（穴井宏幸 柴田和祈 石井直矢 三宮肇）｜翔泳社の本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.shoeisha.co.jp/book/detail/9784798153353&quot; title=&quot;React本格入門 導入からテストまで高速で描写するための開発手法（穴井宏幸 柴田和祈 石井直矢 三宮肇）｜翔泳社の本&quot;&gt;www.shoeisha.co.jp/book/detail/9784798153353&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年02月19日発売&lt;br&gt;
Reactに関する書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 16 Jan 2018 10:50:34 +0900</pubDate>
        <link>https://jser.info/2018/01/16/prettier-1.10-secure-contexts-tdd-in-framework/</link>
        <guid isPermaLink="true">https://jser.info/2018/01/16/prettier-1.10-secure-contexts-tdd-in-framework/</guid>
        
        <category>prettier</category>
        
        <category>https</category>
        
        <category>TDD</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
