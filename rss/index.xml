<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 06 Apr 2017 12:36:50 +0900</pubDate>
    <lastBuildDate>Thu, 06 Apr 2017 12:36:50 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2017-04-04のJS: Safari 10.1、ECMAScript 2017-2018、Reactのパフォーマンス計測/改善</title>
        <description>&lt;p&gt;JSer.info #325 - Safari 10.1が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/7477/new-web-features-in-safari-10-1/&quot; title=&quot;New Web Features in Safari 10.1 | WebKit&quot;&gt;New Web Features in Safari 10.1 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fetch API、CSS Grid、ES2016+、IndexedDB 2.0、Custom Elements、Gamepad、Pointer Lock、Input Events、&lt;code&gt;download&lt;/code&gt;属性、HTML Media Captureなどかなり色々な機能が実装されています。&lt;/p&gt;

&lt;p&gt;過去に関連する解説記事も書かれているのであわせてみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/7434/css-grid-layout-a-new-layout-module-for-the-web/&quot; title=&quot;CSS Grid Layout: A New Layout Module for the Web | WebKit&quot;&gt;CSS Grid Layout: A New Layout Module for the Web | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/7027/introducing-custom-elements/&quot; title=&quot;Introducing Custom Elements | WebKit&quot;&gt;Introducing Custom Elements | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;blockquote&gt;
&lt;p&gt;ES2017 was officially approved by the committee to be sent to the ECMA General Assembly for approval.&lt;br&gt;&lt;br&gt;
-- &lt;a href=&quot;https://github.com/rwaldron/tc39-notes/pull/64#issuecomment-291270151&quot; title=&quot;March 2017 meeting notes by leobalter · Pull Request #64 · rwaldron/tc39-notes&quot;&gt;March 2017 meeting notes by leobalter · Pull Request #64 · rwaldron/tc39-notes&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ECMAScript 2017の仕様が固まり、TC39(ECMAScriptの仕様を決める技術委員会)の中で承認され、ECMA &lt;a href=&quot;https://www.ecma-international.org/memento/GA.htm&quot; title=&quot;General Assembly&quot;&gt;General Assembly&lt;/a&gt;に提出されました。&lt;/p&gt;

&lt;p&gt;後は、2017年6月27日に行われる次の&lt;a href=&quot;https://www.ecma-international.org/memento/Ecma_meeting_calendar.htm&quot; title=&quot;GA 113th meeting&quot;&gt;GA 113th meeting&lt;/a&gt;において承認されれば、正式にECMAScript 2017がリリースされます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/memento/Ecma_meeting_calendar.htm&quot; title=&quot;Ecma meeting calendar&quot;&gt;Ecma meeting calendar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2017で入る仕様については次の記事でまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2ality.com/2016/02/ecmascript-2017.html&quot; title=&quot;ECMAScript 2017: the final feature set&quot;&gt;ECMAScript 2017: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2017の仕様はフリーズされたため、&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;tc39/ecma262&quot;&gt;tc39/ecma262&lt;/a&gt;のmasterブランチは&lt;a href=&quot;https://github.com/tc39/ecma262/commit/8340bf9a8427ea81bb0d1459471afbcc91d18add&quot; title=&quot;Editorial: master is now ES2018 draft · tc39/ecma262@8340bf9&quot;&gt;ES2018 draft&lt;/a&gt;となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;ECMAScriptのISO標準版である&lt;a href=&quot;http://www.iso.org/iso/catalogue_detail.htm?csnumber=55755&quot;&gt;ISO/IEC 16262&lt;/a&gt;は、&lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-414.htm&quot; title=&quot;ECMAScript Specification Suite&quot;&gt;ECMA-414 ECMAScript Specification Suite&lt;/a&gt;という仕様が代わりに提案されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2017/02/27/ecma-414/&quot; title=&quot;ECMA-414 ECMAScript Specification Suiteについて | Web Scratch&quot;&gt;ECMA-414 ECMAScript Specification Suiteについて | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ES2018以降に入るかもしれないECMAScriptのProposalのステータスについては下記にまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2017/04/04/ecmascript-proposals-status&quot; title=&quot;ECMAScript proposal updates @ 2017-03 | ECMAScript Daily&quot;&gt;ECMAScript proposal updates @ 2017-03 | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;先月時点のステータス変更のまとめ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposals&quot; title=&quot;tc39/proposals: Tracking ECMAScript Proposals&quot;&gt;tc39/proposals: Tracking ECMAScript Proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先月のミーティングでは、正規表現周りの改善Proposalが4つもStage 3へとなりました。&lt;br&gt;
正規表現のProposalに興味がある人は次の記事を見ると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/articles/regular-expressions-post-es6&quot; title=&quot;Regular Expressions in a post-ES6 world&quot;&gt;Regular Expressions in a post-ES6 world&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://marmelab.com/blog/2017/02/06/react-is-slow-react-is-fast.html&quot; title=&quot;React is Slow, React is Fast: Optimizing React Apps in Practice&quot;&gt;React is Slow, React is Fast: Optimizing React Apps in Practice&lt;/a&gt;という記事ではReactアプリケーションのパフォーマンス計測や改善のアプローチについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;?react_perf&lt;/code&gt;を使ったコンポーネントプロファイルのとり方と行った計測と改善のアプローチについてがそれぞれ書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;normalize.css/changelog.md-at-master-·-necolas/normalize.css&quot;&gt;normalize.css/CHANGELOG.md at master · necolas/normalize.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/necolas/normalize.css/blob/master/CHANGELOG.md&quot; title=&quot;normalize.css/CHANGELOG.md at master · necolas/normalize.css&quot;&gt;github.com/necolas/normalize.css/blob/master/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;normalize.css 6.0.0リリース。&lt;br&gt;
HTML要素やform要素への&lt;code&gt;font-family&lt;/code&gt;、&lt;code&gt;line-height&lt;/code&gt;などのopinionated rulesを削除&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tc39:-ecma-402-updates-|-rafael-xavier&quot;&gt;TC39: Ecma-402 updates | Rafael Xavier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://rafael.xavier.blog.br/2017/03/23/tc39-ecma-402-updates/&quot; title=&quot;TC39: Ecma-402 updates | Rafael Xavier&quot;&gt;rafael.xavier.blog.br/2017/03/23/tc39-ecma-402-updates/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ecma-402(ECMAScript i18n API)のProposalやステータスについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.3.0-·-qunitjs/qunit&quot;&gt;Release 2.3.0 · qunitjs/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/releases/tag/2.3.0&quot; title=&quot;Release 2.3.0 · qunitjs/qunit&quot;&gt;github.com/qunitjs/qunit/releases/tag/2.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;QUnit 2.3.0リリース。&lt;br&gt;
QUnit CLIの追加、CLIからQUnitを実行でき、reporterなどを指定できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/pull/1115&quot; title=&quot;CLI: Introduce QUnit CLI by trentmwillis · Pull Request #1115 · qunitjs/qunit&quot;&gt;CLI: Introduce QUnit CLI by trentmwillis · Pull Request #1115 · qunitjs/qunit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/issues/1024&quot; title=&quot;Introduce CLI tool · Issue #1024 · qunitjs/qunit&quot;&gt;Introduce CLI tool · Issue #1024 · qunitjs/qunit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-web-features-in-safari-10.1-|-webkit&quot;&gt;New Web Features in Safari 10.1 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7477/new-web-features-in-safari-10-1/&quot; title=&quot;New Web Features in Safari 10.1 | WebKit&quot;&gt;webkit.org/blog/7477/new-web-features-in-safari-10-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 10.1リリース。&lt;br&gt;
Fetch API、CSS Grid、ES2016+、IndexedDB 2.0、Custom Elements、Gamepad、Pointer Lock、Input Events、&lt;code&gt;download&lt;/code&gt;属性、HTML Media Captureなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.8.0-(current)-|-node.js&quot;&gt;Node v7.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.8.0/&quot; title=&quot;Node v7.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 7.8.0リリース。&lt;br&gt;
npm 4.2.0へアップデート、async functionの修正のバックポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe-v0.14.0-released-|-testcafe&quot;&gt;TestCafe v0.14.0 Released | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-14-0-released.html&quot; title=&quot;TestCafe v0.14.0 Released | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/testcafe-v0-14-0-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TestCafe v0.14.0リリース。&lt;br&gt;
&lt;code&gt;Role&lt;/code&gt;でログイン情報を決めることができるように、BrowserStackサポート、&lt;code&gt;t.debug()&lt;/code&gt;で&lt;code&gt;debugger;&lt;/code&gt;的なデバッグができるように、&lt;code&gt;file://&lt;/code&gt;に対してもテストできるように、&lt;code&gt;Selector&lt;/code&gt;にカスタムメソッドを定義できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow:-a-static-type-checker-for-javascript&quot;&gt;Flow: A Static Type Checker for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://flow.org/en/&quot; title=&quot;Flow: A Static Type Checker for JavaScript&quot;&gt;flow.org/en/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flowの公式サイトがリニューアル公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-almin.js-0.11-·-almin/almin&quot;&gt;Release Almin.js 0.11 · almin/almin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/almin/almin/releases/tag/0.11.0&quot; title=&quot;Release Almin.js 0.11 · almin/almin&quot;&gt;github.com/almin/almin/releases/tag/0.11.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Almin 0.11リリース。&lt;br&gt;
Functional UseCaseのサポート、APIドキュメントの更新、Reactバインディングの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-free-microsoft-edge-testing-in-partnership-with-browserstack---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;Announcing free Microsoft Edge testing in partnership with BrowserStack - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/03/30/free-edge-testing-browserstack/&quot; title=&quot;Announcing free Microsoft Edge testing in partnership with BrowserStack - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2017/03/30/free-edge-testing-browserstack/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BrowserStackでテスト目的のMSEdgeが無料で利用できるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.browserstack.com/test-on-microsoft-edge-browser#live-cloud&quot; title=&quot;Free Edge Testing on Windows 10&quot;&gt;Free Edge Testing on Windows 10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-–-next.js-2.0&quot;&gt;ZEIT – Next.js 2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zeit.co/blog/next2&quot; title=&quot;ZEIT – Next.js 2.0&quot;&gt;zeit.co/blog/next2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったフレームワークであるNext.js 2.0リリース。&lt;br&gt;
動的なルーティングができるように、&lt;code&gt;next/css&lt;/code&gt;は非推奨となり代わりに&lt;code&gt;styled-jsx&lt;/code&gt;を導入、&lt;code&gt;&amp;lt;Link&amp;gt;&lt;/code&gt;の&lt;code&gt;prefetch&lt;/code&gt;サポート、サンプルの追加、&lt;code&gt;babel&lt;/code&gt;の設定などを行えるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zeit/styled-jsx&quot; title=&quot;zeit/styled-jsx: Full CSS support for JSX without compromises&quot;&gt;zeit/styled-jsx: Full CSS support for JSX without compromises&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zeit/next.js/wiki/Migrating-from-next-css&quot; title=&quot;Migrating from next css · zeit/next.js Wiki&quot;&gt;Migrating from next css · zeit/next.js Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-help-us-test-the-future-of-v8!&quot;&gt;V8 JavaScript Engine: Help us test the future of V8!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8project.blogspot.com/2017/02/help-us-test-future-of-v8.html&quot; title=&quot;V8 JavaScript Engine: Help us test the future of V8!&quot;&gt;v8project.blogspot.com/2017/02/help-us-test-future-of-v8.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8の新しいコンパイラーパイプラインであるIgnition interpreterとTurbofan compilerを有効化する方法について。&lt;br&gt;
またバグを見つけた時の報告先について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-better-javascript-with-flow-—-sitepoint&quot;&gt;Writing Better JavaScript with Flow — SitePoint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/writing-better-javascript-with-flow/&quot; title=&quot;Writing Better JavaScript with Flow — SitePoint&quot;&gt;www.sitepoint.com/writing-better-javascript-with-flow/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flowの基本的な使い方についての解説記事。&lt;br&gt;
型の付け方、ライブラリの型、型アノテーションの取り除き方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-is-slow,-react-is-fast:-optimizing-react-apps-in-practice&quot;&gt;React is Slow, React is Fast: Optimizing React Apps in Practice&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://marmelab.com/blog/2017/02/06/react-is-slow-react-is-fast.html&quot; title=&quot;React is Slow, React is Fast: Optimizing React Apps in Practice&quot;&gt;marmelab.com/blog/2017/02/06/react-is-slow-react-is-fast.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのパフォーマンス計測と改善について。&lt;br&gt;
&lt;code&gt;?react_perf&lt;/code&gt;を使いコンポーネントプロファイル、&lt;code&gt;why-did-you-update&lt;/code&gt;でのコンポーネントの更新時間の計測。&lt;br&gt;
shouldComponentUpdateでの無駄な更新を排除することでの改善、RecomposeやReselect、React/JSXの使い方での改善について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/garbles/why-did-you-update&quot; title=&quot;garbles/why-did-you-update: Puts your console on blast when React is making unnecessary updates.&quot;&gt;garbles/why-did-you-update: Puts your console on blast when React is making unnecessary updates.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelte-ナメてたけど結構スゴい---qiita&quot;&gt;Svelte ナメてたけど結構スゴい - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/jgs/items/2d985894ea07f48b74fb&quot; title=&quot;Svelte ナメてたけど結構スゴい - Qiita&quot;&gt;qiita.com/jgs/items/2d985894ea07f48b74fb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML/CSS/JSをセットで書いたコンポーネントをJavaScript+小さなランタイムに変換するUIフレームワークであるSvelteについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;regular-expressions-in-a-post-es6-world&quot;&gt;Regular Expressions in a post-ES6 world&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ponyfoo.com/articles/regular-expressions-post-es6&quot; title=&quot;Regular Expressions in a post-ES6 world&quot;&gt;ponyfoo.com/articles/regular-expressions-post-es6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES2015以降の正規表現の追加された仕様とProposalの仕様について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js-tutorial:-a-prerendered,-seo-friendly-example-[live-demo]---snipcart&quot;&gt;Vue.js Tutorial: A Prerendered, SEO-Friendly Example [Live Demo] - Snipcart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snipcart.com/blog/vuejs-tutorial-seo-example&quot; title=&quot;Vue.js Tutorial: A Prerendered, SEO-Friendly Example \[Live Demo\] - Snipcart&quot;&gt;snipcart.com/blog/vuejs-tutorial-seo-example&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsのチュートリアル。 PrerenderSpaPluginを使うことで、静的なHTMLを吐けるようにするところまでを行う話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-@-2017-03-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2017-03 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2017/04/04/ecmascript-proposals-status&quot; title=&quot;ECMAScript proposal updates @ 2017-03 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2017/04/04/ecmascript-proposals-status&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript Proposalの最新の変更まとめ。&lt;br&gt;
正規表現系のProposalがStage 3になった。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;君はyarn.lockをコミットしているか？&quot;&gt;君はyarn.lockをコミットしているか？&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/teppeis/do-you-commit-yarnlock&quot; title=&quot;君はyarn.lockをコミットしているか？&quot;&gt;www.slideshare.net/teppeis/do-you-commit-yarnlock&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ライブラリでyarn.lockをコミットすることによるdevDepsの固定のメリットについて。&lt;br&gt;
devDepsの方がBreaking Changeは起きやすいため固定することによるメリットがあるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js-tutorial:-a-prerendered,-seo-friendly-example-[live-demo]---snipcart&quot;&gt;Vue.js Tutorial: A Prerendered, SEO-Friendly Example [Live Demo] - Snipcart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snipcart.com/blog/vuejs-tutorial-seo-example&quot; title=&quot;Vue.js Tutorial: A Prerendered, SEO-Friendly Example \[Live Demo\] - Snipcart&quot;&gt;snipcart.com/blog/vuejs-tutorial-seo-example&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsのチュートリアル。&lt;br&gt;
PrerenderSpaPluginを使うことで、静的なHTMLを吐けるようにするところまでを行う話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sdgluck/mewt:-immutability-in-under-one-kilobyte&quot;&gt;sdgluck/mewt: Immutability in under one kilobyte&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sdgluck/mewt&quot; title=&quot;sdgluck/mewt: Immutability in under one kilobyte&quot;&gt;github.com/sdgluck/mewt&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Proxyを使ったシンプルなImmutableラッパーライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;はじめに-|-reset-cssフレンズ&quot;&gt;はじめに | Reset CSSフレンズ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://friends.o2p.jp/&quot; title=&quot;はじめに | Reset CSSフレンズ&quot;&gt;friends.o2p.jp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ebook&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ユーザーエージェントによるCSSの特徴を上書きしていくReset CSSやnormalize.cssなどがどのようなスタイルを当てているかについての解説&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 Apr 2017 09:17:15 +0900</pubDate>
        <link>https://jser.info/2017/04/04/safari-10.1-ecmascript-2017-2018-react/</link>
        <guid isPermaLink="true">https://jser.info/2017/04/04/safari-10.1-ecmascript-2017-2018-react/</guid>
        
        <category>Safari</category>
        
        <category>ECMAScript</category>
        
        <category>ES2017</category>
        
        <category>ES2018</category>
        
        <category>React</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-03-27のJS: Angular v4.0.0、CSS Custom Properties、npm Organization</title>
        <description>&lt;p&gt;JSer.info #324 - Angular v4.0.0がリリースされました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2017/03/angular-400-now-available.html&quot; title=&quot;Angular: Angular 4.0.0 Now Available&quot;&gt;Angular: Angular 4.0.0 Now Available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.0.0/CHANGELOG.md&quot; title=&quot;angular/CHANGELOG.md at 4.0.0 · angular/angular&quot;&gt;angular/CHANGELOG.md at 4.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前から発表されていたsemverに則ったメジャーバージョンです。&lt;br&gt;
また、Angularは Time-based Release Cycles も採用しているため、半年に一度新しいメジャーバージョンを公開していく予定となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2016/10/versioning-and-releasing-angular.html&quot; title=&quot;Angular: Versioning and Releasing Angular&quot;&gt;Angular: Versioning and Releasing Angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Animationパッケージのコアからの分離、コンパイル後のViewのコード量の削減、TypeScript 2.1/2.2対応、テンプレートのSource Map対応などがふくまれています。&lt;br&gt;
また、&lt;a href=&quot;https://github.com/angular/angular-cli&quot; title=&quot;Angular CLI&quot;&gt;Angular CLI&lt;/a&gt;も合わせて1.0.0となっています。&lt;/p&gt;

&lt;p&gt;次のサイトでは、指定したバージョンからのマイグレーションガイドが参照できます。。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular-update-guide.firebaseapp.com/&quot; title=&quot;Angular Update Guide&quot;&gt;Angular Update Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/03/24/css-custom-properties/#S6xrLxcFIVhEFkwf.97&quot; title=&quot;CSS Custom Properties in Microsoft Edge - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;CSS Custom Properties in Microsoft Edge - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/a&gt;という記事では、MSEdgeがCSS Custom Propertiesにしたため、CSS Custom Propertiesについて解説されています。&lt;/p&gt;

&lt;p&gt;CSS Custom Propertyの使い方、&lt;code&gt;@support&lt;/code&gt;を使ったfeature detect、JavaScriptからの操作方法など。&lt;br&gt;
IEを除く主要ブラウザではサポートされているので、一度ネイティブのCSS Custom Propertiesの使い方を見てみると良いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://caniuse.com/#feat=css-variables&quot; title=&quot;Can I use... Support tables for HTML5, CSS3, etc&quot;&gt;CSS Variables (Custom Properties) - Can I use...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;npmのOrganization(&lt;code&gt;npm team&lt;/code&gt;)機能がオープンソース向けに無料で利用できるようになりました。&lt;br&gt;
GitHubのOrganizationのように、そのTeamへ人を追加することができます。&lt;br&gt;
これにより複数人で同じScoped Packagesを参照しやすくなりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/158718200065/announcing-free-orgs&quot; title=&quot;The npm Blog — announcing free Orgs&quot;&gt;The npm Blog — announcing free Orgs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今までも、&lt;code&gt;@azu/hello&lt;/code&gt;のような自分のアカウントに紐づくScoped Pacakgesは無料で扱うことができましたが、&lt;br&gt;
今回はOrganizationもPublicな範囲では、無料で利用できるようになっています。&lt;/p&gt;

&lt;p&gt;Privateなパッケージは今まで通り&lt;a href=&quot;https://www.npmjs.com/pricing&quot;&gt;$7 / month&lt;/a&gt;からで利用できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scope | npm Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/04/30/npm-namespace/&quot;&gt;npmで名前空間を持ったモジュールを公開する方法(scoped modules) | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;既存のアカウントをOrganizationへ変換することもできるので、フレームワークのようなものを特定のScoped Packagesとしてまとめるのに役立ちそうです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;# npmで既存ユーザーのOrgsへの変換手順&lt;br&gt;&lt;br&gt;1. 変換したいユーザーで &lt;a href=&quot;https://t.co/4ntGHilKvU&quot;&gt;https://t.co/4ntGHilKvU&lt;/a&gt; の&amp;quot;Upgrade&amp;quot; ボタンを押す&lt;br&gt;2. Orgsに紐づく新しいユーザー名を入力(既存無理)&lt;br&gt;3. Orgsが作れたら、所属させたい人をTeamに追加する &lt;a href=&quot;https://t.co/Vi0GBCW3ew&quot;&gt;pic.twitter.com/Vi0GBCW3ew&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/844794235886886914&quot;&gt;2017年3月23日&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moment/changelog.md-at-2.18.0-·-moment/moment&quot;&gt;moment/CHANGELOG.md at 2.18.0 · moment/moment&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moment/moment/blob/2.18.0/CHANGELOG.md&quot; title=&quot;moment/CHANGELOG.md at 2.18.0 · moment/moment&quot;&gt;github.com/moment/moment/blob/2.18.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;moment 2.18.0リリース・&lt;br&gt;
RFC 2822のパースをサポート、1-24時表示を行う&lt;code&gt;k&lt;/code&gt;と&lt;code&gt;kk&lt;/code&gt;フォーマットのサポート、CJK time formatの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/ichernev/78920c5a1e419fb28c6e4546d1b7235c&quot; title=&quot;moment 2.18.0 changelog&quot;&gt;moment 2.18.0 changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.suikawiki.org/n/RFC%202822%E3%81%AE%E6%97%A5%E4%BB%98%E5%BD%A2%E5%BC%8F&quot; title=&quot;RFC 2822の日付形式&quot;&gt;RFC 2822の日付形式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/moment/moment/pull/3608&quot; title=&quot;\[locale\] ja, zh-\*, ko: Standardize CJK time formats by jasonkb · Pull Request #3608 · moment/moment&quot;&gt;[locale] ja, zh-*, ko: Standardize CJK time formats by jasonkb · Pull Request #3608 · moment/moment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember-2.12-and-2.13-beta-released&quot;&gt;Ember.js - Ember 2.12 and 2.13 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2017/03/19/ember-2-12-released.html&quot; title=&quot;Ember.js - Ember 2.12 and 2.13 Beta Released&quot;&gt;emberjs.com/blog/2017/03/19/ember-2-12-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 2.12と2.13βリリース。&lt;br&gt;
&lt;code&gt;factoryFor&lt;/code&gt; APIの追加、&lt;code&gt;Ember.K&lt;/code&gt;が非推奨へになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-5.25.0---announce---discuss.codemirror&quot;&gt;Release 5.25.0 - Announce - discuss.CodeMirror&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://discuss.codemirror.net/t/release-5-25-0/1175&quot; title=&quot;Release 5.25.0 - Announce - discuss.CodeMirror&quot;&gt;discuss.codemirror.net/t/release-5-25-0/1175&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CodeMirror 5.25.0リリース。&lt;br&gt;
最初のコミットから10周年のリリース。&lt;br&gt;
&lt;code&gt;contentEditable&lt;/code&gt;周りの修正、&lt;code&gt;lint&lt;/code&gt; addonがPromiseをサポートするなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-scala.js-0.6.15---scala.js&quot;&gt;Announcing Scala.js 0.6.15 - Scala.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.scala-js.org/news/2017/03/21/announcing-scalajs-0.6.15/&quot; title=&quot;Announcing Scala.js 0.6.15 - Scala.js&quot;&gt;www.scala-js.org/news/2017/03/21/announcing-scalajs-0.6.15/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;scala&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Scala.js 0.6.15リリース。&lt;br&gt;
&lt;code&gt;@JSExportStatic&lt;/code&gt;の追加、&lt;code&gt;@JSExportTopLevel&lt;/code&gt;をfieldに対しても利用できるように、Symbolを表現する&lt;code&gt;js.Symbol&lt;/code&gt;などの追加、&lt;br&gt;
マイグレーションツールとしてscalafixも公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://scalacenter.github.io/scalafix/&quot; title=&quot;scalafix - a Scala rewrite tool&quot;&gt;scalafix - a Scala rewrite tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-58-beta:-indexeddb-2.0,-an-improvement-to-iframe-navigation,-and-immersive-full-screen-for-pwas&quot;&gt;Chromium Blog: Chrome 58 Beta: IndexedDB 2.0, an improvement to iframe navigation, and immersive full screen for PWAs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2017/03/chrome-58-beta-indexeddb-20_21.html&quot; title=&quot;Chromium Blog: Chrome 58 Beta: IndexedDB 2.0, an improvement to iframe navigation, and immersive full screen for PWAs&quot;&gt;blog.chromium.org/2017/03/chrome-58-beta-indexeddb-20_21.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 58 Betaリリース。&lt;br&gt;
IndexedDB 2.0、iframe sandboxで&lt;code&gt;allow-top-navigation-by-user-activation&lt;/code&gt;をサポート、&lt;code&gt;display: flow-root&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-26-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 26 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7474/release-notes-for-safari-technology-preview-26/&quot; title=&quot;Release Notes for Safari Technology Preview 26 | WebKit&quot;&gt;webkit.org/blog/7474/release-notes-for-safari-technology-preview-26/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 26リリース。&lt;br&gt;
WebGPUの試験的サポート、&lt;code&gt;history.scrollRestoration&lt;/code&gt;のサポート、CSS &lt;code&gt;stroke-width&lt;/code&gt;プロパティのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular:-angular-4.0.0-now-available&quot;&gt;Angular: Angular 4.0.0 Now Available&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2017/03/angular-400-now-available.html&quot; title=&quot;Angular: Angular 4.0.0 Now Available&quot;&gt;angularjs.blogspot.com/2017/03/angular-400-now-available.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 4リリース。&lt;br&gt;
バージョンを合わせるためにv3を飛ばしてv4へ。&lt;br&gt;
AOTコンパイルによるViewのコード量の削減、TypeScript 2.1/2.2対応、テンプレートのSource Map対応など。&lt;br&gt;
Angular CLIも合わせて1.0.0を公開。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.0.0/CHANGELOG.md&quot; title=&quot;angular/CHANGELOG.md at 4.0.0 · angular/angular&quot;&gt;angular/CHANGELOG.md at 4.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-1.0-update&quot; title=&quot;stories 1.0 update · angular/angular-cli Wiki&quot;&gt;stories 1.0 update · angular/angular-cli Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cyclow&quot;&gt;Cyclow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cyclow.js.org/&quot; title=&quot;Cyclow&quot;&gt;cyclow.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cycle.jsライクなコンポーネントフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mnot’s-blog:-the-state-of-browser-caching,-revisited&quot;&gt;mnot’s blog: The State of Browser Caching, Revisited&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mnot.net/blog/2017/03/16/browser-caching&quot; title=&quot;mnot’s blog: The State of Browser Caching, Revisited&quot;&gt;www.mnot.net/blog/2017/03/16/browser-caching&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;各ブラウザのHTTPリクエスト/レスポンスとキャッシュの実装についての調査。&lt;br&gt;
Status Code別のキャッシュ、&lt;code&gt;Cache-Control&lt;/code&gt; header、&lt;code&gt;Vary&lt;/code&gt; headerについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-redux-by-coding-a-mini-redux-–-jakob-lind&quot;&gt;Learn Redux by coding a Mini-Redux – Jakob Lind&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jakoblind.no/2017/03/13/learn-redux-by-coding-a-mini-redux/&quot; title=&quot;Learn Redux by coding a Mini-Redux – Jakob Lind&quot;&gt;blog.jakoblind.no/2017/03/13/learn-redux-by-coding-a-mini-redux/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;小さなReduxを作ってReduxについて学ぶ記事。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/Redux/&quot; title=&quot;Redux · JavaScript Plugin Architecture&quot;&gt;Redux · JavaScript Plugin Architecture&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-features---10-use-cases-for-proxy&quot;&gt;ES6 Features - 10 Use Cases for Proxy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dealwithjs.io/es6-features-10-use-cases-for-proxy/&quot; title=&quot;ES6 Features - 10 Use Cases for Proxy&quot;&gt;dealwithjs.io/es6-features-10-use-cases-for-proxy/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Proxyのユースケース紹介。&lt;br&gt;
デフォルト値、private、enum、observer、cache、&lt;code&gt;in&lt;/code&gt;演算子、シングルトン、バリデーションとrevocable proxy、Python likeなSubscriptionなど。&lt;br&gt;
またProxyをした際のパフォーマンスについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-custom-properties-in-microsoft-edge---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;CSS Custom Properties in Microsoft Edge - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/03/24/css-custom-properties/&quot; title=&quot;CSS Custom Properties in Microsoft Edge - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2017/03/24/css-custom-properties/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeがCSS Custom Propertyをサポート。&lt;br&gt;
CSS Custom Propertyの使い方、&lt;code&gt;@support&lt;/code&gt;を使ったfeature detect、JavaScriptからの操作方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;common-async/await-design-patterns-in-node.js-|-www.thecodebarbarian.com&quot;&gt;Common Async/Await Design Patterns in Node.js | www.thecodebarbarian.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://thecodebarbarian.com/common-async-await-design-patterns-in-node.js.html&quot; title=&quot;Common Async/Await Design Patterns in Node.js | www.thecodebarbarian.com&quot;&gt;thecodebarbarian.com/common-async-await-design-patterns-in-node.js.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Async/Awaitのパターンについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-diスキ-//-speaker-deck&quot;&gt;Angular DIスキ // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/kozake/angular-disuki&quot; title=&quot;Angular DIスキ // Speaker Deck&quot;&gt;speakerdeck.com/kozake/angular-disuki&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 2.xのDIの仕組みについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-announcing-free-orgs&quot;&gt;The npm Blog — announcing free Orgs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/158718200065/announcing-free-orgs&quot; title=&quot;The npm Blog — announcing free Orgs&quot;&gt;blog.npmjs.org/post/158718200065/announcing-free-orgs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm orgでfree organizationが作成できるように。&lt;br&gt;
既存ユーザーをorganizationを変換することもできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;myshov/history-of-javascript:-project-&amp;quot;history-of-javascript&amp;quot;&quot;&gt;myshov/history-of-javascript: Project &amp;quot;History of JavaScript&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/myshov/history-of-javascript&quot; title=&quot;myshov/history-of-javascript: Project \&amp;quot;History of JavaScript\&amp;quot;&quot;&gt;github.com/myshov/history-of-javascript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;歴史&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの歴史を振り返る連載&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pubkey/rxdb:-client-side-database-for-browsers,-nodejs,-electron,-cordova,-react-native-and-every-other-javascript-runtime&quot;&gt;pubkey/rxdb: Client-Side Database for Browsers, NodeJS, electron, cordova, react-native and every other javascript-runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pubkey/rxdb&quot; title=&quot;pubkey/rxdb: Client-Side Database for Browsers, NodeJS, electron, cordova, react-native and every other javascript-runtime&quot;&gt;github.com/pubkey/rxdb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザ、Node.js、Electron、cordova、react-nativeで動作するクライアントサイドデータベースライブラリ。&lt;br&gt;
JSON Schemaベースで、mongo likeなクエリを利用でき、rxjsと連携することができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;minireset.css:-a-tiny-modern-css-reset&quot;&gt;minireset.css: a tiny modern CSS reset&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jgthms.com/minireset.css/&quot; title=&quot;minireset.css: a tiny modern CSS reset&quot;&gt;jgthms.com/minireset.css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;小さなreset.cssライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simple-counter:-different-implementations...&quot;&gt;Simple counter: different implementations...&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/srdjan/1d10cbd42a2d695f696dee6b47fdc5e0&quot; title=&quot;Simple counter: different implementations...&quot;&gt;gist.github.com/srdjan/1d10cbd42a2d695f696dee6b47fdc5e0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;いろんな言語、フレームワークでのカウンターの実装のコレクション&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechrome/ui-element-samples:-a-collection-of-prototyped-ui-elements&quot;&gt;GoogleChrome/ui-element-samples: A collection of prototyped UI elements&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/ui-element-samples&quot; title=&quot;GoogleChrome/ui-element-samples: A collection of prototyped UI elements&quot;&gt;github.com/GoogleChrome/ui-element-samples&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;example&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;いろんなWebPlatform APIを使ったUIのサンプル集&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/03/performant-expand-and-collapse&quot; title=&quot;Building performant expand &amp;amp;amp;amp; collapse animations  |  Web  |  Google Developers&quot;&gt;Building performant expand &amp;amp; collapse animations  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-journey-to-functional-javascript:-part-1-–-fundamentals-–-grzegorz-ziółkowski&quot;&gt;A journey to functional JavaScript: Part 1 – fundamentals – Grzegorz Ziółkowski&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gziolo.pl/2017/03/24/refactoring-to-functional-javascript-part-1-fundamentals/&quot; title=&quot;A journey to functional JavaScript: Part 1 – fundamentals – Grzegorz Ziółkowski&quot;&gt;gziolo.pl/2017/03/24/refactoring-to-functional-javascript-part-1-fundamentals/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでの関数型プログラミングについての記事シリーズ。&lt;br&gt;
関数型プログラミングに出てくる用語について&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 27 Mar 2017 19:41:11 +0900</pubDate>
        <link>https://jser.info/2017/03/27/angular-v4.0.0-css-custom-properties-npm-organization/</link>
        <guid isPermaLink="true">https://jser.info/2017/03/27/angular-v4.0.0-css-custom-properties-npm-organization/</guid>
        
        <category>Angular</category>
        
        <category>CSS</category>
        
        <category>npm</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-03-19のJS: jQuery 3.2.0、Sinon.JS 2.0、testdouble.js 2.0、React/Redux/CRUD</title>
        <description>&lt;p&gt;JSer.info #323 - &lt;a href=&quot;https://blog.jquery.com/2017/03/16/jquery-3-2-0-is-out/&quot; title=&quot;jQuery 3.2.0&quot;&gt;jQuery 3.2.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jquery.com/2017/03/16/jquery-3-2-0-is-out/&quot; title=&quot;jQuery 3.2.0 Is Out! | Official jQuery Blog&quot;&gt;jQuery 3.2.0 Is Out! | Official jQuery Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$.css&lt;/code&gt;がCSS Custom Propertyをサポート、transformされた要素の&lt;code&gt;.width()&lt;/code&gt;、&lt;code&gt;.height()&lt;/code&gt;の値がおかしい問題を修正、&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;要素をサポートされています。&lt;br&gt;
また、&lt;a href=&quot;https://github.com/jquery/jquery/issues/3288&quot; title=&quot;jQuery.holdReady&quot;&gt;jQuery.holdReady&lt;/a&gt;、&lt;a href=&quot;https://github.com/jquery/jquery/issues/3475&quot; title=&quot;jQuery.nodeName&quot;&gt;jQuery.nodeName&lt;/a&gt;、&lt;a href=&quot;https://github.com/jquery/jquery/issues/2961&quot; title=&quot;jQuery.isArray&quot;&gt;jQuery.isArray&lt;/a&gt;が非推奨となっています。&lt;/p&gt;

&lt;p&gt;いくつかのregressionが見つかっていますが、それらは3.2.1で修正される予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues/3573&quot; title=&quot;$.holdReady is broken in 3.2.0 · Issue #3573 · jquery/jquery&quot;&gt;$.holdReady is broken in 3.2.0 · Issue #3573 · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues/3571&quot; title=&quot;Regression: width() &amp;amp;amp; height() return 0 for all inline elements · Issue #3571 · jquery/jquery&quot;&gt;Regression: width() &amp;amp; height() return 0 for all inline elements · Issue #3571 · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/issues/3193&quot; title=&quot;different result of width() and height() since jQuery 3.0 · Issue #3193 · jquery/jquery&quot;&gt;different result of width() and height() since jQuery 3.0 · Issue #3193 · jquery/jquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;追記: &lt;a href=&quot;http://blog.jquery.com/2017/03/20/jquery-3-2-1-now-available/&quot; title=&quot;jQuery 3.2.1 Is Now Available, With Some Hotfixes | Official jQuery Blog&quot;&gt;jQuery 3.2.1&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;テストライブラリである&lt;a href=&quot;https://github.com/sinonjs/sinon&quot; title=&quot;Sinon.JS&quot;&gt;Sinon.JS&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sinonjs.org/releases/v2.0.0/migrating-to-2.0/&quot;&gt;Migrating to v2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sinonjs.org/releases/v2.0.0/&quot;&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;sinon.log&lt;/code&gt;や&lt;code&gt;sinon.logError&lt;/code&gt;は削除、&lt;code&gt;sinon.test&lt;/code&gt;と&lt;code&gt;sinon.testCase&lt;/code&gt;がコアから削除され&lt;a href=&quot;https://github.com/sinonjs/sinon-test&quot; title=&quot;sinon-test&quot;&gt;sinon-test&lt;/a&gt;へ分離されています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;sinon.calledInOrder&lt;/code&gt;などのInternalなメソッドが非推奨になるなど&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/sinonjs.png&quot; alt=&quot;sinon.js logo&quot;&gt;&lt;/p&gt;

&lt;p&gt;ロゴや&lt;a href=&quot;http://sinonjs.org/&quot;&gt;サイト&lt;/a&gt;も新しくなり&lt;a href=&quot;http://azu.github.io/slide/2017/t_wada_sushi/OpenCollective.html&quot; title=&quot;Open Collective&quot;&gt;Open Collective&lt;/a&gt;でスポンサーなどの募集も開始されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://opencollective.com/sinon&quot; title=&quot;sinon is on Open Collective&quot;&gt;sinon is on Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Sinon.jsの競合でもあるテストライブラリの&lt;a href=&quot;https://github.com/testdouble/testdouble.js&quot; title=&quot;testdouble.js&quot;&gt;testdouble.js&lt;/a&gt; 2.0がリリースされています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;td.object&lt;/code&gt;ではES2015 Proxyを使って存在しないプロパティなどのアクセスもキャッチ出来るようになり、&lt;code&gt;thenCallback&lt;/code&gt;などで非同期stubのサポート、&lt;code&gt;td.verify&lt;/code&gt;の改善などが行われています。&lt;/p&gt;

&lt;p&gt;機能や構文的なSinon.jsとの比較は次の記事にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html&quot; title=&quot;Test Double | Our Thinking | testdouble.js vs. sinon.js&quot;&gt;Test Double | Our Thinking | testdouble.js vs. sinon.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/m_yama6/items/573247b12ff0bc4e5d3c&quot; title=&quot;React+Redux+Express+MongoDBでものすごくシンプルなCRUDアプリをつくる - Qiita&quot;&gt;React+Redux+Express+MongoDBでものすごくシンプルなCRUDアプリをつくる - Qiita&lt;/a&gt;という記事では、React+Reduxを使ったフロント側からExpress+MongoDBを使ったサーバ側までを実装し学ぶ目的のチュートリアルが書かれています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;サーバーとの通信の方法（より一般的には非同期処理の方法）&lt;/li&gt;
&lt;li&gt;Reduxにおけるフォームの扱い&lt;/li&gt;
&lt;li&gt;ExpressによるAPI&lt;/li&gt;
&lt;li&gt;Node.jsからのMongoDBの操作&lt;/li&gt;
&lt;li&gt;Herokuへのデプロイ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ステップバイステップで丁寧に書かれており、&lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot; title=&quot;create-react-app&quot;&gt;create-react-app&lt;/a&gt;を使って短縮できる部分は短縮されていて、フロントとサーバを繋げるハマりどころについての解説などもされています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-to-v2.0&quot;&gt;Migrating to v2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://sinonjs.org/releases/v2.0.0/migrating-to-2.0/&quot; title=&quot;Migrating to v2.0&quot;&gt;sinonjs.org/releases/v2.0.0/migrating-to-2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Sinon.js 2.0リリース。&lt;br&gt;
&lt;code&gt;sinon.log&lt;/code&gt;や&lt;code&gt;sinon.logError&lt;/code&gt;は削除、&lt;code&gt;sinon.test&lt;/code&gt;と&lt;code&gt;sinon.testCase&lt;/code&gt;がコアから削除され別モジュールへ分離。&lt;br&gt;
Internalなメソッドが非推奨になるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/blob/v2.0.0/Changelog.txt&quot; title=&quot;sinon/Changelog.txt at v2.0.0 · sinonjs/sinon&quot;&gt;sinon/Changelog.txt at v2.0.0 · sinonjs/sinon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3.2.0-is-out!-|-official-jquery-blog&quot;&gt;jQuery 3.2.0 Is Out! | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jquery.com/2017/03/16/jquery-3-2-0-is-out/&quot; title=&quot;jQuery 3.2.0 Is Out! | Official jQuery Blog&quot;&gt;blog.jquery.com/2017/03/16/jquery-3-2-0-is-out/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
jQuery 3.2.0リリース。&lt;br&gt;
&lt;code&gt;$.css&lt;/code&gt;がCSS Custom Propertyをサポート、transformされた要素の&lt;code&gt;.width()&lt;/code&gt;、&lt;code&gt;.height()&lt;/code&gt;の値がおかしい問題を修正、&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;要素をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-react-router@4.0.0:-publish-·-reacttraining/react-router&quot;&gt;Release react-router@4.0.0: Publish · ReactTraining/react-router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ReactTraining/react-router/releases/tag/react-router%404.0.0&quot; title=&quot;Release react-router@4.0.0: Publish · ReactTraining/react-router&quot;&gt;github.com/ReactTraining/react-router/releases/tag/react-router%404.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React Router 4.0.0リリース。&lt;br&gt;
書き直されたバージョンであり、既存のものとは互換性がないためマイグレーションガイドは用意されていない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;https://github.com/ReactTraining/react-router/tree/v4.0.0-beta.8#why-a-major-version-bump&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ReactTraining/react-router/issues/4738&quot; title=&quot;Migration guide v3 -&amp;amp;amp;gt; v4 or changelog? · Issue #4738 · ReactTraining/react-router&quot;&gt;Migration guide v3 -&amp;gt; v4 or changelog? · Issue #4738 · ReactTraining/react-router&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ReactTraining/react-router/tree/v4.0.0-beta.8#why-a-major-version-bump&quot; title=&quot;v4 FAQ&quot;&gt;v4 FAQ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://qiita.com/Jey/items/dae2074427547e63569b&quot; title=&quot;react-router@v4対応したので雑に晒す - Qiita&quot;&gt;react-router@v4対応したので雑に晒す - Qiita&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.42.0-·-facebook/flow&quot;&gt;Release v0.42.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.42.0&quot; title=&quot;Release v0.42.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.42.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Flow 0.42.0リリース。&lt;br&gt;
Object type spread &lt;code&gt;type TypeB = { ...TypeA }&lt;/code&gt; の追加。&lt;code&gt;flow ide&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.18.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.18.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2017/03/eslint-v3.18.0-released&quot; title=&quot;ESLint v3.18.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2017/03/eslint-v3.18.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ESLint 3.18.0リリース。&lt;br&gt;
esqueryベースのASTセレクタに対応しルール内でセレクタを指定できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/estools/esquery&quot; title=&quot;estools/esquery: ECMAScript AST query library.&quot;&gt;estools/esquery: ECMAScript AST query library.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/developer-guide/selectors&quot; title=&quot;Selectors - ESLint - Pluggable JavaScript linter&quot;&gt;Selectors - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/264e59b3d28e13b633df&quot; title=&quot;ESLint v3.18.0 - Qiita&quot;&gt;ESLint v3.18.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-service-workers-–-dev-channel-–-medium&quot;&gt;Testing Service Workers – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/testing-service-workers-318d7b016b19&quot; title=&quot;Testing Service Workers – Dev Channel – Medium&quot;&gt;medium.com/dev-channel/testing-service-workers-318d7b016b19&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ServiceWorkerのスクリプトに対するユニットテストについて。&lt;br&gt;
Tests in SW、イベントのエミュレート、Push Eventのテストについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-proxy-をつかって堅牢なオブジェクトをつくるtips&quot;&gt;ES6 Proxy をつかって堅牢なオブジェクトをつくるTips&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aloerina01.github.io/javascript/2017/03/14/1.html&quot; title=&quot;ES6 Proxy をつかって堅牢なオブジェクトをつくるTips&quot;&gt;aloerina01.github.io/javascript/2017/03/14/1.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ES2015 Proxyを使ったImmutableやSingletonなどを例にした、オブジェクトの拡張方法について。&lt;br&gt;
ProxyのtrapやReflect APIについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enzymeでreactコンポーネントのテストを書こう---dmm.comラボエンジニアブログ&quot;&gt;EnzymeでReactコンポーネントのテストを書こう - DMM.comラボエンジニアブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://labotech.dmm.com/entry/2017/03/07/180449&quot; title=&quot;EnzymeでReactコンポーネントのテストを書こう - DMM.comラボエンジニアブログ&quot;&gt;labotech.dmm.com/entry/2017/03/07/180449&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Enzymeを使ったReactコンポーネントのテスト方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;background-tabs-in-chrome-57- | -web- | -google-developers&quot;&gt;Background Tabs in Chrome 57  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/03/background_tabs&quot; title=&quot;Background Tabs in Chrome 57  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/03/background_tabs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chromeのバックグラウンドタブにおける制限について。 &lt;br&gt;
Chrome 57からは、timerやrequestAnimationFrameに加えて、budget-basedの制限が加わる。&lt;br&gt;
バックグラウンドにいるかはPage visibility APIで判定できる。 テスト時などは&lt;code&gt;--disable-background-timer-throttling&lt;/code&gt;のフラグで無効化できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alminでfluxアーキテクチャをやってみる-|-web-scratch&quot;&gt;AlminでFluxアーキテクチャをやってみる | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2017/03/17/almin-introduction/&quot; title=&quot;AlminでFluxアーキテクチャをやってみる | Web Scratch&quot;&gt;efcl.info/2017/03/17/almin-introduction/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Alminを使ってカウンターアプリを書きながら、どのようにFlux的な一方通行のデータフローを行うかについての記事。&lt;br&gt;
開発用のロガーやブラウザ拡張との連携について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;preact-internals-#1:-the-easy-parts-–-medium&quot;&gt;Preact internals #1: the easy parts – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@asolove/preact-internals-1-the-easy-parts-3a081fa36205&quot; title=&quot;Preact internals #1: the easy parts – Medium&quot;&gt;medium.com/@asolove/preact-internals-1-the-easy-parts-3a081fa36205&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Preactの内部実装についての連載記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-web-app-libraries-in-production-–-dev-channel-–-medium&quot;&gt;Progressive Web App Libraries in Production – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/progressive-web-app-libraries-in-production-b52cad37d34&quot; title=&quot;Progressive Web App Libraries in Production – Dev Channel – Medium&quot;&gt;medium.com/dev-channel/progressive-web-app-libraries-in-production-b52cad37d34&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ProgressiveWebApp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ServiceWorkerを使ったキャッシュ周りなどを導入するツールであるsw-precache、 sw-toolbox、offline-analyticsの紹介記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react+redux+express+mongodbでものすごくシンプルなcrudアプリをつくる---qiita&quot;&gt;React+Redux+Express+MongoDBでものすごくシンプルなCRUDアプリをつくる - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/m_yama6/items/573247b12ff0bc4e5d3c&quot; title=&quot;React+Redux+Express+MongoDBでものすごくシンプルなCRUDアプリをつくる - Qiita&quot;&gt;qiita.com/m_yama6/items/573247b12ff0bc4e5d3c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;code&gt;create-react-app&lt;/code&gt;を使いReact+Reduxのセットアップを行いフロントを書き、Express+MongoDB+mongooseでバックエンドを書いていくチュートリアル記事。 フロントエンドとバックエンドの接続部分も丁寧にかかれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;test-double-|-our-thinking-|-testdouble.js-2.0&quot;&gt;Test Double | Our Thinking | testdouble.js 2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.testdouble.com/posts/2017-03-13-testdouble-2.0.html&quot; title=&quot;Test Double | Our Thinking | testdouble.js 2.0&quot;&gt;blog.testdouble.com/posts/2017-03-13-testdouble-2.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
モック化ライブラリであるtestdouble.js 2.0リリース。 &lt;code&gt;td.object&lt;/code&gt;ではES2015 Proxyを使い存在しないプロパティなどのアクセスもキャッチ出来るようになるなど、非同期stubのサポート、&lt;code&gt;td.verify&lt;/code&gt;の改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.testdouble.com/posts/2016-03-13-testdouble-vs-sinon.html&quot; title=&quot;Test Double | Our Thinking | testdouble.js vs. sinon.js&quot;&gt;Test Double | Our Thinking | testdouble.js vs. sinon.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;internels-vue.js---算出プロパティはどうやって動いているか&quot;&gt;Internels Vue.js - 算出プロパティはどうやって動いているか&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kitak.github.io/slides/170316-vue-meetup/#&quot; title=&quot;Internels Vue.js - 算出プロパティはどうやって動いているか&quot;&gt;kitak.github.io/slides/170316-vue-meetup/#&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vue.jsのcomputed propertyの変更検知の仕組みについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-conf-2017---youtube&quot;&gt;React Conf 2017 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list&amp;amp;#x3D;PLb0IAmt7-GS3fZ46IGFirdqKTIxlws7e0&quot; title=&quot;React Conf 2017 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLb0IAmt7-GS3fZ46IGFirdqKTIxlws7e0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React Conf 2017の動画が公開された&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://conf.reactjs.org/&quot; title=&quot;React Conf 2017&quot;&gt;React Conf 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vulcanjs:-the-full-stack-react+graphql-framework&quot;&gt;VulcanJS: The full-stack React+GraphQL framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://vulcanjs.org/&quot; title=&quot;VulcanJS: The full-stack React+GraphQL framework&quot;&gt;vulcanjs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React+GraphQLなフルスタックフレームワーク。&lt;br&gt;
元々React+MeteorのTelscopeだったもの。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/vulcanjs/vulcan-a-new-direction-for-telescope-93df1f8712f3#.w9qocegs0&quot; title=&quot;Vulcan: A New Direction For Telescope – VulcanJS – Medium&quot;&gt;Vulcan: A New Direction For Telescope – VulcanJS – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rstacruz/webpack-tricks:-tips-and-tricks-in-using-webpack&quot;&gt;rstacruz/webpack-tricks: Tips and tricks in using Webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rstacruz/webpack-tricks&quot; title=&quot;rstacruz/webpack-tricks: Tips and tricks in using Webpack&quot;&gt;github.com/rstacruz/webpack-tricks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tips&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpackを使ったファイルサイズの削減やビルドの設定、開発向け/本番向けの設定などのTipsをまとめたドキュメント&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/react-loadable:-a-higher-order-component-for-loading-components-with-promises.&quot;&gt;thejameskyle/react-loadable: A higher order component for loading components with promises.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/react-loadable&quot; title=&quot;thejameskyle/react-loadable: A higher order component for loading components with promises.&quot;&gt;github.com/thejameskyle/react-loadable&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
初期表示までのローディングを扱う高階関数のReactコンポーネント。 Promiseが解決されるまでのローディングやエラー表示を行う&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@thejameskyle/react-loadable-2674c59de178&quot; title=&quot;Introducing React Loadable – Medium&quot;&gt;Introducing React Loadable – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;smelukov/webpack-runtime-analyzer:-webpack-1.x/2.x-plugin-for-analyzing-internal-processes,-state-and-structure-of-bundles.&quot;&gt;smelukov/webpack-runtime-analyzer: Webpack 1.x/2.x plugin for analyzing internal processes, state and structure of bundles.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/smelukov/webpack-runtime-analyzer&quot; title=&quot;smelukov/webpack-runtime-analyzer: Webpack 1.x/2.x plugin for analyzing internal processes, state and structure of bundles.&quot;&gt;github.com/smelukov/webpack-runtime-analyzer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpackでビルドしたファイルのstateや構造をビジュアライズするwebpack plugin。&lt;br&gt;
モジュール、依存関係グラフ、ファイルサイズなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;franckfreiburger/module-invalidate:-invalidate-node.js-modules-loaded-through-require()&quot;&gt;FranckFreiburger/module-invalidate: Invalidate node.js modules loaded through require()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/FranckFreiburger/module-invalidate&quot; title=&quot;FranckFreiburger/module-invalidate: Invalidate node.js modules loaded through require()&quot;&gt;github.com/FranckFreiburger/module-invalidate&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node.jsの&lt;code&gt;require&lt;/code&gt;で読み込んだキャッシュを無効化したり、モジュール側で無効化することを宣言できるモジュール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svg-animations - o&amp;#39;reilly-media&quot;&gt;SVG Animations - O&amp;#39;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920045335.do&quot; title=&quot;SVG Animations - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920045335.do&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
SVGアニメーションについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;徹底マスター-javascriptの教科書　プログラミングの教養から、言語仕様、開発技法までが正しく身につく-|-磯-博-|-インターネット・web開発-|-kindleストア-|-amazon&quot;&gt;徹底マスター JavaScriptの教科書　プログラミングの教養から、言語仕様、開発技法までが正しく身につく | 磯 博 | インターネット・Web開発 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B06XNQCW7B&quot; title=&quot;徹底マスター JavaScriptの教科書　プログラミングの教養から、言語仕様、開発技法までが正しく身につく | 磯 博 | インターネット・Web開発 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B06XNQCW7B&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptの文法や言語機能などについての書籍。&lt;br&gt;
ES2015に対応している内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sbcr.jp/products/4797388640.html&quot; title=&quot;SBクリエイティブ:徹底マスター JavaScriptの教科書&quot;&gt;SBクリエイティブ:徹底マスター JavaScriptの教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Sun, 19 Mar 2017 20:36:53 +0900</pubDate>
        <link>https://jser.info/2017/03/19/jquery-3.2.0-sinon.js-2.0-testdouble.js-2.0-reactreduxcrud/</link>
        <guid isPermaLink="true">https://jser.info/2017/03/19/jquery-3.2.0-sinon.js-2.0-testdouble.js-2.0-reactreduxcrud/</guid>
        
        <category>jQuery</category>
        
        <category>testing</category>
        
        <category>library</category>
        
        <category>react</category>
        
        <category>redux</category>
        
        <category>CRUD</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-03-14のJS: Firefox 52.0、Polymer 2.0 RC、コンポーネントのリファクタリング戦略</title>
        <description>&lt;p&gt;JSer.info #322 - &lt;a href=&quot;https://www.mozilla.jp/firefox/52.0/releasenotes/&quot; title=&quot;Firefox 52.0&quot;&gt;Firefox 52.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;WebAssemblyのデフォルト有効化、CSS Gridや&lt;code&gt;rel=&amp;quot;noopener&amp;quot;&lt;/code&gt;、async/awaitのサポート、Unicode code pointを識別子として利用できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.jp/firefox/52.0/releasenotes/&quot;&gt;Firefox 52.0 リリースノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/52&quot;&gt;Firefox 52 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/52/&quot;&gt;Firefox 52 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hyper-text.org/archives/2017/03/firefox_52_release.shtml&quot;&gt;Firefox 52 が正式リリース、WebAssembly、CSS Grid Layout の実装、レスポンシブデザインモードの拡充など盛りだくさん | WWW WATCH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;FirefoxのECMAScriptのサポート状況については下記の記事でまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/2017/02/22/ecmascript-2016plus-in-firefox/&quot; title=&quot;ECMAScript 2016+ in Firefox | JavaScript&quot;&gt;ECMAScript 2016+ in Firefox | JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/blog/2017-03-08-2-0-rc&quot; title=&quot;Polymer 2.0 Release Candidate&quot;&gt;Polymer 2.0 Release Candidate&lt;/a&gt;が公開されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7027/introducing-custom-elements/&quot; title=&quot;Custom Element&quot;&gt;Custom Element v1&lt;/a&gt;や&lt;a href=&quot;https://hayato.io/2016/shadowdomv1/&quot; title=&quot;Shadow DOM v1&quot;&gt;Shadow DOM v1&lt;/a&gt;の仕様に追従した変更がされています。&lt;br&gt;
ES2015 classesの対応、ライフサイクルの変更、&lt;code&gt;is&lt;/code&gt;属性サポートの廃止、データ変更検知の仕組みの変更などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/about_20&quot; title=&quot;About Polymer 2.0 - Polymer Project&quot;&gt;About Polymer 2.0 - Polymer Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.xから2.0へのマイグレーションガイドも公開されているのであわせてみると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/upgrade&quot; title=&quot;Polymer 2.0 upgrade guide - Polymer Project&quot;&gt;Polymer 2.0 upgrade guide - Polymer Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/moving-airbnb-search-to-react-b85b815e166c&quot;&gt;Moving Airbnb Search to React – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/a&gt;という記事では、Airbnbの検索ページが&lt;a href=&quot;https://github.com/flightjs/flight&quot; title=&quot;Flight&quot;&gt;Flight&lt;/a&gt;から&lt;a href=&quot;https://github.com/facebook/react&quot; title=&quot;React&quot;&gt;React&lt;/a&gt;へ移行した際の話が書かれています。&lt;/p&gt;

&lt;p&gt;テストがなく、読むのにも時間がかかるコードベースを新しくReactで書き直すリファクタリングの戦略について書かれています。&lt;/p&gt;

&lt;p&gt;移行する際に、FlightのeventsをReactのPropsに繋ぐ仕組みを作成したり、&lt;br&gt;
リファクタリングによる(パフォーマンスの)リグレッションをどうやって検知し抑えるかという点について書かれています。&lt;/p&gt;

&lt;p&gt;Airbnbには&lt;a href=&quot;http://nerds.airbnb.com/experiment-reporting-framework/&quot;&gt;Experiment Reporting Framework&lt;/a&gt;という内製のパフォーマンスメトリクスを取得するツールがあり、このレポートを見ながらリファクタリングを行った話が紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview 25-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 25 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7432/release-notes-for-safari-technology-preview-25/&quot; title=&quot;Release Notes for Safari Technology Preview 25 | WebKit&quot;&gt;webkit.org/blog/7432/release-notes-for-safari-technology-preview-25/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Safari Technology Preview Release 25リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;apollo-client-1.0-is-coming&quot;&gt;Apollo Client 1.0 is coming&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev-blog.apollodata.com/apollo-client-1-0-is-coming-23b74b13fbbb&quot; title=&quot;Apollo Client 1.0 is coming&quot;&gt;dev-blog.apollodata.com/apollo-client-1-0-is-coming-23b74b13fbbb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
GraphQLクライアントのApollo Client 1.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-52.0-リリースノート&quot;&gt;Firefox 52.0 リリースノート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.jp/firefox/52.0/releasenotes/&quot; title=&quot;Firefox 52.0 リリースノート&quot;&gt;www.mozilla.jp/firefox/52.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Firefox 52.0リリース。&lt;br&gt;
wasmのデフォルト有効化、CSS Gridのサポート、&lt;code&gt;rel=&amp;quot;noopener&amp;quot;&lt;/code&gt;のサポート、async/await、Unicode code pointを識別子として利用できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/52&quot; title=&quot;Firefox 52 for developers - Mozilla | MDN&quot;&gt;Firefox 52 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/52/&quot; title=&quot;Firefox 52 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 52 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hyper-text.org/archives/2017/03/firefox_52_release.shtml&quot; title=&quot;Firefox 52 が正式リリース、WebAssembly、CSS Grid Layout の実装、レスポンシブデザインモードの拡充など盛りだくさん | WWW WATCH&quot;&gt;Firefox 52 が正式リリース、WebAssembly、CSS Grid Layout の実装、レスポンシブデザインモードの拡充など盛りだくさん | WWW WATCH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;qunit/history.md-at-2.2.0-·-qunitjs/qunit&quot;&gt;qunit/History.md at 2.2.0 · qunitjs/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/blob/2.2.0/History.md&quot; title=&quot;qunit/History.md at 2.2.0 · qunitjs/qunit&quot;&gt;github.com/qunitjs/qunit/blob/2.2.0/History.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
QUnit 2.2.0リリース。&lt;br&gt;
1つ以上のテストがFailのときはPassし、Todoのみが残った時はFaillする&lt;code&gt;QUnit.todo&lt;/code&gt;の追加、通った順序を記録し検証する&lt;code&gt;assert.step()&lt;/code&gt;と&lt;code&gt;assert.verifySteps&lt;/code&gt;を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-inferno-1.4.0-·-infernojs/inferno&quot;&gt;Release Inferno 1.4.0 · infernojs/inferno&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/releases/tag/1.4.0&quot; title=&quot;Release Inferno 1.4.0 · infernojs/inferno&quot;&gt;github.com/infernojs/inferno/releases/tag/1.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Inferno v1.4.0リリース。&lt;br&gt;
SVGのサポートを修正、optimize-jsの対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;welcome-2.0-release-candidate!---polymer-project&quot;&gt;Welcome 2.0 Release Candidate! - Polymer Project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/blog/2017-03-08-2-0-rc&quot; title=&quot;Welcome 2.0 Release Candidate! - Polymer Project&quot;&gt;www.polymer-project.org/blog/2017-03-08-2-0-rc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Polymer 2.0.0 RCリリース。&lt;br&gt;
Custom Elements v1、Shadow DOM v1の仕様に追従した変更が含まれてる。&lt;br&gt;
ES2015 classesの対応、ライフサイクルの変更、&lt;code&gt;is&lt;/code&gt;属性サポートの廃止、データ変更検知の仕組みの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/about_20&quot; title=&quot;About Polymer 2.0 - Polymer Project&quot;&gt;About Polymer 2.0 - Polymer Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/upgrade&quot; title=&quot;Polymer 2.0 upgrade guide - Polymer Project&quot;&gt;Polymer 2.0 upgrade guide - Polymer Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;inroducing-almin-0.10.0:-typescript,-flowtype,-logger-|-web-scratch&quot;&gt;Inroducing Almin 0.10.0: TypeScript, FlowType, Logger | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2017/03/08/almim0.10/&quot; title=&quot;Inroducing Almin 0.10.0: TypeScript, FlowType, Logger | Web Scratch&quot;&gt;efcl.info/2017/03/08/almim0.10/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
FluxライブラリのAlmin 0.10.0リリース。&lt;br&gt;
コードベースをTypeScript化、FlowTypeのサポート改善、開発用のロガーの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/almin/almin/releases/tag/0.10.0&quot; title=&quot;Release 0.10.0 · almin/almin&quot;&gt;Release 0.10.0 · almin/almin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mobxを使ったアーキテクチャについて---console.lealog();&quot;&gt;MobXを使ったアーキテクチャについて - console.lealog();&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://lealog.hateblo.jp/entry/2017/03/08/114017&quot; title=&quot;MobXを使ったアーキテクチャについて - console.lealog();&quot;&gt;lealog.hateblo.jp/entry/2017/03/08/114017&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
State管理ライブラリであるMobXについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx&quot; title=&quot;mobxjs/mobx: Simple, scalable state management.&quot;&gt;mobxjs/mobx: Simple, scalable state management.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;native-ecmascript-modules:-nomodule-attribute-for-the-migration&quot;&gt;Native ECMAScript modules: nomodule attribute for the migration&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-nomodule&quot; title=&quot;Native ECMAScript modules: nomodule attribute for the migration&quot;&gt;blog.hospodarets.com/native-ecmascript-modules-nomodule&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
scriptタグの&lt;code&gt;nomodule&lt;/code&gt;属性について&lt;br&gt;
モジュールをサポートしてない環境でのみ実行されるscript要素で、fallbackを行う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-complete-guide-to-css-grid-|-codrops-css-reference&quot;&gt;A Complete Guide to CSS Grid | Codrops CSS Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tympanus.net/codrops/css_reference/grid/&quot; title=&quot;A Complete Guide to CSS Grid | Codrops CSS Reference&quot;&gt;tympanus.net/codrops/css_reference/grid/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
CSS Gridについての詳しい解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moving-airbnb-search-to-react-–-airbnb-engineering-&amp;amp;-data-science-–-medium&quot;&gt;Moving Airbnb Search to React – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/moving-airbnb-search-to-react-b85b815e166c&quot; title=&quot;Moving Airbnb Search to React – Airbnb Engineering &amp;amp; Data Science – Medium&quot;&gt;medium.com/airbnb-engineering/moving-airbnb-search-to-react-b85b815e166c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Airbnb SearchがTwitter’s FlightからReactに移行した話。&lt;br&gt;
何を指標にしてリファクタリングを行うかについて。&lt;br&gt;
内製のパフォーマンス計測し検証しながら移行するアプローチについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nerds.airbnb.com/experiment-reporting-framework/&quot; title=&quot;Experiment Reporting Framework - Airbnb Engineering&quot;&gt;Experiment Reporting Framework - Airbnb Engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;薄いフレームワーク指向の-web-クライアントサイドプログラミング---hatena-developer-blog&quot;&gt;薄いフレームワーク指向の Web クライアントサイドプログラミング - Hatena Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2017/03/10/190229&quot; title=&quot;薄いフレームワーク指向の Web クライアントサイドプログラミング - Hatena Developer Blog&quot;&gt;developer.hatenastaff.com/entry/2017/03/10/190229&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
MVPアーキテクチャパターンを使ったフレームワークを使わないアプリケーション設計について。&lt;br&gt;
View/Presenter/Modelに役割を分担したクラスを扱う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-web-audio-api-|-css-tricks&quot;&gt;Introduction to Web Audio API | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/introduction-web-audio-api/&quot; title=&quot;Introduction to Web Audio API | CSS-Tricks&quot;&gt;css-tricks.com/introduction-web-audio-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Web Audio APIについてのチュートリアル。 どのようなAPI体系であるか、OscillatorNodeを使っての解説、Web Audio APIにおける時間の扱いなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;14-must-know-chrome-dev-tools-tricks---youtube&quot;&gt;14 Must Know Chrome Dev Tools Tricks - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v&amp;amp;#x3D;xkzDaKwinA8&quot; title=&quot;14 Must Know Chrome Dev Tools Tricks - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;xkzDaKwinA8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Console APIについてのスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wai-ariaの考え方と使い方を整理しよう&quot;&gt;WAI-ARIAの考え方と使い方を整理しよう&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/nozomisawada969/waiaria-72900338&quot; title=&quot;WAI-ARIAの考え方と使い方を整理しよう&quot;&gt;www.slideshare.net/nozomisawada969/waiaria-72900338&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
WAI-ARIAについてのスライド。&lt;br&gt;
&lt;code&gt;aria-*&lt;/code&gt;属性、role属性の使い分けや意味合いについて。&lt;br&gt;
ランドマーク、文書構造、ウィジェット、ライブ領域、tabindex属性などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-4がやってくる！？-新機能ダイジェスト&quot;&gt;Angular 4がやってくる！？ 新機能ダイジェスト&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/masahikoasai/20160306-angular-4&quot; title=&quot;Angular 4がやってくる！？ 新機能ダイジェスト&quot;&gt;www.slideshare.net/masahikoasai/20160306-angular-4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Angularのアップデートライフサイクルについてのスライド。&lt;br&gt;
Angular 2.xからsemverに準拠したアップデートとなり、4.xへのメジャーアップデートどのような点が変わるのかについて。&lt;br&gt;
機能追加やアップデート方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;point-|-a-flexible-css-framework-for-building-modern-responsive-web-apps&quot;&gt;Point | A flexible CSS Framework for building modern responsive web apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.getpoint.io/&quot; title=&quot;Point | A flexible CSS Framework for building modern responsive web apps&quot;&gt;www.getpoint.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Flexboxを使ったモバイルファーストなCSSフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brave/muon:-build-browsers-and-browser-like-applications-with-html,-css,-and-javascript&quot;&gt;brave/muon: Build browsers and browser like applications with HTML, CSS, and JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/brave/muon&quot; title=&quot;brave/muon: Build browsers and browser like applications with HTML, CSS, and JavaScript&quot;&gt;github.com/brave/muon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
BraveのElectron fork。&lt;br&gt;
Chromiumのソースを直接使うように、Chrome extensionsのサポート、renderer processからNode.jsを完全に除去するのが目的&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyperapp/hyperapp:-1kb-javascript-library-for-building-frontend-applications.&quot;&gt;hyperapp/hyperapp: 1kb JavaScript library for building frontend applications.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hyperapp/hyperapp&quot; title=&quot;hyperapp/hyperapp: 1kb JavaScript library for building frontend applications.&quot;&gt;github.com/hyperapp/hyperapp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JSX/Hyperxを使ったDOM記述、Router、State管理をまとめて扱えるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;staltz/html-looks-like:-assert-that-an-html-string-looks-approximately-the-same-as-another-html&quot;&gt;staltz/html-looks-like: Assert that an HTML string looks approximately the same as another HTML&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/staltz/html-looks-like&quot; title=&quot;staltz/html-looks-like: Assert that an HTML string looks approximately the same as another HTML&quot;&gt;github.com/staltz/html-looks-like&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
HTML文字列同士を大まかに比較できるテストライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bafs/gutenberg:-modern-framework-to-print-the-web-correctly.&quot;&gt;BafS/Gutenberg: Modern framework to print the web correctly.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/BafS/Gutenberg&quot; title=&quot;BafS/Gutenberg: Modern framework to print the web correctly.&quot;&gt;github.com/BafS/Gutenberg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
印刷向けのCSSライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sazerac&quot;&gt;Sazerac&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://sazeracjs.com/&quot; title=&quot;Sazerac&quot;&gt;sazeracjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
データにフォーカスしたassertion/テストライブラリ。&lt;br&gt;
Jasmine、Jest、Mochaと一緒に動作する。&lt;br&gt;
データごとのテストケースを作るような&lt;em&gt;パラメタライズドテスト&lt;/em&gt;を行える。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electronではじめるアプリ開発　～javascript/html/cssでデスクトップアプリを作ろう：書籍案内｜技術評論社&quot;&gt;Electronではじめるアプリ開発　～JavaScript/HTML/CSSでデスクトップアプリを作ろう：書籍案内｜技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gihyo.jp/book/2017/978-4-7741-8819-5&quot; title=&quot;Electronではじめるアプリ開発　～JavaScript/HTML/CSSでデスクトップアプリを作ろう：書籍案内｜技術評論社&quot;&gt;gihyo.jp/book/2017/978-4-7741-8819-5&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
2017年3月28日発売&lt;br&gt;
Electronについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 Mar 2017 09:40:19 +0900</pubDate>
        <link>https://jser.info/2017/03/14/firefox-52.0-polymer-2.0-rc-component-refactoring/</link>
        <guid isPermaLink="true">https://jser.info/2017/03/14/firefox-52.0-polymer-2.0-rc-component-refactoring/</guid>
        
        <category>Firefox</category>
        
        <category>Polymer</category>
        
        <category>React</category>
        
        <category>Component</category>
        
        <category>refactoring</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-03-07のJS: Marko 4.0、CoffeeScript+ReactからJavaScriptへ</title>
        <description>&lt;p&gt;JSer.info #321 - UIコンポーネントライブラリの&lt;a href=&quot;http://markojs.com/&quot; title=&quot;Marko&quot;&gt;Marko&lt;/a&gt; 4.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@mlrawlings/marko-4-0-is-here-837884c5f60d&quot;&gt;Marko 4.0 is here 🚀 🎉 – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/marko-js/marko/blob/master/ROADMAP.md&quot; title=&quot;marko/ROADMAP.md at master · marko-js/marko&quot;&gt;marko/ROADMAP.md at master · marko-js/marko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MarkoはeBayで開発され使われているUIコンポーネントライブラリです。&lt;/p&gt;

&lt;p&gt;Marko 4.0ではクライアントレンダリングとサーバサイドレンダリング(HTML文字列を出力)で異なる手法を使うことで、&lt;br&gt;
サーバサイドレンダリングを高速化しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hackernoon.com/server-side-rendering-shootout-with-marko-preact-rax-react-and-vue-25e1ae17800f&quot; title=&quot;Server-side Rendering Shootout with Marko, Preact, Rax, React and Vue&quot;&gt;Server-side Rendering Shootout with Marko, Preact, Rax, React and Vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/&quot; title=&quot;Bugsnag Blog - Converting a large React Codebase from Coffeescript to ES6&quot;&gt;Bugsnag Blog - Converting a large React Codebase from Coffeescript to ES6&lt;/a&gt;という記事では、CoffeeScript + React(cjsx)からJavaScript + Reactの環境へ移行した手法について書かれています。&lt;/p&gt;

&lt;p&gt;CoffeeScriptをJavaScriptへ変換する&lt;a href=&quot;https://github.com/decaffeinate/decaffeinate&quot; title=&quot;decaffeinate&quot;&gt;decaffeinate&lt;/a&gt;はcjsx(CoffeeScriptにJSXを書けるもの)をサポートしていません。&lt;/p&gt;

&lt;p&gt;そのため、一度&lt;a href=&quot;https://github.com/jsdf/coffee-react-transform&quot; title=&quot;jsdf/coffee-react-transform: DEPRECATED – Provides React JSX support for Coffeescript&quot;&gt;coffee-react-transform&lt;/a&gt;で&lt;code&gt;React.createElement&lt;/code&gt;ベースのJSに変換し、&lt;a href=&quot;https://github.com/reactjs/react-codemod#create-element-to-jsx&quot; title=&quot;reactjs/react-codemod: React codemod scripts&quot;&gt;react-codemod&lt;/a&gt;でJSXに再変換しています。&lt;br&gt;
また、変換したコードベースを&lt;code&gt;prettier&lt;/code&gt;や&lt;code&gt;eslint&lt;/code&gt;を使い自動整形し、読みやすくするまでの流れが書かれています。&lt;/p&gt;

&lt;p&gt;それらをまとめた&lt;a href=&quot;https://github.com/bugsnag/depercolator&quot; title=&quot;Depercolator&quot;&gt;Depercolator&lt;/a&gt;というツールを作り公開されていて、今のJavaScriptは機械変換でかなりのタスクができている部分が面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.5.0-·-petkaantonov/bluebird&quot;&gt;Release v3.5.0 · petkaantonov/bluebird&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/petkaantonov/bluebird/releases/tag/v3.5.0&quot; title=&quot;Release v3.5.0 · petkaantonov/bluebird&quot;&gt;github.com/petkaantonov/bluebird/releases/tag/v3.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Bluebird v3.5.0リリース。&lt;br&gt;
catch時に処理を行いエラー自体はそのまま次のcatchへ渡す&lt;code&gt;.tapCatch&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/petkaantonov/bluebird/pull/1220&quot; title=&quot;add tapError by benjamingr · Pull Request #1220 · petkaantonov/bluebird&quot;&gt;add tapError by benjamingr · Pull Request #1220 · petkaantonov/bluebird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/tapcatch.html&quot; title=&quot;.tapCatch | bluebird&quot;&gt;.tapCatch | bluebird&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;marko-4.0-is-here-🚀-🎉-–-medium&quot;&gt;Marko 4.0 is here 🚀 🎉 – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mlrawlings/marko-4-0-is-here-837884c5f60d&quot; title=&quot;Marko 4.0 is here 🚀 🎉 – Medium&quot;&gt;medium.com/@mlrawlings/marko-4-0-is-here-837884c5f60d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Marko 4.0リリース。&lt;br&gt;
コンポーネントベースのUIライブラリ(テンプレート)で、クライアントとサーバのそれぞれのモードを持っているため、サーバサイドレンダリングが高速。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hackernoon.com/server-side-rendering-shootout-with-marko-preact-rax-react-and-vue-25e1ae17800f#.6r2g5rwgk&quot; title=&quot;Server-side Rendering Shootout with Marko, Preact, Rax, React and Vue&quot;&gt;Server-side Rendering Shootout with Marko, Preact, Rax, React and Vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js---quality-with-speed-|-node.js&quot;&gt;Node.js - Quality with Speed | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/community/quality-with-speed/&quot; title=&quot;Node.js - Quality with Speed | Node.js&quot;&gt;nodejs.org/en/blog/community/quality-with-speed/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node.jsの開発プロセスやリリースサイクル、またそれらを支えるテスト基盤について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.17.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.17.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2017/03/eslint-v3.17.0-released&quot; title=&quot;ESLint v3.17.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2017/03/eslint-v3.17.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ESLint 3.17.0リリース。&lt;br&gt;
ルール開発者向けの機能追加、&lt;code&gt;no-compare-neg-zero&lt;/code&gt;と&lt;code&gt;nonblock-statement-body-position&lt;/code&gt;のルールを追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/a2d72c76671c2197c712&quot; title=&quot;ESLint v3.17.0 - Qiita&quot;&gt;ESLint v3.17.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.22.0-·-yarnpkg/yarn&quot;&gt;Release v0.22.0 · yarnpkg/yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yarnpkg/yarn/releases/tag/v0.22.0&quot; title=&quot;Release v0.22.0 · yarnpkg/yarn&quot;&gt;github.com/yarnpkg/yarn/releases/tag/v0.22.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
yarn 0.22.0 プレリリース。&lt;br&gt;
&lt;code&gt;--non-interactive&lt;/code&gt;のオプションを追加、&lt;code&gt;v8-compile-cache&lt;/code&gt;を利用し起動速度を改善、Docker image(&lt;code&gt;yarnpkg/node-yarn&lt;/code&gt;)の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zertosh/v8-compile-cache&quot; title=&quot;zertosh/v8-compile-cache: Require hook for automatic V8 compile cache persistence&quot;&gt;zertosh/v8-compile-cache: Require hook for automatic V8 compile cache persistence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zertosh/v8-compile-cache:-require-hook-for-automatic-v8-compile-cache-persistence&quot;&gt;zertosh/v8-compile-cache: Require hook for automatic V8 compile cache persistence&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zertosh/v8-compile-cache&quot; title=&quot;zertosh/v8-compile-cache: Require hook for automatic V8 compile cache persistence&quot;&gt;github.com/zertosh/v8-compile-cache&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node v5.7.0から導入されたV8のcode cacheを保持するrequire hookを提供するライブラリ。&lt;br&gt;
yarnやnuclideなどの起動速度改善に使われてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ゼロから始めるjavascript入門-：-designmap&quot;&gt;ゼロから始めるJavaScript入門 ： DESIGNMAP&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://designmap.info/category/lecture/javascript-introduction/&quot; title=&quot;ゼロから始めるJavaScript入門 ： DESIGNMAP&quot;&gt;designmap.info/category/lecture/javascript-introduction/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ES2015ベースにしたJavaScript入門チュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-step-by-step-guide-for-building-master-detail-user-interfaces-with-angulartelerik-developer-network&quot;&gt;A Step-By-Step Guide for Building Master-Detail User Interfaces with AngularTelerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/content-types/tutorials/step-step-guide-building-master-detail-user-interfaces-angular/&quot; title=&quot;A Step-By-Step Guide for Building Master-Detail User Interfaces with AngularTelerik Developer Network&quot;&gt;developer.telerik.com/content-types/tutorials/step-step-guide-building-master-detail-user-interfaces-angular/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Angularでよくあるリストビューと詳細ビューからなるアプリを作るチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pwa（progressive-web-apps）の現状とその開発方法-|-フロントエンドblog-|-ミツエーリンクス&quot;&gt;PWA（Progressive Web Apps）の現状とその開発方法 | フロントエンドBlog | ミツエーリンクス&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mitsue.co.jp/knowledge/blog/frontend/201702/23_2217.html&quot; title=&quot;PWA（Progressive Web Apps）の現状とその開発方法 | フロントエンドBlog | ミツエーリンクス&quot;&gt;www.mitsue.co.jp/knowledge/blog/frontend/201702/23_2217.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ProgressiveWebApp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
PWAの概要についてまとめられた記事。&lt;br&gt;
Googleによるケーススタディや開発方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-void-keyword&quot;&gt;JavaScript void Keyword&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cmichel.io/javascript-void-keyword/&quot; title=&quot;JavaScript void Keyword&quot;&gt;cmichel.io/javascript-void-keyword/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptの&lt;code&gt;void&lt;/code&gt;キーワードについて。&lt;br&gt;
&lt;code&gt;if(condition) { return void console.log(&amp;quot;&amp;quot;); }&lt;/code&gt;のようなケースで利用できるという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bugsnag-blog---converting-a-large-react-codebase-from-coffeescript-to-es6&quot;&gt;Bugsnag Blog - Converting a large React Codebase from Coffeescript to ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/&quot; title=&quot;Bugsnag Blog - Converting a large React Codebase from Coffeescript to ES6&quot;&gt;blog.bugsnag.com/converting-a-large-react-codebase-from-coffeescript-to-es6/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
coffee-react(cjsx)からJavaScriptへのマイグレーションについての記事。&lt;br&gt;
decaffeinateはcjsxをサポートしていないため、&lt;code&gt;React.createElement&lt;/code&gt;ベースのJSに変換し、react codemod toolでJSXに再変換する。&lt;br&gt;
変換したコードベースを&lt;code&gt;prettier&lt;/code&gt;で整形し、&lt;code&gt;eslint&lt;/code&gt;で細かいところを直す。&lt;br&gt;
それらをまとめた&lt;code&gt;Depercolator&lt;/code&gt;というツールを作った話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jsdf/coffee-react-transform&quot; title=&quot;jsdf/coffee-react-transform: DEPRECATED – Provides React JSX support for Coffeescript&quot;&gt;jsdf/coffee-react-transform: DEPRECATED – Provides React JSX support for Coffeescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/react-codemod#create-element-to-jsx&quot; title=&quot;reactjs/react-codemod: React codemod scripts&quot;&gt;reactjs/react-codemod: React codemod scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bugsnag/depercolator&quot; title=&quot;bugsnag/depercolator: Tool for converting coffeescript to idiomatic javascript and JSX&quot;&gt;bugsnag/depercolator: Tool for converting coffeescript to idiomatic javascript and JSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8:-behind-the-scenes-(february-edition-feat.-a-tale-of-turbofan)-|-benedikt-meurer&quot;&gt;V8: Behind the Scenes (February Edition feat. A tale of TurboFan) | Benedikt Meurer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://benediktmeurer.de/2017/03/01/v8-behind-the-scenes-february-edition/&quot; title=&quot;V8: Behind the Scenes (February Edition feat. A tale of TurboFan) | Benedikt Meurer&quot;&gt;benediktmeurer.de/2017/03/01/v8-behind-the-scenes-february-edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ChromeのTurboFanプロジェクトの歴史について。&lt;br&gt;
2013年から開始したプロジェクトで、Crankshaftはfast pathにフォーカスしていたが、TurboFanはslow pathにもフォーカスしているという話。&lt;br&gt;
V8において予測できないパフォーマンス問題を作っていたFunction#bindやPromiseの話。&lt;br&gt;
TurboFanのアーキテクチャについての解説など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodebox/opentype.js:-read-and-write-opentype-fonts-using-javascript.&quot;&gt;nodebox/opentype.js: Read and write OpenType fonts using JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodebox/opentype.js&quot; title=&quot;nodebox/opentype.js: Read and write OpenType fonts using JavaScript.&quot;&gt;github.com/nodebox/opentype.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
OpenTypeフォントの読み書きを行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-optimize-cpu-intensive-work-in-node.js-–-medium&quot;&gt;How to Optimize CPU-Intensive Work in Node.js – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@graeme_boy/how-to-optimize-cpu-intensive-work-in-node-js-cdc09099ed41&quot; title=&quot;How to Optimize CPU-Intensive Work in Node.js – Medium&quot;&gt;medium.com/@graeme_boy/how-to-optimize-cpu-intensive-work-in-node-js-cdc09099ed41&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node.jsでCPUバウンドなプログラムを別プロセスで処理する方法について。&lt;br&gt;
&lt;code&gt;child_process&lt;/code&gt;の扱い方について書かれた記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-link:-rel=preload-analysis-from-the-chrome-data-saver-team-–-reloading-–-medium&quot;&gt;A Link: rel=preload Analysis From the Chrome Data Saver Team – reloading – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/reloading/a-link-rel-preload-analysis-from-the-chrome-data-saver-team-5edf54b08715&quot; title=&quot;A Link: rel=preload Analysis From the Chrome Data Saver Team – reloading – Medium&quot;&gt;medium.com/reloading/a-link-rel-preload-analysis-from-the-chrome-data-saver-team-5edf54b08715&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP2&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
(Chromeの)&lt;code&gt;rel=preload&lt;/code&gt;がどのように動いているのかの解説記事。&lt;br&gt;
クリティカルリソースを宣言的に先読みするもので、優先度については仕様では未定義。&lt;br&gt;
Chromeにおけるpreloadの優先度やpreloadとasync属性の違いなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-detailed-introduction-to-webpack-–-smashing-magazine&quot;&gt;A Detailed Introduction To Webpack – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2017/02/a-detailed-introduction-to-webpack/&quot; title=&quot;A Detailed Introduction To Webpack – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2017/02/a-detailed-introduction-to-webpack/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpackについてのチュートリアル。&lt;br&gt;
loader、動的ロード、コード分割について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snyk/vulndb:-snyk&amp;#39;s-public-vulnerability-database&quot;&gt;snyk/vulndb: Snyk&amp;#39;s public vulnerability database&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/snyk/vulndb&quot; title=&quot;snyk/vulndb: Snyk&amp;#39;s public vulnerability database&quot;&gt;github.com/snyk/vulndb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Snykによるnpmやrubygemの脆弱性についてを集めたデータベース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://snyk.io/vuln&quot; title=&quot;VulnDB | Snyk&quot;&gt;VulnDB | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;artillery---a-modern-load-testing-toolkit&quot;&gt;Artillery - a modern load testing toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://artillery.io/&quot; title=&quot;Artillery - a modern load testing toolkit&quot;&gt;artillery.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
HTTPやWebSocketのロードテストを行うことができるツール。&lt;br&gt;
シナリオを元にしたテストもできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typicode/pkg-ok:-prevents-publishing-a-module-with-bad-paths&quot;&gt;typicode/pkg-ok: Prevents publishing a module with bad paths&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typicode/pkg-ok&quot; title=&quot;typicode/pkg-ok: Prevents publishing a module with bad paths&quot;&gt;github.com/typicode/pkg-ok&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npmで公開するパッケージの&lt;code&gt;main&lt;/code&gt;と&lt;code&gt;bin&lt;/code&gt;が正しいかをチェックするツール。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/maxogden/dependency-check&quot; title=&quot;maxogden/dependency-check: checks which modules you have used in your code and then makes sure they are listed as dependencies in your package.json&quot;&gt;maxogden/dependency-check: checks which modules you have used in your code and then makes sure they are listed as dependencies in your package.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kegsay/flow-jsdoc:-use-jsdoc-to-represent-flow-annotations&quot;&gt;Kegsay/flow-jsdoc: Use JSDoc to represent Flow annotations&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Kegsay/flow-jsdoc&quot; title=&quot;Kegsay/flow-jsdoc: Use JSDoc to represent Flow annotations&quot;&gt;github.com/Kegsay/flow-jsdoc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSDoc&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JSDocの型をFlowTypeの型アノテーションへ変換するツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Mar 2017 10:11:32 +0900</pubDate>
        <link>https://jser.info/2017/03/07/marko-4.0-coffeescript-react-javascript/</link>
        <guid isPermaLink="true">https://jser.info/2017/03/07/marko-4.0-coffeescript-react-javascript/</guid>
        
        <category>template</category>
        
        <category>CoffeeScript</category>
        
        <category>React</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-02-25のJS: Node v7.6.0、CoffeeScript 2.0α、Vue v2.2.0</title>
        <description>&lt;p&gt;JSer.info #320 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v7.6.0/&quot; title=&quot;Node v7.6.0&quot;&gt;Node v7.6.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/blob/v7.6.0/doc/changelogs/CHANGELOG_V7.md#7.6.0&quot; title=&quot;node/CHANGELOG_V7.md at v7.6.0 · nodejs/node&quot;&gt;node/CHANGELOG_V7.md at v7.6.0 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node v7.6.0ではV8が5.5にアップデートされています。&lt;br&gt;
V8 5.5ではasync/awaitがデフォルトで有効化されているため、Node v7.6.0からasync/awaitが利用できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v8project.blogspot.jp/2016/10/v8-release-55.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.5&quot;&gt;V8 JavaScript Engine: V8 Release 5.5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coffeescript6/discuss/issues/71&quot; title=&quot;CoffeeScript 2.0.0-alpha1&quot;&gt;CoffeeScript 2.0.0-alpha1&lt;/a&gt;がリリースされました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;npm install coffeescript@next
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CoffeeScript 2.0.0はES2015以降の対応が中心です。&lt;br&gt;
for...of、Tagged template literals、Async/awaitの対応などが行われています。&lt;br&gt;
また、classがES2015 classesへコンパイルできるように仕様追従、デフォルトパラメータで&lt;code&gt;null&lt;/code&gt;を引数に渡した時の挙動をES2015仕様に追従など破壊的な変更も含まれています。&lt;/p&gt;

&lt;p&gt;詳しくはリリースノートを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coffeescript6/discuss/issues/71&quot; title=&quot;Progress as of February 2017: 2.0.0-alpha1! · Issue #71 · coffeescript6/discuss&quot;&gt;Progress as of February 2017: 2.0.0-alpha1! · Issue #71 · coffeescript6/discuss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rawgit.com/jashkenas/coffeescript/2/docs/v2/index.html#breaking-changes&quot; title=&quot;CoffeeScript&quot;&gt;https://rawgit.com/jashkenas/coffeescript/2/docs/v2/index.html#breaking-changes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;仮サイト&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Vue v2.2.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.2.0&quot; title=&quot;Release v2.2.0 · vuejs/vue&quot;&gt;Release v2.2.0 · vuejs/vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;テンプレートで閉じタグがない場合にエラーを投げるように、PropsやComputedプロパティはインスタンスではなくprototypeへ定義されるように。&lt;br&gt;
（一部暗黙的だった挙動が修正されているため、そこへ依存しているコードは修正が必要です）&lt;/p&gt;

&lt;p&gt;サーバサイドレンダリング向けに&lt;code&gt;template&lt;/code&gt;オプションの追加、ライフサイクルhook中のエラーを&lt;code&gt;errorHandler&lt;/code&gt;や&lt;code&gt;renderError&lt;/code&gt;でエラーがキャッチできるように。&lt;br&gt;
React Context的な値を差し込める&lt;code&gt;provide&lt;/code&gt;と&lt;code&gt;inject&lt;/code&gt;のDI機構の追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vuejs.org/v2/api/#provide-inject&quot; title=&quot;Vue.js&quot;&gt;provide / inject - Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;🃏-jest-19:-immersive-watch-mode-&amp;amp;-test-platform-improvements-·-jest&quot;&gt;🃏 Jest 19: Immersive Watch Mode &amp;amp; Test Platform Improvements · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html&quot; title=&quot;🃏 Jest 19: Immersive Watch Mode &amp;amp; Test Platform Improvements · Jest&quot;&gt;facebook.github.io/jest/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Jest 19プレリリース。&lt;br&gt;
Watchモードの改善、Snapshotテストで&lt;code&gt;test&lt;/code&gt;prefixが不要に。&lt;br&gt;
&lt;code&gt;expect.stringContaining()&lt;/code&gt;と&lt;code&gt;expect.toMatchObject()&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;eslint-plugin-jest&lt;/code&gt;は公式プラグイン、設定をチェックできる&lt;code&gt;jest-validate&lt;/code&gt;の公開&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.5.0-·-karma-runner/karma&quot;&gt;Release v1.5.0 · karma-runner/karma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karma-runner/karma/releases/tag/v1.5.0&quot; title=&quot;Release v1.5.0 · karma-runner/karma&quot;&gt;github.com/karma-runner/karma/releases/tag/v1.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Karma v1.5.0リリース。&lt;br&gt;
テストをクライアントと同じ&lt;code&gt;window&lt;/code&gt;で実行する&lt;code&gt;runInParent&lt;/code&gt;オプションとクライアントページのHTMLを指定できる&lt;code&gt;customClientContextFile&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.6.0-(current)-|-node.js&quot;&gt;Node v7.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.6.0/&quot; title=&quot;Node v7.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.6.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node v7.6.0リリース。&lt;br&gt;
V8 5.5にアップデートされasync/awaitのサポート、&lt;code&gt;url.format&lt;/code&gt;がWHATWG URLをサポートするようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v8project.blogspot.jp/2016/10/v8-release-55.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.5&quot;&gt;V8 JavaScript Engine: V8 Release 5.5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/blob/v7.6.0/doc/changelogs/CHANGELOG_V7.md#7.6.0&quot; title=&quot;node/CHANGELOG\_V7.md at v7.6.0 · nodejs/node&quot;&gt;node/CHANGELOG_V7.md at v7.6.0 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progress-as-of-february-2017:-2.0.0-alpha1!-·-issue-#71-·-coffeescript6/discuss&quot;&gt;Progress as of February 2017: 2.0.0-alpha1! · Issue #71 · coffeescript6/discuss&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coffeescript6/discuss/issues/71&quot; title=&quot;Progress as of February 2017: 2.0.0-alpha1! · Issue #71 · coffeescript6/discuss&quot;&gt;github.com/coffeescript6/discuss/issues/71&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
CoffeeScript 2.0.0-alpha1リリース。&lt;br&gt;
ES2015+に準拠した変更を取り入れていっているバージョンであるため、既存のものとは非互換な部分がある。&lt;br&gt;
&lt;code&gt;class&lt;/code&gt;や&lt;code&gt;=&amp;gt;&lt;/code&gt;がES2015と同等に、&lt;br&gt;
splatsはspreadへコンパイルされるように、Tagged Template literal、async/await、&lt;code&gt;for...of&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rawgit.com/jashkenas/coffeescript/2/docs/v2/index.html#breaking-changes&quot; title=&quot;CoffeeScript&quot;&gt;CoffeeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.2-|-typescript&quot;&gt;Announcing TypeScript 2.2 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/&quot; title=&quot;Announcing TypeScript 2.2 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2017/02/22/announcing-typescript-2-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TypeScript 2.2リリース。&lt;br&gt;
language serviceの改善、&lt;code&gt;object&lt;/code&gt; typeの追加、string index、mixin class、&lt;code&gt;new.target&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap#22-february-2017&quot; title=&quot;Roadmap · Microsoft/TypeScript Wiki&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-22&quot; title=&quot;Breaking Changes · Microsoft/TypeScript Wiki&quot;&gt;Breaking Changes · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/eb6c054360868b88f9b1&quot; title=&quot;TypeScript 2.2.1 変更点 - Qiita&quot;&gt;TypeScript 2.2.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mariusschulz.com/2017/02/24/typescript-2-2-the-object-type&quot; title=&quot;TypeScript 2.2: The object Type | Marius Schulz&quot;&gt;TypeScript 2.2: The object Type | Marius Schulz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-24-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 24 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7423/release-notes-for-safari-technology-preview-24/&quot; title=&quot;Release Notes for Safari Technology Preview 24 | WebKit&quot;&gt;webkit.org/blog/7423/release-notes-for-safari-technology-preview-24/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Safari Technology Preview Release 24リリース。&lt;br&gt;
&lt;code&gt;PerformanceObserver&lt;/code&gt;、&lt;code&gt;&amp;lt;link preload&amp;gt;&lt;/code&gt;の試験的サポート、&lt;code&gt;URL&lt;/code&gt;オブジェクトに&lt;code&gt;toJSON()&lt;/code&gt;の実装、dynamic &lt;code&gt;import()&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2016+-in-firefox-|-javascript&quot;&gt;ECMAScript 2016+ in Firefox | JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/javascript/2017/02/22/ecmascript-2016plus-in-firefox/&quot; title=&quot;ECMAScript 2016+ in Firefox | JavaScript&quot;&gt;blog.mozilla.org/javascript/2017/02/22/ecmascript-2016plus-in-firefox/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Firefox Nightly 54 でES2016+ Compat tableが100％実装されたとのこと。&lt;br&gt;
ES2016の&lt;code&gt;**&lt;/code&gt;や&lt;code&gt;Array#include&lt;/code&gt;などの追加やGenerator Constructorの仕様変更の追従、ES2017の実装について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.4.0-·-npm/npm&quot;&gt;Release v4.4.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.4.0&quot; title=&quot;Release v4.4.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v4.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm 4.4.0公開。&lt;br&gt;
起動時に最新のnpmがあるかを通知するように、&lt;code&gt;npm run-script&lt;/code&gt;のエラーメッセージが短くなるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.16.0-·-babel/babylon&quot;&gt;Release v6.16.0 · babel/babylon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babylon/releases/tag/v6.16.0&quot; title=&quot;Release v6.16.0 · babel/babylon&quot;&gt;github.com/babel/babylon/releases/tag/v6.16.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
babylon 6.16.0リリース。&lt;br&gt;
ESTree互換モードを提供するプラグインの追加、Flowでpritimitive typeを上書する問題を修正するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.40.0-·-facebook/flow&quot;&gt;Release v0.40.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.40.0&quot; title=&quot;Release v0.40.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.40.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Flow v0.40.0リリース。&lt;br&gt;
&lt;code&gt;this&lt;/code&gt;や&lt;code&gt;super&lt;/code&gt;をデフォルト引数に利用できるように、built-in libraryの更新、union type周りの最適化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular/changelog.md-at-4.0.0-rc.1-·-angular/angular&quot;&gt;angular/CHANGELOG.md at 4.0.0-rc.1 · angular/angular&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/4.0.0-rc.1/CHANGELOG.md&quot; title=&quot;angular/CHANGELOG.md at 4.0.0-rc.1 · angular/angular&quot;&gt;github.com/angular/angular/blob/4.0.0-rc.1/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Angular 4.0.0 RC1リリース。&lt;br&gt;
AOTコンパイルしたViewのコード量を削減、コードベースがTypeScript 2.1ベースでStrictNullChecksが有効化された。&lt;br&gt;
あわせてAngularをサーバサイドでも動かせるUniversalも更新されるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/docs/RELEASE_SCHEDULE.md&quot; title=&quot;angular/RELEASE\_SCHEDULE.md at master · angular/angular&quot;&gt;angular/RELEASE_SCHEDULE.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.2.0-·-vuejs/vue&quot;&gt;Release v2.2.0 · vuejs/vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.2.0&quot; title=&quot;Release v2.2.0 · vuejs/vue&quot;&gt;github.com/vuejs/vue/releases/tag/v2.2.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vue.js v2.2.0リリース。&lt;br&gt;
テンプレートで閉じタグがない場合にエラーを投げるように、PropsやComputedプロパティはインスタンスではなくprototypeへ定義されるように。&lt;br&gt;
サーバサイドレンダリング向けに&lt;code&gt;template&lt;/code&gt;オプションの追加、&lt;code&gt;errorHandler&lt;/code&gt;や&lt;code&gt;renderError&lt;/code&gt;でエラーがキャッチできるように。&lt;br&gt;
React Context的な値を差し込める&lt;code&gt;provide&lt;/code&gt;と&lt;code&gt;inject&lt;/code&gt;のDI機構の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-preset-env:-a-preset-that-configures-babel-for-you&quot;&gt;babel-preset-env: a preset that configures Babel for you&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2017/02/babel-preset-env.html&quot; title=&quot;babel-preset-env: a preset that configures Babel for you&quot;&gt;www.2ality.com/2017/02/babel-preset-env.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
browserlistの構文でサポートブラウザやNode.jsのバージョンなどのターゲットを指定して、その設定を元にBabelの変換やpolyfillを展開してくれるbabel-preset-envについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-storybook:-develop-beautiful-user-interfaces-with-ease&quot;&gt;React Storybook: Develop Beautiful User Interfaces with Ease&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/react-storybook-develop-beautiful-user-interfaces-with-ease/&quot; title=&quot;React Storybook: Develop Beautiful User Interfaces with Ease&quot;&gt;www.sitepoint.com/react-storybook-develop-beautiful-user-interfaces-with-ease/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Reactコンポートの開発補助ツールであるReact StoryBookについて。&lt;br&gt;
&lt;code&gt;getstorybook&lt;/code&gt;を使ってのセットアップや使い方、Storyの書き方、カスタマイズ方法、デバッグ、自動テストについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mthuret/storybook-addon-specifications&quot; title=&quot;mthuret/storybook-addon-specifications: Write tests next to your stories and display their results inside storybook interface&quot;&gt;mthuret/storybook-addon-specifications: Write tests next to your stories and display their results inside storybook interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-errors-and-stack-traces-in-depth&quot;&gt;JavaScript Errors and Stack Traces in Depth&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://lucasfcosta.com/2017/02/17/JavaScript-Errors-and-Stack-Traces.html&quot; title=&quot;JavaScript Errors and Stack Traces in Depth&quot;&gt;lucasfcosta.com/2017/02/17/JavaScript-Errors-and-Stack-Traces.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptのスタックトレースをどうやって操作するかという話。&lt;br&gt;
Chaiにおける&lt;code&gt;Error.captureStackTrace&lt;/code&gt;を使ったスタックトレース操作を例にしている。&lt;br&gt;
スタックトレースはどのようにできているか、&lt;code&gt;Error.captureStackTrace&lt;/code&gt;の使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-redux-real-world-examples-〜先人から学ぶreact-reduxの知恵〜&quot;&gt;React Redux Real World Examples 〜先人から学ぶReact Reduxの知恵〜&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.tai2.net/real-world-redux.html&quot; title=&quot;React Redux Real World Examples 〜先人から学ぶReact Reduxの知恵〜&quot;&gt;blog.tai2.net/real-world-redux.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ReactとReduxの色々な事例を元に、そのアプリのStoreやComponentがどのような構成になっているかを紐解いていった記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vendor-and-code-splitting-in-webpack-2-–-medium&quot;&gt;Vendor and code splitting in webpack 2 – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@adamrackis/vendor-and-code-splitting-in-webpack-2-6376358f1923&quot; title=&quot;Vendor and code splitting in webpack 2 – Medium&quot;&gt;medium.com/@adamrackis/vendor-and-code-splitting-in-webpack-2-6376358f1923&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpack 2でのコード分割について。&lt;br&gt;
&lt;code&gt;import()&lt;/code&gt;での動的ロードと分割、BundleAnalyzerPluginでの分析、CommonsChunkでの分割&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;逆引き！フロントエンドのイマドキパフォーマンス改善---青空コメントアウト&quot;&gt;逆引き！フロントエンドのイマドキパフォーマンス改善 - 青空コメントアウト&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.aocomme.com/entry/2017/01/18/185753&quot; title=&quot;逆引き！フロントエンドのイマドキパフォーマンス改善 - 青空コメントアウト&quot;&gt;www.aocomme.com/entry/2017/01/18/185753&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
最近ブラウザに増えたレンダリング負荷を考慮したAPIや先読みについて。&lt;br&gt;
&lt;code&gt;will-change&lt;/code&gt;、CSS Containment、&lt;code&gt;requestIdleCallback&lt;/code&gt;、Passive EventListener、&lt;code&gt;&amp;lt;link rel=preload&amp;gt;&lt;/code&gt;についての紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lighterio/exam:-node.js-test-framework&quot;&gt;lighterio/exam: Node.js test framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lighterio/exam&quot; title=&quot;lighterio/exam: Node.js test framework&quot;&gt;github.com/lighterio/exam&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
MochaやJasmineのような&lt;code&gt;describe&lt;/code&gt;や&lt;code&gt;it&lt;/code&gt;とベンチマーク向けの&lt;code&gt;bench&lt;/code&gt;、assertionとして&lt;code&gt;is&lt;/code&gt;、モックを行う&lt;code&gt;mock&lt;/code&gt;など持つJavaScriptのテストフレームワーク。&lt;br&gt;
マルチプロセスでテストを実行できるオプションを持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;niieani/typescript-vs-flowtype:-differences-between-flowtype-and-typescript-2.1----syntax-and-usability&quot;&gt;niieani/typescript-vs-flowtype: Differences between Flowtype and TypeScript 2.1 -- syntax and usability&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/niieani/typescript-vs-flowtype&quot; title=&quot;niieani/typescript-vs-flowtype: Differences between Flowtype and TypeScript 2.1 -- syntax and usability&quot;&gt;github.com/niieani/typescript-vs-flowtype&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TypeScriptとFlowtypeの比較。&lt;br&gt;
シンタックスや型定義、それぞれ異なる部分についてなどをまとめたもの&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developit/unfetch:-bare-minimum-fetch-polyfill-in-500-bytes.&quot;&gt;developit/unfetch: Bare minimum fetch polyfill in 500 bytes.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/unfetch&quot; title=&quot;developit/unfetch: Bare minimum fetch polyfill in 500 bytes.&quot;&gt;github.com/developit/unfetch&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
幾つかの制限を持った小さなfetchのライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debitoor/dot-prop-immutable:-immutable-version-of-dot-prop-with-some-extensions&quot;&gt;debitoor/dot-prop-immutable: Immutable version of dot-prop with some extensions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/debitoor/dot-prop-immutable&quot; title=&quot;debitoor/dot-prop-immutable: Immutable version of dot-prop with some extensions&quot;&gt;github.com/debitoor/dot-prop-immutable&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
immutableなget/set/delete操作を行うシンプルなライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;professional-javascript-for-web-developers:-matt-frisbie:-9781119366447:-amazon.com:-books&quot;&gt;Professional JavaScript for Web Developers: Matt Frisbie: 9781119366447: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Professional-JavaScript-Developers-Matt-Frisbie/dp/1119366445&quot; title=&quot;Professional JavaScript for Web Developers: Matt Frisbie: 9781119366447: Amazon.com: Books&quot;&gt;www.amazon.com/Professional-JavaScript-Developers-Matt-Frisbie/dp/1119366445&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
2017年10月2日発売&lt;br&gt;
Professional JavaScript for Web Developersの4版&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;security-and-frontend-performance---o&amp;#39;reilly-media&quot;&gt;Security and Frontend Performance - O&amp;#39;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.com/webops-perf/free/security-and-frontend-performance.csp&quot; title=&quot;Security and Frontend Performance - O&amp;#39;Reilly Media&quot;&gt;www.oreilly.com/webops-perf/free/security-and-frontend-performance.csp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
60ページほどのウェブサイトにおけるパフォーマンスとセキュリティについての無料の書籍。&lt;br&gt;
HSTS、CSP/script要素/iframe、リファラポリシー、link要素、難読化、ServiceWorker、メトリクスなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;o&amp;#39;reilly-japan---reactビギナーズガイド&quot;&gt;O&amp;#39;Reilly Japan - Reactビギナーズガイド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.co.jp/books/9784873117881/&quot; title=&quot;O&amp;#39;Reilly Japan - Reactビギナーズガイド&quot;&gt;www.oreilly.co.jp/books/9784873117881/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
2017年03月11日発売&lt;br&gt;
React: Up &amp;amp; Runningの翻訳本&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;はじめてのcss設計-フロントエンドエンジニアが教えるメンテナブルなcss設計手法-|-田辺-丈士,-大江-遼,-藤岡-龍太,-安-光太郎,-株式会社アイ・エム・ジェイ-|本-|-通販-|-amazon&quot;&gt;はじめてのCSS設計 フロントエンドエンジニアが教えるメンテナブルなCSS設計手法 | 田辺 丈士, 大江 遼, 藤岡 龍太, 安 光太郎, 株式会社アイ・エム・ジェイ |本 | 通販 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E3%81%AECSS%E8%A8%AD%E8%A8%88-%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%8C%E6%95%99%E3%81%88%E3%82%8B%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%96%E3%83%AB%E3%81%AACSS%E8%A8%AD%E8%A8%88%E6%89%8B%E6%B3%95-%E7%94%B0%E8%BE%BA-%E4%B8%88%E5%A3%AB/dp/4798143154&quot; title=&quot;はじめてのCSS設計 フロントエンドエンジニアが教えるメンテナブルなCSS設計手法 | 田辺 丈士, 大江 遼, 藤岡 龍太, 安 光太郎, 株式会社アイ・エム・ジェイ |本 | 通販 | Amazon&quot;&gt;www.amazon.co.jp/%E3%81%AF%E3%81%98%E3%82%81%E3%81%A6%E3%81%AECSS%E8%A8%AD%E8%A8%88-%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%8C%E6%95%99%E3%81%88%E3%82%8B%E3%83%A1%E3%83%B3%E3%83%86%E3%83%8A%E3%83%96%E3%83%AB%E3%81%AACSS%E8%A8%AD%E8%A8%88%E6%89%8B%E6%B3%95-%E7%94%B0%E8%BE%BA-%E4%B8%88%E5%A3%AB/dp/4798143154&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
2017年3月14日発売&lt;br&gt;
CSSの設定についての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 27 Feb 2017 21:16:03 +0900</pubDate>
        <link>https://jser.info/2017/02/27/node-v7.6.0-coffeescript-2.0a-vue-v2.2.0/</link>
        <guid isPermaLink="true">https://jser.info/2017/02/27/node-v7.6.0-coffeescript-2.0a-vue-v2.2.0/</guid>
        
        <category>Node.js</category>
        
        <category>CoffeeScript</category>
        
        <category>Vue</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-02-20のJS: Babel 6.23.0、React Context、HTMLリファレンス</title>
        <description>&lt;p&gt;JSer.info #319 - Babel 6.23.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2017/02/13/6.23.0&quot;&gt;6.23.0 Released · Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.23.0&quot;&gt;Release v6.23.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;transform-es2015-block-scoping&lt;/code&gt;に&lt;code&gt;throwIfClosureRequired&lt;/code&gt;オプションが追加されました。&lt;br&gt;
Babelの変換では&lt;code&gt;const&lt;/code&gt;や&lt;code&gt;let&lt;/code&gt;などのスコープを実現するために、即時実行関数でスコープを作るという手法を取っています。&lt;br&gt;
このオプションでは、そのようなスコープを作るケースをエラーにすることでパフォーマンス改善を行うためのオプションです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;In Babel 6.23 (just released), I made let/const&amp;#39;s generated code more efficient! Upgrade to enjoy a very small perf boost in your apps. :) &lt;a href=&quot;https://t.co/DDD8Qj9rVF&quot;&gt;pic.twitter.com/DDD8Qj9rVF&lt;/a&gt;&lt;/p&gt;&amp;mdash; Ben Alpert (@soprano) &lt;a href=&quot;https://twitter.com/soprano/status/831588549870784514&quot;&gt;February 14, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/5236&quot; title=&quot;Add option to block-scoping to throw on slow code by spicyj · Pull Request #5236 · babel/babel&quot;&gt;Add option to block-scoping to throw on slow code by spicyj · Pull Request #5236 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/babel-preset-flow&quot; title=&quot;babel-preset-flow&quot;&gt;babel-preset-flow&lt;/a&gt;の追加やReactの最適化プラグインのバグ修正、&lt;code&gt;babel-traverse&lt;/code&gt;に隣接Nodeを取得するAPIの追加などが行われています。&lt;/p&gt;

&lt;p&gt;Reactの最適化プラグイン周りのIssueについては、次のIssueも参考にすると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app/issues/553#issuecomment-249359463&quot; title=&quot;Re-enable babel-plugin-transform-react-constant-elements when it’s not buggy · Issue #553 · facebookincubator/create-react-app&quot;&gt;Re-enable babel-plugin-transform-react-constant-elements when it’s not buggy · Issue #553 · facebookincubator/create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2017/02/context-in-reactjs-applications/&quot; title=&quot;Context in ReactJS Applications&quot;&gt;Context in ReactJS Applications&lt;/a&gt;という記事では、Reactの&lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot; title=&quot;Context&quot;&gt;Context&lt;/a&gt;について解説されています。&lt;/p&gt;

&lt;p&gt;そもそもReact Contextはどのようにして親から子のコンポーネントに値を渡しているのかや、使い方について書かれています。またContextを使うことによるメリットやデメリットについても書かれています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you insist on using context despite these warnings, try to isolate your use of context to a small area and avoid using the context API directly when possible so that it&amp;#39;s easier to upgrade when the API changes.&lt;br&gt;&lt;br&gt;
-- &lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot; title=&quot;Context - React&quot;&gt;Context - React&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;公式のドキュメントにも注意が書かれていますが、React Contextは将来的にはAPIの変更が予定されています(具体案は提示されていない)。そのため、メリットとデメリットを把握しておくと良さそうです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/sebmck&quot;&gt;@sebmck&lt;/a&gt; We will provide a new API but know that lots of people rely on the existing one. Meaning we&amp;#39;ll provide an upgrade path for that.&lt;/p&gt;&amp;mdash; Sebastian Markbåge (@sebmarkbage) &lt;a href=&quot;https://twitter.com/sebmarkbage/status/821159582110138368&quot;&gt;January 17, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://htmlreference.io/&quot; title=&quot;HTML Reference - A free guide to all HTML elements and attributes.&quot;&gt;HTML Reference&lt;/a&gt;というサイトではHTMLタグのリファレンスが公開されています。&lt;/p&gt;

&lt;p&gt;それぞれのタグごとに動作するサンプルコードがあり、block/inline/self-closing/metaで大きく分類されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://htmlreference.io/&quot;&gt;&lt;img src=&quot;https://monosnap.com/file/rzlleRK79NO7POgTaOMQMf0dfgyc1l.png&quot; alt=&quot;HTML Refeence&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;6.23.0-released-·-babel&quot;&gt;6.23.0 Released · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2017/02/13/6.23.0&quot; title=&quot;6.23.0 Released · Babel&quot;&gt;babeljs.io/blog/2017/02/13/6.23.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Babel 6.23.0リリース。&lt;br&gt;
&lt;code&gt;transform-es2015-block-scoping&lt;/code&gt;に&lt;code&gt;throwIfClosureRequired&lt;/code&gt;オプションの追加、&lt;code&gt;babel-preset-flow&lt;/code&gt;の追加。&lt;br&gt;
Reactの最適化プラグインのバグ修正、&lt;code&gt;babel-traverse&lt;/code&gt;に隣接Nodeを取得するAPIの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.39.0-·-facebook/flow&quot;&gt;Release v0.39.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.39.0&quot; title=&quot;Release v0.39.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.39.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Flow v0.39.0リリース。&lt;br&gt;
&lt;code&gt;--no-suppressions&lt;/code&gt;のサポート、typeをJSON printできる&lt;code&gt;$Flow$DebugPrint&lt;/code&gt; typeの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-safari-indexeddb-support!-·-localforage/localforage&quot;&gt;Release Safari IndexedDB support! · localForage/localForage&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/localForage/localForage/releases/tag/1.5.0&quot; title=&quot;Release Safari IndexedDB support! · localForage/localForage&quot;&gt;github.com/localForage/localForage/releases/tag/1.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
localForage 1.5.0リリース。&lt;br&gt;
Safari 10.1からはIndexedDBを使うように変更された。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-の-security-checkをするなら-nsp-が便利---from-scratch&quot;&gt;node の security checkをするなら nsp が便利 - from scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2017/02/14/113910&quot; title=&quot;node の security checkをするなら nsp が便利 - from scratch&quot;&gt;yosuke-furukawa.hatenablog.com/entry/2017/02/14/113910&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
プロジェクトに依存しているモジュールに脆弱性がないかをチェックするツール&lt;br&gt;
Node Security Platformに公開されている脆弱性を元にチェックする&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;native-ecmascript-modules:-dynamic-import()&quot;&gt;Native ECMAScript modules: dynamic import()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-dynamic-import&quot; title=&quot;Native ECMAScript modules: dynamic import()&quot;&gt;blog.hospodarets.com/native-ecmascript-modules-dynamic-import&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
dynamic &lt;code&gt;import()&lt;/code&gt; Proposalについての解説。&lt;br&gt;
&lt;code&gt;import()&lt;/code&gt;はPromiseベースのAPIである点について、&lt;code&gt;import()&lt;/code&gt;のfeature detectとpolyfill、Babelやwebpack 2での利用方法など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speed-up-service-worker-with-navigation-preloads- | -web- | -google-developers&quot;&gt;Speed up Service Worker with Navigation Preloads  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/02/navigation-preload&quot; title=&quot;Speed up Service Worker with Navigation Preloads  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/02/navigation-preload&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 57からOrigin-Trialで試験的に使える ServiceWorkerのnavigation preloadについて。&lt;br&gt;
今まではServiceWorkerが起動してからリクエストが開始されていたため、起動時間がボトルネックとなるケースがあった。&lt;br&gt;
ServiceWorkerをパラレルに扱うことができ、preloadされているリクエストを取得できるAPIについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jpchase/OriginTrials/blob/gh-pages/developer-guide.md&quot; title=&quot;OriginTrials/developer-guide.md at gh-pages · jpchase/OriginTrials&quot;&gt;OriginTrials/developer-guide.md at gh-pages · jpchase/OriginTrials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;context-in-reactjs-applications&quot;&gt;Context in ReactJS Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2017/02/context-in-reactjs-applications/&quot; title=&quot;Context in ReactJS Applications&quot;&gt;javascriptplayground.com/blog/2017/02/context-in-reactjs-applications/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React Contextがどのように動いているかの解説。Contextのメリットとデメリットについて。&lt;br&gt;
Contextの値の流れ、テストの難しさ、ライブラリでの利用について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polyfill-のあり方と-web-の進化と協調するためのガイドライン-|-blog.jxck.io&quot;&gt;Polyfill のあり方と Web の進化と協調するためのガイドライン | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2017-02-17/polyfill-implementation-guideline.html&quot; title=&quot;Polyfill のあり方と Web の進化と協調するためのガイドライン | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2017-02-17/polyfill-implementation-guideline.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
polyfillの役割と、早すぎたpolyfillの実装は仕様変更を難しくするSpeculative Polyfillの問題について。&lt;br&gt;
間違ったpolyfillの実装、別名での回避事例、&lt;br&gt;
polyfillを実装するタイミングなどついて書かれてたW3C TAGのドキュメントについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3ctag.github.io/polyfills/&quot; title=&quot;Polyfills and the evolution of the Web&quot;&gt;Polyfills and the evolution of the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i18nの書き方-from-javascript---qiita&quot;&gt;i18nの書き方 from JavaScript - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/mrasu/items/92971c09b6190fdfd45e&quot; title=&quot;i18nの書き方 from JavaScript - Qiita&quot;&gt;qiita.com/mrasu/items/92971c09b6190fdfd45e&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
i18nのライブラリがどのような事をしているのかや、言語による違いにはどのようなものがあるかについて。&lt;br&gt;
いくつかのi18nライブラリを例に多言語化のやり方について解説されている記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-high-performance-es2015-and-beyond&quot;&gt;V8 JavaScript Engine: High-performance ES2015 and beyond&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8project.blogspot.com/2017/02/high-performance-es2015-and-beyond.html&quot; title=&quot;V8 JavaScript Engine: High-performance ES2015 and beyond&quot;&gt;v8project.blogspot.com/2017/02/high-performance-es2015-and-beyond.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
V8のES2015+のパフォーマンス改善の取り組みについて。 Babelで変換されたコードサイズの問題やES5で同等の事を行う時の速度の違いについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flexbox-tutorial-|-html-&amp;amp;-css-is-hard&quot;&gt;Flexbox Tutorial | HTML &amp;amp; CSS Is Hard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://internetingishard.com/html-and-css/flexbox/&quot; title=&quot;Flexbox Tutorial | HTML &amp;amp; CSS Is Hard&quot;&gt;internetingishard.com/html-and-css/flexbox/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Flexboxについての解説。&lt;br&gt;
Flexboxのそれぞれのプロパティについてどのようなレイアウトを実現できるかについて書かれてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-日本語ハンドブック-|-js-studio&quot;&gt;TypeScript 日本語ハンドブック | js STUDIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://js.studio-kingdom.com/typescript/&quot; title=&quot;TypeScript 日本語ハンドブック | js STUDIO&quot;&gt;js.studio-kingdom.com/typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TypeScriptハンドブックの翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-reference---a-free-guide-to-all-html-elements-and-attributes.&quot;&gt;HTML Reference - A free guide to all HTML elements and attributes.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://htmlreference.io/&quot; title=&quot;HTML Reference - A free guide to all HTML elements and attributes.&quot;&gt;htmlreference.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファレンス&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
HTML要素のリファレンスサイト。&lt;br&gt;
それぞれのタグごとに動作するサンプルがあり、block/inline/self-closing/metaで大きく分類されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimising-the-front-end-for-the-browser&quot;&gt;Optimising the front end for the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/optimising-the-front-end-for-the-browser-f2f51a29c572&quot; title=&quot;Optimising the front end for the browser&quot;&gt;hackernoon.com/optimising-the-front-end-for-the-browser-f2f51a29c572&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ブラウザのレンダリングフローについての記事。&lt;br&gt;
HTMLの取得、ネットワーク、DOM、CSSOM、JavaScriptの処理。&lt;br&gt;
またこれらの処理の最適化やそのメリットについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eggjs/egg:-born-to-build-better-enterprise-frameworks-and-apps-with-node.js-&amp;amp;-koa&quot;&gt;eggjs/egg: Born to build better enterprise frameworks and apps with Node.js &amp;amp; koa&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eggjs/egg&quot; title=&quot;eggjs/egg: Born to build better enterprise frameworks and apps with Node.js &amp;amp; koa&quot;&gt;github.com/eggjs/egg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AlipayのNode.jsフレームワーク。&lt;br&gt;
convention over configurationを重視したフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rough.js&quot;&gt;Rough.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://roughjs.com/&quot; title=&quot;Rough.js&quot;&gt;roughjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
手描き風の図形を描画出来るCanvasライブラリ。&lt;br&gt;
SVG pathも手描き風に描画することができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tunnckocore/gibon:-:1st_place_medal:-functional-client-side-router-in-~570-bytes,-built-on-html5-history-api.&quot;&gt;tunnckoCore/gibon: :1st_place_medal: Functional client-side router in ~570 bytes, built on HTML5 History API.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tunnckoCore/gibon&quot; title=&quot;tunnckoCore/gibon: :1st\_place\_medal: Functional client-side router in ~570 bytes, built on HTML5 History API.&quot;&gt;github.com/tunnckoCore/gibon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
小さなルーターライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jianru-lin/lambda-view:-a-new-tool-for-reading-javascript-code&quot;&gt;Jianru-Lin/lambda-view: A New Tool for Reading JavaScript Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Jianru-Lin/lambda-view&quot; title=&quot;Jianru-Lin/lambda-view: A New Tool for Reading JavaScript Code&quot;&gt;github.com/Jianru-Lin/lambda-view&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptのコードを構造的に読むことを支援するビューアツール。&lt;br&gt;
スコープ単位でコードを展開して見ていくことができる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-test-driven-development,-2nd-edition - o&amp;#39;reilly-media&quot;&gt;Angular Test-Driven Development, 2nd Edition - O&amp;#39;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781786465474.do&quot; title=&quot;Angular Test-Driven Development, 2nd Edition - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781786465474.do&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AngularでのTDD本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 20 Feb 2017 09:31:04 +0900</pubDate>
        <link>https://jser.info/2017/02/20/babel-6.23.0-react-context-html/</link>
        <guid isPermaLink="true">https://jser.info/2017/02/20/babel-6.23.0-react-context-html/</guid>
        
        <category>Babel</category>
        
        <category>React</category>
        
        <category>HTML</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-02-14のJS: V8 5.7とES2015+のパフォーマンス、npm入門、TypeScriptガイドライン</title>
        <description>&lt;p&gt;JSer.info #318 - V8 version 5.7がリリースされました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2017/02/v8-release-57.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.7&quot;&gt;V8 JavaScript Engine: V8 Release 5.7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/10/v8-release-55.html&quot; title=&quot;version 5.5&quot;&gt;version 5.5&lt;/a&gt;で公開されたasync/awaitやPromiseなどのパフォーマンス改善、RegExpのパフォーマンス改善などが行われています。また、WebAssemblyがデフォルトで有効化されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2017/01/speeding-up-v8-regular-expressions.html&quot; title=&quot;V8 JavaScript Engine: Speeding up V8 Regular Expressions&quot;&gt;V8 JavaScript Engine: Speeding up V8 Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5453022515691520&quot; title=&quot;WebAssembly - Chrome Platform Status&quot;&gt;WebAssembly - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ES6 code currently is substantially slower than ES&lt;br&gt;
-- &lt;a href=&quot;https://groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&quot;&gt;An update on strong mode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;V8においてES2015以降の実装は進んでいましたが、その実装がES5に比べて最適化が進んでいませんでした。&lt;br&gt;
そのためネイティブのES2015+よりも、それをES5相当へ変換した場合に実行速度が良くなるケースもあります。&lt;br&gt;
次のページでそのようなケースがあることについて書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fhinkel.github.io/six-speed/&quot;&gt;fhinkel.github.io/six-speed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mohayonao/items/34e66fd37a66830cf941&quot; title=&quot;Babel った方が速い - Qiita&quot;&gt;Babel った方が速い - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8ではネイティブなES2015+の実行速度を改善していくプランを立てていて、今回その一部が入った形です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1EA9EbfnydAmmU_lM8R_uEMQ-U_v4l9zulePSBkeYWmY/edit#heading=h.x1cv1fi5g42q&quot;&gt;ES2015 and beyond performance plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(マイクロベンチのような)実行速度だけではなく、コードのファイルサイズやパース/コンパイル速度がパフォーマンスに与える影響については次の記事を読んでみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/dev-channel/javascript-start-up-performance-69200f43b201#.3f965db3p&quot;&gt;JavaScript Start-up Performance – Dev Channel – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&quot;&gt;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&quot; title=&quot;npm for Beginners: A Guide for Front-end Developers&quot;&gt;npm for Beginners: A Guide for Front-end Developers&lt;/a&gt;という記事では、&lt;code&gt;npm&lt;/code&gt;について詳しく解説されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;という言葉がウェブサイト、npm registry、npm clientの3つを示していることや、&lt;code&gt;npm&lt;/code&gt;の使い方、モジュールのインストール方法、コマンドの使い方、関連するツールなどを紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yux3.net/entry/2017/02/05/000805&quot; title=&quot;私的TypeScriptとの関わり方ガイドライン - 角待ちは対空&quot;&gt;私的TypeScriptとの関わり方ガイドライン - 角待ちは対空&lt;/a&gt;という記事では、普段JavaScriptを書いている人がTypeScriptに触れる場合の考え方などについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;any&lt;/code&gt;の扱い方、コンパイルオプション、TypeScript特有のキーワードや読むと良いドキュメントなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.7&quot;&gt;V8 JavaScript Engine: V8 Release 5.7&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2017/02/v8-release-57.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.7&quot;&gt;v8project.blogspot.com/2017/02/v8-release-57.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
V8 5.7リリース。&lt;br&gt;
async/awaitやES2015のパフォーマンス改善、&lt;code&gt;String#padStart&lt;/code&gt;、&lt;code&gt;Intl.DateTimeFormat#formatToParts&lt;/code&gt;のサポート。&lt;br&gt;
wasmがデフォルトで有効化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.3.0-·-npm/npm&quot;&gt;Release v4.3.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.3.0&quot; title=&quot;Release v4.3.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v4.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm 4.3.0プレリリース。&lt;br&gt;
&lt;code&gt;--auth-type&lt;/code&gt;の追加、起動速度の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js1k-2017---a-magical-javascript-golfing-competition&quot;&gt;JS1k 2017 - A magical JavaScript golfing competition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://js1k.com/2017-magic/&quot; title=&quot;JS1k 2017 - A magical JavaScript golfing competition&quot;&gt;js1k.com/2017-magic/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
1024bytesでJavaScriptのデモを作るコンテンストであるJS1kの2017年の募集が開始された&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-for-beginners:-a-guide-for-front-end-developers&quot;&gt;npm for Beginners: A Guide for Front-end Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&quot; title=&quot;npm for Beginners: A Guide for Front-end Developers&quot;&gt;www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npmとは何か、npmの使い方のチュートリアル。&lt;br&gt;
よく見るプロジェクトのディレクトリ構造、&lt;code&gt;node_modules&lt;/code&gt;ディレクトリ、npmコマンドとオプションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snapshot-testing-the-hard-way-|-better-world-by-better-software&quot;&gt;Snapshot testing the hard way | Better world by better software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/snapshot-testing/&quot; title=&quot;Snapshot testing the hard way | Better world by better software&quot;&gt;glebbahmutov.com/blog/snapshot-testing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JestにはSnapshotテストがあるが、テストフレームワークに依存しないでSnapshotテストを行う方法について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bahmutov/snap-shot&quot; title=&quot;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&quot;&gt;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;私的typescriptとの関わり方ガイドライン---角待ちは対空&quot;&gt;私的TypeScriptとの関わり方ガイドライン - 角待ちは対空&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yux3.net/entry/2017/02/05/000805&quot; title=&quot;私的TypeScriptとの関わり方ガイドライン - 角待ちは対空&quot;&gt;blog.yux3.net/entry/2017/02/05/000805&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
普段JavaScriptを使って書いてる人向けのTypeScriptの考え方について。&lt;br&gt;
典型的なエラーの意味や、コンパイラオプション、&lt;code&gt;_&lt;/code&gt; prefixや&lt;code&gt;this&lt;/code&gt;へ型付けなど特殊な部分について。&lt;br&gt;
また、TypeScript特有のキーワードや参考となるドキュメントについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-start-up-performance-–-dev-channel-–-medium&quot;&gt;JavaScript Start-up Performance – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@addyosmani/javascript-start-up-performance-69200f43b201&quot; title=&quot;JavaScript Start-up Performance – Dev Channel – Medium&quot;&gt;medium.com/@addyosmani/javascript-start-up-performance-69200f43b201&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptの起動速度について。&lt;br&gt;
モバイル等CPU処理速度が遅いとパースとコンパイルに時間がかかる。&lt;br&gt;
そのため、ファイルサイズやパース、コンパイル時間は重要となる。&lt;br&gt;
開発者ツールを使っての計測方法、User Timing API、V8のCode Caching、scriptのロード方法の最適化などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1Lq2DD28CGa7bxawVH_2OcmyiTiBn74dvC6vn2essroY/edit#slide&amp;amp;#x3D;id.g1a504e63c9_2_84&quot; title=&quot;V8 Stats in Chrome - Google スライド&quot;&gt;V8 Stats in Chrome - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;イベント駆動型サービス実行基盤としての-service-worker---qiita&quot;&gt;イベント駆動型サービス実行基盤としての Service Worker - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/nhiroki/items/65efc9e41ec1d928afcd&quot; title=&quot;イベント駆動型サービス実行基盤としての Service Worker - Qiita&quot;&gt;qiita.com/nhiroki/items/65efc9e41ec1d928afcd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;歴史&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Better AppCacheから始まったService Workerが、ページに依存しない生存期間へ変化していき、fetch以外のイベントもハンドリングできる基盤となっていった変遷について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;roundup:-vue.js-state-management-libraries-←-alligator.io&quot;&gt;Roundup: Vue.js State Management Libraries ← Alligator.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://alligator.io/vuejs/roundup-state-management-libraries/&quot; title=&quot;Roundup: Vue.js State Management Libraries ← Alligator.io&quot;&gt;alligator.io/vuejs/roundup-state-management-libraries/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vue.jsにおけるステート管理ライブラリの比較。 特徴やメリット・デメリットについてそれぞれ書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;advanced-javascript-es2015-template-strings-with-tagged-templates-|-appendto&quot;&gt;Advanced JavaScript ES2015 Template Strings with Tagged Templates | appendTo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://appendto.com/2017/02/advanced-javascript-es2015-template-strings-with-tagged-templates/&quot; title=&quot;Advanced JavaScript ES2015 Template Strings with Tagged Templates | appendTo&quot;&gt;appendto.com/2017/02/advanced-javascript-es2015-template-strings-with-tagged-templates/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Tagged Template Literalについての解説。 サンプルを用いながら、タグ関数の引数について解説してる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production-//-speaker-deck&quot;&gt;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&quot; title=&quot;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&quot;&gt;speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Netflixのブラウザ別にTranspileしたJavaScriptを配信するためにやっていることについて。&lt;br&gt;
モダンなブラウザはES2015に対応しているため、変換やpolyfillなどの分として20-40％程度payloadが小さくできる。&lt;br&gt;
一方、圧縮ツールやES2015対応してるかの判定方法などの問題について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ava-casts&quot;&gt;AVA Casts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://avacasts.com/&quot; title=&quot;AVA Casts&quot;&gt;avacasts.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AVAについてのスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bahmutov/snap-shot:-jest-like-snapshot-feature-for-the-rest-of-us,-works-magically-by-finding-the-right-caller-function&quot;&gt;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bahmutov/snap-shot&quot; title=&quot;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&quot;&gt;github.com/bahmutov/snap-shot&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JestのようなSnapshotテストを行うテストライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mnemonist&quot;&gt;Mnemonist&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yomguithereal.github.io/mnemonist/&quot; title=&quot;Mnemonist&quot;&gt;yomguithereal.github.io/mnemonist/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
様々なデータ構造を実装したJavaScriptライブラリ。&lt;br&gt;
Queue、Trie、Linked List、Bloom Filterなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;harksys/npmvet:-a-simple-cli-tool-for-vetting-npm-package-versions&quot;&gt;harksys/npmvet: A simple CLI tool for vetting npm package versions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/harksys/npmvet&quot; title=&quot;harksys/npmvet: A simple CLI tool for vetting npm package versions&quot;&gt;github.com/harksys/npmvet&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;と&lt;code&gt;node_modules&lt;/code&gt;にインストールされているパッケージのバージョンを比較/ロックされているかをチェック出来るツール。&lt;br&gt;
手元と毎回新規インストールされるCIにおけるバージョンを揃えるのが目的&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://harksys.com/labs/npm-vet-a-simple-cli-tool-for-checking-npm-package-versions/&quot; title=&quot;NPM Vet, a simple CLI tool for checking npm package versions - Hark.&quot;&gt;NPM Vet, a simple CLI tool for checking npm package versions - Hark.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mgol/check-dependencies&quot; title=&quot;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&quot;&gt;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simple-statistics&quot;&gt;Simple Statistics&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://simplestatistics.org/&quot; title=&quot;Simple Statistics&quot;&gt;simplestatistics.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;統計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
統計向けのメソッドを実装しているJavaScriptライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;abrahamjagadeesh/npm-module-stats:-get-recursive-file-size-and-dependencies-of-any-npm-module-without-installing-the-module&quot;&gt;abrahamjagadeesh/npm-module-stats: Get recursive file size and dependencies of any NPM module without installing the module&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/abrahamjagadeesh/npm-module-stats&quot; title=&quot;abrahamjagadeesh/npm-module-stats: Get recursive file size and dependencies of any NPM module without installing the module&quot;&gt;github.com/abrahamjagadeesh/npm-module-stats&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
指定したモジュールの依存しているnpmモジュールのファイルサイズを一覧できるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;davidmfoley/node-trucker:-hauls-your-node.js-source-files-around&quot;&gt;davidmfoley/node-trucker: Hauls your node.js source files around&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/davidmfoley/node-trucker&quot; title=&quot;davidmfoley/node-trucker: Hauls your node.js source files around&quot;&gt;github.com/davidmfoley/node-trucker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScriptファイル間の依存関係を扱ったファイル移動ツール。&lt;br&gt;
ファイルの移動を行ったときに、そのファイルを参照しているファイルにかかれているimportパスも書き換えることができる。&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Feb 2017 11:02:33 +0900</pubDate>
        <link>https://jser.info/2017/02/14/v8-5.7es2015-npm-typescript/</link>
        <guid isPermaLink="true">https://jser.info/2017/02/14/v8-5.7es2015-npm-typescript/</guid>
        
        <category>V8</category>
        
        <category>ES2015</category>
        
        <category>npm</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-02-05のJS: AVA 0.18.0、Mithril 1.0、ES modulesとwebpackのモジュール</title>
        <description>&lt;p&gt;JSer.info #317 - テスティングフレームワークのAVA 0.18.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.18.0&quot; title=&quot;Release 0.18.0 · avajs/ava&quot;&gt;Release 0.18.0 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 0.10と0.12のサポート終了、&lt;a href=&quot;https://github.com/avajs/ava#snapshot-testing&quot; title=&quot;Snapshot testing&quot;&gt;Snapshot testing&lt;/a&gt;(JSX)用の&lt;code&gt;t.snapshot&lt;/code&gt;の追加などが行われています。&lt;/p&gt;

&lt;p&gt;今までは&lt;a href=&quot;https://github.com/power-assert-js/power-assert&quot; title=&quot;power-assert&quot;&gt;power-assert&lt;/a&gt;を同梱することで、テストが落ちたときの表示をビジュアライズ表示していました。&lt;/p&gt;

&lt;p&gt;0.18.0からは&lt;a href=&quot;https://github.com/avajs/ava#magic-assert&quot; title=&quot;Magic assert&quot;&gt;Magic assert&lt;/a&gt;を追加し、MochaやJestのような&lt;code&gt;actual&lt;/code&gt;と&lt;code&gt;expect&lt;/code&gt;で異なる部分をdiff表示できるようになっています。(Jestの&lt;a href=&quot;https://github.com/facebook/jest/tree/master/packages/pretty-format&quot; title=&quot;pretty-format&quot;&gt;pretty-format&lt;/a&gt;をforkしたものを利用しています。)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/170270/22558318/d782e9a4-e99f-11e6-889e-62fd4ad36e66.png&quot; alt=&quot;Magic assert&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript フレームワークの&lt;a href=&quot;http://mithril.js.org/&quot; title=&quot;Mithril&quot;&gt;Mithril 1.0、ES modulesとwebpackのモジュール&lt;/a&gt; 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&quot; title=&quot;mithril.js/change-log.md at rewrite · lhorie/mithril.js&quot;&gt;mithril.js/change-log.md at rewrite · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上のマイグレーションガイド兼リリースノートを見ると、様々な変更が行われています。&lt;/p&gt;

&lt;p&gt;ライフサイクルメソッドの追加、コンポーネントは渡す際に&lt;code&gt;m()&lt;/code&gt;でwrapが必須に、&lt;code&gt;m.sync&lt;/code&gt;の削除、同期的なredrawの削除などが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/lifecycle-methods.md&quot; title=&quot;mithril.js/lifecycle-methods.md at rewrite · lhorie/mithril.js&quot;&gt;mithril.js/lifecycle-methods.md at rewrite · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;シグネチャが変更されている部分も多いため、上のマイグレーションガイドを見ると良いです。&lt;br&gt;
また、マイグレーションツールも公開されているので併せて利用すると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tivac/mithril-codemods&quot; title=&quot;tivac/mithril-codemods: jscodeshift-powered mithril@0.2.x to mithril@1.x transformations&quot;&gt;tivac/mithril-codemods: jscodeshift-powered mithril@0.2.x to mithril@1.x transformations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-new-features&quot; title=&quot;Native ECMAScript modules: the new features and differences from Webpack modules&quot;&gt;Native ECMAScript modules: the new features and differences from Webpack modules&lt;/a&gt;という記事では、ECMAScript modulesとwebpackが扱うモジュールとの違いについて書かれています。&lt;/p&gt;

&lt;p&gt;MSEdgeやWebKitなど実際にECMAScript modulesが動く環境もでてきています。&lt;br&gt;
また、モジュールにおける&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;要素の属性周りについてもかかれているので読んでみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;お知らせ&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/2017/01/15/jser-info-6years/&quot; title=&quot;JSer.info 6周年記念イベント&quot;&gt;JSer.info 6周年記念イベント&lt;/a&gt;でもお話していた、&lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;の１回目を公開しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/31/bundler-testing-framework-report/&quot; title=&quot;JSerレポート #1 Bundlerの未来、テスティングフレームワークの現状 - JSer.info&quot;&gt;JSerレポート #1 Bundlerの未来、テスティングフレームワークの現状 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだどのような方向でやるのか、どのようなテーマがいいのか、コストをどうやって小さくするのかなど課題が多いです。&lt;br&gt;
何かご意見がありましたら、Twitterのハッシュタグ&lt;a href=&quot;https://twitter.com/hashtag/jserinfo?f=tweets&amp;amp;vertical=default&amp;amp;src=hash&quot; title=&quot;#jserinfo&quot;&gt;#jserinfo&lt;/a&gt;や&lt;a href=&quot;https://twitter.com/jser_info&quot; title=&quot;@jser_info&quot;&gt;@jser_info&lt;/a&gt;にmentionしたり、&lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;にIssueを立ててください。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.5.0-(current)-|-node.js&quot;&gt;Node v7.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.5.0/&quot; title=&quot;Node v7.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.5.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node v7.5.0リリース。&lt;br&gt;
npmのアップデート、&lt;code&gt;NODE_NO_WARNINGS&lt;/code&gt;の環境変数(&lt;code&gt;--no-warnings&lt;/code&gt;と同等)を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-0.18.0-·-avajs/ava&quot;&gt;Release 0.18.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.18.0&quot; title=&quot;Release 0.18.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v0.18.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AVA 0.18.0リリース。&lt;br&gt;
Node.js 0.10と0.12のサポート終了、Snapshot testing(JSX)、Magic assertの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.2-rc-|-typescript&quot;&gt;Announcing TypeScript 2.2 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/02/02/announcing-typescript-2-2-rc/&quot; title=&quot;Announcing TypeScript 2.2 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2017/02/02/announcing-typescript-2-2-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TypeScript 2.2 RCリリース。&lt;br&gt;
プリミティブ型以外を表現する&lt;code&gt;object&lt;/code&gt; typeの追加、class expressionを使ったmixinの表現をサポート、JSXのreact-nativeのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap#22-february-2017&quot; title=&quot;Roadmap · Microsoft/TypeScript Wiki&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-57-beta:-css-grid-layout,-improved-add-to-home-screen,-media-session-api&quot;&gt;Chromium Blog: Chrome 57 Beta: CSS Grid Layout, Improved Add to Home screen, Media Session API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2017/02/chrome-57-beta-css-grid-layout-improved.html&quot; title=&quot;Chromium Blog: Chrome 57 Beta: CSS Grid Layout, Improved Add to Home screen, Media Session API&quot;&gt;blog.chromium.org/2017/02/chrome-57-beta-css-grid-layout-improved.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 57 Betaリリース。&lt;br&gt;
CSS Grid、&lt;em&gt;Media Session API&lt;/em&gt;、&lt;code&gt;String#padStart&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;setTimeout()&lt;/code&gt;が条件によりthrottleされるように、XSS Auditor(フィルター)がデフォルトでmode blockとなるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/interventions/issues/9&quot; title=&quot;&amp;amp;amp;#34;Out of view&amp;amp;amp;#34; cross-origin iframes align/clamp setTimeout/setInterval to 1 second · Issue #9 · WICG/interventions&quot;&gt;&amp;#34;Out of view&amp;#34; cross-origin iframes align/clamp setTimeout/setInterval to 1 second · Issue #9 · WICG/interventions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mithril.js/change-log.md-at-rewrite-·-lhorie/mithril.js&quot;&gt;mithril.js/change-log.md at rewrite · lhorie/mithril.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&quot; title=&quot;mithril.js/change-log.md at rewrite · lhorie/mithril.js&quot;&gt;github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Mithril 1.0リリース。&lt;br&gt;
ライフサイクルメソッドの追加、コンポーネントは渡す際に&lt;code&gt;m()&lt;/code&gt;でwrapが必須に、&lt;code&gt;m.sync&lt;/code&gt;の削除、同期的なredrawの削除など多くの変更がされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/issues/1090&quot; title=&quot;Rewrite Status · Issue #1090 · lhorie/mithril.js&quot;&gt;Rewrite Status · Issue #1090 · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mithril.js.org/&quot; title=&quot;Introduction - Mithril.js&quot;&gt;Introduction - Mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;native-ecmascript-modules:-the-new-features-and-differences-from-webpack-modules&quot;&gt;Native ECMAScript modules: the new features and differences from Webpack modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-new-features&quot; title=&quot;Native ECMAScript modules: the new features and differences from Webpack modules&quot;&gt;blog.hospodarets.com/native-ecmascript-modules-new-features&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpackなどのモジュールとネイティブのES moduleの違いについてまとめられた記事。 モジュールパス、CORS、&lt;code&gt;script&lt;/code&gt;要素の属性、エラー判定、ES moduleの挙動、feature detectionの方法、fallback、&lt;code&gt;script&lt;/code&gt;要素の&lt;code&gt;type&lt;/code&gt;の取得についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-beginners-guide-to-webpack-2-and-module-bundling&quot;&gt;A Beginners Guide to Webpack 2 and Module Bundling&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/beginners-guide-to-webpack-2-and-module-bundling/&quot; title=&quot;A Beginners Guide to Webpack 2 and Module Bundling&quot;&gt;www.sitepoint.com/beginners-guide-to-webpack-2-and-module-bundling/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpackの基本的な使い方についての解説。&lt;br&gt;
moduleの扱い方、loader、plugin、コード分割、dev server、Hot reloadingについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-on-next.js&quot;&gt;Next on Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsmantra.com/next-on-next-js-1a134505f346&quot; title=&quot;Next on Next.js&quot;&gt;jsmantra.com/next-on-next-js-1a134505f346&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Reactを使ったフレームワークであるNext.js 2βについて。&lt;br&gt;
ルーティング、コード分割、webpack 2のサポート、webpackやbabelの設定のカスタマイズなどの変更点について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-grid-–-table-layout-is-back.-be-there-and-be-square.- | -web- | -google-developers&quot;&gt;CSS Grid – Table layout is back. Be there and be square.  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/01/css-grid&quot; title=&quot;CSS Grid – Table layout is back. Be there and be square.  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/01/css-grid&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
CSS Gridの概要解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-set-up-e2e-browser-testing-for-your-github-project&quot;&gt;How to set up E2E browser testing for your GitHub project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84&quot; title=&quot;How to set up E2E browser testing for your GitHub project&quot;&gt;hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TestCafeを使ってのE2Eテストの設定方法について。 PageObjectパターン、Travis CIやSauce Labsとの連携について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;api-deprecations-and-removals-in-chrome-57- | -web- | -google-developers&quot;&gt;API Deprecations and Removals in Chrome 57  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/02/chrome-57-deprecations&quot; title=&quot;API Deprecations and Removals in Chrome 57  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/02/chrome-57-deprecations&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 57での非推奨/削除されるAPIについて。 Vendor-prefix付きの&lt;code&gt;cancelAnimationFrame&lt;/code&gt;、&lt;code&gt;IndexedDB&lt;/code&gt;、&lt;code&gt;AudioContext&lt;/code&gt;の削除。 &lt;code&gt;BluetoothDevice.uuids&lt;/code&gt;、&lt;code&gt;&amp;lt;keygen&amp;gt;&lt;/code&gt;、&lt;code&gt;OfflineAudioContext&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-feature-detection.js&quot;&gt;es6-feature-detection.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/DaBs/89ccc2ffd1d435efdacff05248514f38&quot; title=&quot;es6-feature-detection.js&quot;&gt;gist.github.com/DaBs/89ccc2ffd1d435efdacff05248514f38&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
実行環境がES2015を大体サポートしているかを判定する数行のスニペットコード。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blinkon-7-information---google-ドキュメント&quot;&gt;BlinkOn 7 Information - Google ドキュメント&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1jlpsfv0kXCveOEX5l75aATgRXbcAvwyse4Tn6jVprWs/edit#&quot; title=&quot;BlinkOn 7 Information - Google ドキュメント&quot;&gt;docs.google.com/document/d/1jlpsfv0kXCveOEX5l75aATgRXbcAvwyse4Tn6jVprWs/edit#&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
GoogleのBlinkOn7のイベントまとめ。&lt;br&gt;
スライドがまとめられている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-npm-scripts-as-your-build-tool---course-by-@elijahmanor-@eggheadio&quot;&gt;How to Use npm Scripts as Your Build Tool - Course by @elijahmanor @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/how-to-use-npm-scripts-as-your-build-tool&quot; title=&quot;How to Use npm Scripts as Your Build Tool - Course by @elijahmanor @eggheadio&quot;&gt;egghead.io/courses/how-to-use-npm-scripts-as-your-build-tool&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm scriptsを使いビルドを行う話についてのスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsmpeg-–-decode-it-like-it&amp;#39;s-1999&quot;&gt;JSMpeg – Decode it like it&amp;#39;s 1999&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jsmpeg.com/&quot; title=&quot;JSMpeg – Decode it like it&amp;#39;s 1999&quot;&gt;jsmpeg.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
MPEG1/MP2をJavaScriptでデコードするライブラリ。&lt;br&gt;
WebSocketsを使った動画のストリーム配信をする目的で作られている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-·-gitbook&quot;&gt;Introduction · GitBook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vuex.vuejs.org/ja/&quot; title=&quot;Introduction · GitBook&quot;&gt;vuex.vuejs.org/ja/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vuexのドキュメント翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-platform-tests-dashboard&quot;&gt;Web Platform Tests Dashboard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wptdashboard.appspot.com/&quot; title=&quot;Web Platform Tests Dashboard&quot;&gt;wptdashboard.appspot.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;a href=&quot;https://github.com/w3c/web-platform-tests&quot; title=&quot;w3c/web-platform-tests: Test Suites for Web Platform specifications—including WHATWG, W3C and others&quot;&gt;w3c/web-platform-tests: Test Suites for Web Platform specifications—including WHATWG, W3C and others&lt;/a&gt;をブラウザ別で実行した結果がまとめられているページ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1s2Dick89wvJsuNJb4ia3pPt84NtMv8rZr0E_GFXJLrk/edit#slide&amp;amp;#x3D;id.p&quot; title=&quot;Web Platform Tests in Blink and Beyond - Google スライド&quot;&gt;Web Platform Tests in Blink and Beyond - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webvr-rocks-•-your-guide-to-virtual-reality-in-the-browser.&quot;&gt;WebVR Rocks • Your guide to Virtual Reality in the browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webvr.rocks/&quot; title=&quot;WebVR Rocks • Your guide to Virtual Reality in the browser.&quot;&gt;webvr.rocks/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
WebVRについてブラウザ別のサポート状況をまとめたサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oliver-moran/jimp:-an-image-processing-library-written-entirely-in-javascript-for-node,-with-zero-external-or-native-dependencies.&quot;&gt;oliver-moran/jimp: An image processing library written entirely in JavaScript for Node, with zero external or native dependencies.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oliver-moran/jimp&quot; title=&quot;oliver-moran/jimp: An image processing library written entirely in JavaScript for Node, with zero external or native dependencies.&quot;&gt;github.com/oliver-moran/jimp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
依存がない画像処理ライブラリ。&lt;br&gt;
画像のリサイズや加工などができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist/sao:-futuristic-scaffolding-tool.&quot;&gt;egoist/sao: Futuristic scaffolding tool.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/sao&quot; title=&quot;egoist/sao: Futuristic scaffolding tool.&quot;&gt;github.com/egoist/sao&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Gitリポジトリやnpmパッケージなどを元にしてプロジェクトを生成出来るscaffoldingツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ide/mux:-creates-a-promise-that-waits-for-the-promises-in-nested-data-structures-and-resolves-to-data-structures-of-the-same-form.-it-recursively-traverses-the-input-data-structure-and-multiplexes-its-promises.&quot;&gt;ide/mux: Creates a promise that waits for the promises in nested data structures and resolves to data structures of the same form. It recursively traverses the input data structure and multiplexes its promises.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ide/mux&quot; title=&quot;ide/mux: Creates a promise that waits for the promises in nested data structures and resolves to data structures of the same form. It recursively traverses the input data structure and multiplexes its promises.&quot;&gt;github.com/ide/mux&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Array、Map、Setなどが持つプロパティのPromiseを解決し、その結果を同じ構造で返せるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-&amp;quot;learning-aurelia&amp;quot;-from-packt-publishing&quot;&gt;Announcing &amp;quot;Learning Aurelia&amp;quot; from Packt Publishing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.aurelia.io/2017/02/01/announcing-learning-aurelia-from-packt-publishing/&quot; title=&quot;Announcing &amp;quot;Learning Aurelia&amp;quot; from Packt Publishing&quot;&gt;blog.aurelia.io/2017/02/01/announcing-learning-aurelia-from-packt-publishing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Aureliaの書籍について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/learning-aurelia&quot; title=&quot;Learning Aurelia | PACKT Books&quot;&gt;Learning Aurelia | PACKT Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-es2016-and-es2017&quot;&gt;Exploring ES2016 and ES2017&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://exploringjs.com/es2016-es2017.html&quot; title=&quot;Exploring ES2016 and ES2017&quot;&gt;exploringjs.com/es2016-es2017.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ECMAScript 2016と2017についての書籍。&lt;br&gt;
ExploringJSの続編&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leanpub.com/exploring-es2016-es2017&quot; title=&quot;Exploring ES2016 and… by Axel Rauschmayer \[PDF/iPad/Kindle\]&quot;&gt;Exploring ES2016 and… by Axel Rauschmayer [PDF/iPad/Kindle]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Sun, 05 Feb 2017 18:37:59 +0900</pubDate>
        <link>https://jser.info/2017/02/05/ava-0.18.0-mithril-1.0-es-moduleswebpack/</link>
        <guid isPermaLink="true">https://jser.info/2017/02/05/ava-0.18.0-mithril-1.0-es-moduleswebpack/</guid>
        
        <category>AVA</category>
        
        <category>Testing</category>
        
        <category>modules</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>JSerレポート #1 Bundlerの未来、テスティングフレームワークの現状</title>
        <description>&lt;p&gt;JSer.infoでは不定期でレポートという形で、特定のテーマに関する状況をまとめています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レポートなどの更新情報を知りたい方は&lt;a href=&quot;https://jser.info/rss/&quot;&gt;RSS&lt;/a&gt;や&lt;a href=&quot;https://twitter.com/jser_info&quot;&gt;Twitter@jser_info&lt;/a&gt;をフォローしてみてください。&lt;/p&gt;

&lt;h1 id=&quot;bundler-#1&quot;&gt;&lt;a href=&quot;https://github.com/jser/report/issues/1&quot; title=&quot;Next Bundler #1&quot;&gt;Bundler #1&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;JavaScriptのコードはモジュールに分けて開発することが一般的です。&lt;br&gt;
ブラウザにおいて、一つずつ&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;タグでモジュールをロードするのはラウンドトリップやコネクションの問題が発生します。&lt;/p&gt;

&lt;p&gt;そのため、多くの場合ブラウザ向けのコードはモジュールをまとめた(bundleした)ファイルを作成して配信します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2015/05/es6-modules-and-http2&quot; title=&quot;ES6 ModulesはHTTP/2によってconcat無しで使えるようになるのか - teppeis blog&quot;&gt;ES6 ModulesはHTTP/2によってconcat無しで使えるようになるのか - teppeis blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/uctakeoff/items/ce8da368d020273c6064&quot; title=&quot;レトロエンジニアのための近代Webフロントエンド事情 - Qiita&quot;&gt;レトロエンジニアのための近代Webフロントエンド事情 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その際にモジュールの依存関係などを解決しながらファイルをまとめる&amp;quot;bundler&amp;quot;と呼ばれるツールの動きについてのレポートです。&lt;/p&gt;

&lt;h2 id=&quot;webpack-2&quot;&gt;webpack 2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.2.0&quot; title=&quot;Release v2.2.0 · webpack/webpack&quot;&gt;Release v2.2.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 2が正式にリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/24/webpack-2-javascript-2016-js-star/&quot; title=&quot;2017-01-24のJS: webpack 2正式リリース、JavaScriptの開発環境設定、2016 JS Stars - JSer.info&quot;&gt;2017-01-24のJS: webpack 2正式リリース、JavaScriptの開発環境設定、2016 JS Stars - JSer.info&lt;/a&gt;で紹介しました。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 2のドキュメントは &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack.js.org/&lt;/a&gt; の新しいサイトの方にまとめられています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.js.org/guides/migrating/&quot; title=&quot;Migrating from v1 to v2&quot;&gt;Migrating from v1 to v2&lt;/a&gt;にマイグレーションガイドがあります。&lt;/p&gt;

&lt;p&gt;一部設定の名前が変更されていたり、&lt;code&gt;json-loader&lt;/code&gt;がデフォルトとなっていたり既存のconfigを変更する参考になると思います。&lt;/p&gt;

&lt;p&gt;今後の機能追加や改善については、投票ツールを通じて決定していくようです。&lt;br&gt;
(投票の重み付けに利用されている&lt;a href=&quot;http://azu.github.io/slide/2017/t_wada_sushi/OpenCollective.html&quot; title=&quot;Open Collective&quot;&gt;Open Collectiveについてのスライド&lt;/a&gt;を書いたので、併せてみるといいかもしれません)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/vote/&quot;&gt;https://webpack.js.org/vote/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;投票のサイトを見ると今のところ次の開発候補としてはScope Hoisting(Rollupインスパイアな最適化)、Typescript周りの改善などが上がっているようです。&lt;/p&gt;

&lt;h2 id=&quot;fusebox&quot;&gt;&lt;a href=&quot;http://fuse-box.org/&quot; title=&quot;Fusebox&quot;&gt;Fusebox&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fuse-box.org/&quot; title=&quot;Fusebox&quot;&gt;Fusebox&lt;/a&gt;という新しいBundlerツールが登場しました。&lt;br&gt;
実際に試してみると、初回のビルドと再ビルド(&lt;code&gt;.fusebox&lt;/code&gt;のキャッシュあり)どちらも高速です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/04/postcss-chrome-fusebox/&quot; title=&quot;2017-01-04のJS: PostCSS概要、Chrome開発者ツール、FuseBox - JSer.info&quot;&gt;2017-01-04のJS: PostCSS概要、Chrome開発者ツール、FuseBox - JSer.info&lt;/a&gt; で紹介しました。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的に設定はJavaScriptのコードとして書くようになっていて、&lt;code&gt;node&lt;/code&gt;で実行するだけです。&lt;/p&gt;

&lt;p&gt;また、webpackのように設定としてentryポイントを設定するのではなく、ビルドの設定をする&lt;code&gt;FuseBox.init&lt;/code&gt;と実際にbudnleするものを決める&lt;code&gt;fuse.bundle&lt;/code&gt;メソッドで分かれています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FuseBox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;fusebox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FuseBox&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fuse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FuseBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;homeDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;src/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;myLib&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;outFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./out.js&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fuse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;index.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そのためコードとして設定を書くgulpとは相性がいいため、公式のサンプルでもgulp内に書いている例を見かけます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fuse-box/angular2-example/blob/master/gulpfile.js&quot; title=&quot;angular2-example/gulpfile.js at master · fuse-box/angular2-example&quot;&gt;angular2-example/gulpfile.js at master · fuse-box/angular2-example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rollup&quot;&gt;&lt;a href=&quot;https://github.com/rollup/rollup&quot; title=&quot;Rollup&quot;&gt;Rollup&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;大きな変化はありませんが、Rollupは順調に開発中です。&lt;br&gt;
次のIssueも併せてみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/sample-framework-boot/pull/10#issuecomment-272632548&quot; title=&quot;Use minified version of React by gaearon · Pull Request #10 · GoogleChrome/sample-framework-boot&quot;&gt;Use minified version of React by gaearon · Pull Request #10 · GoogleChrome/sample-framework-boot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;browserify&quot;&gt;&lt;a href=&quot;https://github.com/substack/node-browserify&quot; title=&quot;browserify&quot;&gt;Browserify&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Browserify自体を機能追加/改善するアップデートはあまり積極的に行われていません。&lt;br&gt;
@substack以外にPRをマージするOwnerがいないことに起因しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/graphs/contributors&quot;&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/19714/22461846/515bb70a-e7ee-11e6-9651-648f65a2a8c8.png&quot; alt=&quot;node-browserify 2017-01-31 19-47-37&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;元々本体に多くの機能があるわけではなく依存するパッケージに機能が分散しています。&lt;br&gt;
しかし、その依存のアップデートが滞りがちです。&lt;br&gt;
Issue/PRにはNode.js v6&amp;gt;=で追加されたDeprecated Warningや依存するパッケージのDeprecated Warningを解消する些細なものが多く並んでいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/pulls&quot;&gt;https://github.com/substack/node-browserify/pulls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/9531&quot; title=&quot;buffer: discuss future direction of Buffer constructor API · Issue #9531 · nodejs/node&quot;&gt;buffer: discuss future direction of Buffer constructor API · Issue #9531 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先日、&lt;a href=&quot;https://github.com/substack/node-browserify/blob/master/changelog.markdown#1400&quot; title=&quot;14.0.0&quot;&gt;14.0.0&lt;/a&gt;がリリースされました。&lt;br&gt;
このリリースでは、Browserifyが利用する&lt;code&gt;buffer&lt;/code&gt;のpolyfillである&lt;a href=&quot;https://github.com/feross/buffer&quot; title=&quot;feross/buffer&quot;&gt;feross/buffer&lt;/a&gt;がアップデートされています。&lt;br&gt;
&lt;code&gt;TypedArray&lt;/code&gt;を使う実装になったため、bufferを含んだコードを変換した場合に、IE10以下では動かなくなります。&lt;/p&gt;

&lt;p&gt;IE10以下でも動くようにしたい場合は、古い&lt;a href=&quot;https://github.com/feross/buffer&quot; title=&quot;feross/buffer&quot;&gt;feross/buffer&lt;/a&gt;を利用する必要があります。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install buffer@4 --save
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;browserify -r buffer/:buffer main.js &amp;gt; bundle.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;es-modules&quot;&gt;ES modules&lt;/h2&gt;

&lt;p&gt;MSEdgeと&lt;a href=&quot;https://lists.webkit.org/pipermail/webkit-dev/2016-December/028564.html&quot;&gt;WebKit&lt;/a&gt;にES modules(&lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt;&lt;/code&gt;)が実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/7265/release-notes-for-safari-technology-preview-21/&quot; title=&quot;Release Notes for Safari Technology Preview 21 | WebKit&quot;&gt;Release Notes for Safari Technology Preview 21 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES modulesとNode.js modulesについては細かな挙動の違いなどが存在します。&lt;br&gt;
詳しくは次の記事を読むと良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-new-features&quot;&gt;Native ECMAScript modules: the new features and differences from Webpack modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-the-first-overview#browsers-support&quot;&gt;Native ECMAScript modules - the first overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 2やrollupなどはES modulesのコードを直接扱うようになっています。&lt;br&gt;
ES modulesのブラウザ実装が進むにつれ、ES modulesを扱うツールなども増えてくることが予想されます。&lt;br&gt;
Bundlerはそこへ直接関係するツールであるため、今後の動きに注目していく必要があります。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 id=&quot;testing-framework-#3&quot;&gt;&lt;a href=&quot;https://github.com/jser/report/issues/3&quot; title=&quot;Testing Framework #3&quot;&gt;Testing Framework #3&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;JavaScriptのテスティングフレームワーク周りのレポートです。&lt;/p&gt;

&lt;h2 id=&quot;mochaがcontributorを募集&quot;&gt;&lt;a href=&quot;https://github.com/mochajs/mocha&quot;&gt;Mocha&lt;/a&gt;がContributorを募集&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Mocha needs YOU!&lt;br&gt;
-- &lt;a href=&quot;https://github.com/mochajs/mocha#mocha-needs-you&quot;&gt;https://github.com/mochajs/mocha#mocha-needs-you&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mochaのメンテナンスリソースが足りていないため協力を募集する内容がREADMEにかかれています。&lt;br&gt;
IssueやPull Requestのレビューをしてくれる人やMochaへのテストの追加などをコントリビューションを募集しています。&lt;/p&gt;

&lt;p&gt;詳しくは&lt;a href=&quot;https://github.com/mochajs/mocha/projects&quot; title=&quot;Projects · mochajs/mocha&quot;&gt;Projects&lt;/a&gt;を見るかGitterでやり取りすると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gitter.im/mochajs/mocha&quot; title=&quot;mochajs/mocha - Gitter&quot;&gt;mochajs/mocha - Gitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sinon.js-2.0へ向けて&quot;&gt;Sinon.js 2.0へ向けて&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://sinonjs.org/&quot; title=&quot;Sinon.JS&quot;&gt;Sinon.JS&lt;/a&gt; が2.0向けての作業が進められています。&lt;br&gt;
タスクについては次のIssueで管理されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/issues/966&quot; title=&quot;Sinon 2.0 Release · Issue #966 · sinonjs/sinon&quot;&gt;Sinon 2.0 Release · Issue #966 · sinonjs/sinon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The much fabled 2.0 release, that will split Sinon.JS into more modules, tidy up the api, simplify all the dependency boilerplate by using Browserify. &lt;br&gt;
-- &lt;a href=&quot;https://github.com/sinonjs/sinon/milestone/5&quot; title=&quot;2.0 Milestone&quot;&gt;2.0 Milestone&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とあるように、(CommonJS)モジュールとして管理されていなかったのを大きくリファクタリングし、それぞれがモジュール化されています。&lt;br&gt;
残りのタスクにはドキュメント系となっているため、そこまで遠くない日に2.0がリリースされるかもしれません。&lt;br&gt;
プレリリース版は既に公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/releases&quot; title=&quot;Releases · sinonjs/sinon&quot;&gt;Releases · sinonjs/sinon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2016-javascript-rising-stars&quot;&gt;&lt;a href=&quot;https://risingstars2016.js.org/&quot; title=&quot;2016 JavaScript Rising Stars&quot;&gt;2016 JavaScript Rising Stars&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;JavaScriptに関するツールやライブラリのStar増加率をまとめたサイトにおいて、&lt;a href=&quot;https://risingstars2016.js.org/#test-framework&quot; title=&quot;#8Testing Frameworks&quot;&gt;Testing Frameworks&lt;/a&gt;についてもまとめられています。&lt;br&gt;
2016年は&lt;a href=&quot;https://github.com/avajs/ava&quot; title=&quot;AVA&quot;&gt;AVA&lt;/a&gt;と&lt;a href=&quot;http://facebook.github.io/jest/&quot; title=&quot;Jest&quot;&gt;Jest&lt;/a&gt;のStar数が伸びているようです。&lt;/p&gt;

&lt;h2 id=&quot;ava-will-introduce-magic-assert&quot;&gt;AVA will introduce Magic assert&lt;/h2&gt;

&lt;p&gt;テストフレームワークの&lt;a href=&quot;https://github.com/avajs/ava&quot; title=&quot;AVA&quot;&gt;AVA&lt;/a&gt;は&lt;a href=&quot;https://github.com/power-assert-js/power-assert&quot; title=&quot;power-assert&quot;&gt;power-assert&lt;/a&gt;を内部的に利用しテスト結果を表示することができます。&lt;br&gt;
現在、そのテスト結果の表示をより分かりやすくしようと&lt;code&gt;magic-assert&lt;/code&gt;という名前で開発がされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/issues/1155&quot; title=&quot;Magic assert · Issue #1155 · avajs/ava&quot;&gt;Magic assert · Issue #1155 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/697676/21117268/9459421a-c0c1-11e6-80e6-bb2ce6be7c76.png&quot; alt=&quot;magic-assert&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JSer.infoでは不定期でレポートという形で、特定のテーマに関する状況をまとめています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レポートなどの更新情報を知りたい方は&lt;a href=&quot;https://jser.info/rss/&quot;&gt;RSS&lt;/a&gt;や&lt;a href=&quot;https://twitter.com/jser_info&quot;&gt;Twitter@jser_info&lt;/a&gt;をフォローしてみてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/jser_info&quot; class=&quot;twitter-follow-button&quot; data-show-count=&quot;false&quot; data-size=&quot;large&quot;&gt;Follow @jser_info&lt;/a&gt;&lt;br&gt;
&lt;script&gt;!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?&amp;#39;http&amp;#39;:&amp;#39;https&amp;#39;;if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+&amp;#39;://platform.twitter.com/widgets.js&amp;#39;;fjs.parentNode.insertBefore(js,fjs);}}(document, &amp;#39;script&amp;#39;, &amp;#39;twitter-wjs&amp;#39;);&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;http://cloud.feedly.com/#subscription%2Ffeed%2Fhttps://jser.info/rss/&#39; target=&#39;blank&#39;&gt;&lt;img id=&#39;feedlyFollow&#39; src=&#39;https://s3.feedly.com/img/follows/feedly-follow-rectangle-flat-medium_2x.png&#39; alt=&#39;follow us in feedly&#39; width=&#39;71&#39; height=&#39;28&#39;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Jan 2017 10:12:00 +0900</pubDate>
        <link>https://jser.info/2017/01/31/bundler-testing-framework-report/</link>
        <guid isPermaLink="true">https://jser.info/2017/01/31/bundler-testing-framework-report/</guid>
        
        <category>webpack</category>
        
        <category>bundler</category>
        
        <category>testing</category>
        
        <category>report</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>report</category>
        
      </item>
    
  </channel>
</rss>
