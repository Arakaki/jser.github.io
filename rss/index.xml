<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 22 Jan 2019 12:20:37 +0900</pubDate>
    <lastBuildDate>Tue, 22 Jan 2019 12:20:37 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>2019-01-22のJS: Node.js 11.7.0、Lighthouse 4.0.0、Flow to TypeScript</title>
        <description>&lt;p&gt;JSer.info #419 - Nodeの開発版であるv11.7.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.7.0/&quot;&gt;Node v11.7.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;zlib&lt;/code&gt;モジュールがbrotliでの圧縮、展開をサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.leko.jp/post/nodejs-is-now-supported-brotli-compression/&quot;&gt;Node.jsの11.7.0からzlibモジュールでBrotli圧縮が使えるようになりました | WEB EGG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また同梱されるnpmが6.5.0へアップデートされ、今まで&lt;code&gt;--experimental-worker&lt;/code&gt;のフラグ付きだった&lt;a href=&quot;https://nodejs.org/api/worker_threads.html&quot;&gt;Worker Thread&lt;/a&gt;がデフォルトで有効になるといった変更が含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;LightHouse 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v4.0.0&quot;&gt;Release 4.0.0 (2019-01-16) · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PWAカテゴリを更新し、スコア表示ではなくOptimizedされているかをBadgeで表示するように変更。&lt;br&gt;
&lt;code&gt;speed-index&lt;/code&gt;がthrottlingに対応した倍率となるように変更、スコアで満点を取ったときの表示を追加などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/&quot;&gt;Porting 30K lines of code from Flow to TypeScript&lt;/a&gt;という記事では、Flowで型付けされたJavaScriptをTypeScriptでの型付けへ移行した経緯と方法について書かれています。&lt;/p&gt;

&lt;p&gt;元々&lt;a href=&quot;https://github.com/gcanti/tcomb&quot;&gt;tcomb&lt;/a&gt;でランタイムチェックしていたコードを&lt;a href=&quot;https://davidgom.es/what-i-wish-i-had-known-before-starting-to-use-flow/&quot;&gt;Flowへ移行&lt;/a&gt;し、今回そのコードをTypeScriptでの型付けに移行した話が書かれています。&lt;/p&gt;

&lt;p&gt;Babel 7でサポートされた&lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-typescript&quot;&gt;@babel/preset-typescript&lt;/a&gt;を利用し、TypeScriptの&lt;code&gt;tsc&lt;/code&gt;を型チェッカーとして使うようにして移行するアプローチについて書かれています。&lt;/p&gt;

&lt;p&gt;FlowからTypeScriptへの移行方法、Flowの方がスムーズだった部分、サードパーティの型定義ファイルのカバレッジの違い、Lintやテストなどについても書かれています。&lt;/p&gt;

&lt;p&gt;類似する趣旨の記事もいくつか書かれているので合わせてみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/paypal-engineering/why-every-new-web-app-at-paypal-starts-with-typescript-9d1acc07c839&quot; title=&quot;Why every new web app at PayPal starts with TypeScript&quot;&gt;Why every new web app at PayPal starts with TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cocopon.me/blog/2019/01/tweakpane-flow2ts/&quot; title=&quot;自作のOSSライブラリをFlowからTypeScriptに全面移行した理由と所感 - ここぽんのーと&quot;&gt;自作のOSSライブラリをFlowからTypeScriptに全面移行した理由と所感 - ここぽんのーと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-workbox-v4-0-0-beta-1-googlechrome-workbox&quot;&gt;Release Workbox v4.0.0-beta.1 · GoogleChrome/workbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/workbox/releases/tag/v4.0.0-beta.1&quot; title=&quot;Release Workbox v4.0.0-beta.1 · GoogleChrome/workbox&quot;&gt;github.com/GoogleChrome/workbox/releases/tag/v4.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Workbox 4.0.0β1リリース。&lt;br&gt;
ウェブページで動作する&lt;code&gt;workbox-window&lt;/code&gt;パッケージの追加、&lt;code&gt;workbox-cli&lt;/code&gt;に&lt;code&gt;--watch&lt;/code&gt;の追加など。&lt;br&gt;
破壊的な変更として&lt;code&gt;workbox-precaching&lt;/code&gt;が書き直し、&lt;code&gt;skipWaiting&lt;/code&gt;や&lt;code&gt;clientsClaim&lt;/code&gt;が&lt;code&gt;workbox.core.*&lt;/code&gt;へ移動するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-future-of-typescript-on-eslint-eslint-pluggable-javascript-linter&quot;&gt;The future of TypeScript on ESLint - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2019/01/future-typescript-eslint&quot; title=&quot;The future of TypeScript on ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2019/01/future-typescript-eslint&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLintのTypeScript対応の今後について。&lt;br&gt;
typescript-eslintという統合されたプロジェクトで、TypeScriptのパーサやルールの開発を行っていく予定。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typescript-eslint/typescript-eslint&quot; title=&quot;typescript-eslint/typescript-eslint: Monorepo for all the tooling which enables ESLint to support TypeScript&quot;&gt;typescript-eslint/typescript-eslint: Monorepo for all the tooling which enables ESLint to support TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bradzacher/eslint-plugin-typescript/issues/290&quot; title=&quot;The Future of eslint-plugin-typescript · Issue #290 · bradzacher/eslint-plugin-typescript&quot;&gt;The Future of eslint-plugin-typescript · Issue #290 · bradzacher/eslint-plugin-typescript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v11-7-0-current-node-js&quot;&gt;Node v11.7.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.7.0/&quot; title=&quot;Node v11.7.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v11.7.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 11.7.0リリース。&lt;br&gt;
&lt;code&gt;zlib&lt;/code&gt;モジュールがbrotliサポート、npm 6.5.0へアップデート、Workerがデフォルトで有効になるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.leko.jp/post/nodejs-is-now-supported-brotli-compression/&quot;&gt;Node.jsの11.7.0からzlibモジュールでBrotli圧縮が使えるようになりました | WEB EGG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1-16-html-improvements-and-better-crlf-handling-prettier&quot;&gt;Prettier 1.16: HTML improvements and better CRLF handling · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2019/01/20/1.16.0.html&quot; title=&quot;Prettier 1.16: HTML improvements and better CRLF handling · Prettier&quot;&gt;prettier.io/blog/2019/01/20/1.16.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.16リリース。&lt;br&gt;
CRLFの対応改善、babel(js)のパーサをアップデート、テストに利用できる&lt;code&gt;--check&lt;/code&gt;フラグの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4-0-0-2019-01-16-googlechrome-lighthouse&quot;&gt;Release 4.0.0 (2019-01-16) · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v4.0.0&quot; title=&quot;Release 4.0.0 (2019-01-16) · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;LightHouse 4.0.0リリース。&lt;br&gt;
PWAカテゴリを更新しスコア表示ではなくなった。&lt;code&gt;speed-index&lt;/code&gt;がthrottlingに対応した倍率となるように変更、スコアで満点を取ったときの表示を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-3-0-released-named-capturing-groups-private-instance-accessors-and-smart-pipelines-babel&quot;&gt;7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2019/01/21/7.3.0&quot; title=&quot;7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines · Babel&quot;&gt;babeljs.io/blog/2019/01/21/7.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.3.0リリース。&lt;br&gt;
&lt;code&gt;proposal-private-methods&lt;/code&gt;がgetterをサポート、&lt;code&gt;proposal-pipeline-operator&lt;/code&gt;で変換に対応、Named capturing groupsの対応など。&lt;br&gt;
TypeScript Parserがimport typeと&lt;code&gt;bigint&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;com-jquery-com-developers-blog&quot;&gt;一休.comホテルページのスマホ版からjQuery依存を取り除くためにやったこと - 一休.com Developers Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://user-first.ikyu.co.jp/entry/goodbye-jquery&quot; title=&quot;一休.comホテルページのスマホ版からjQuery依存を取り除くためにやったこと - 一休.com Developers Blog&quot;&gt;user-first.ikyu.co.jp/entry/goodbye-jquery&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;refacoring&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery依存を外すためのリファクタリング方法について。&lt;br&gt;
jQueryと同等の機能の実装方法や外すことでのパフォーマンスの差異などについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-page-usability-matters-dev-community&quot;&gt;Web Page Usability Matters - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/addyosmani/web-page-usability-matters-3aok&quot; title=&quot;Web Page Usability Matters - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/addyosmani/web-page-usability-matters-3aok&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブページのパフォーマンスを計測することにおける指標についての記事。&lt;br&gt;
多く4つのステップにわけ、その中で利用するメトリクスについて紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;porting-30k-lines-of-code-from-flow-to-typescript&quot;&gt;Porting 30K lines of code from Flow to TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/&quot; title=&quot;Porting 30K lines of code from Flow to TypeScript&quot;&gt;davidgom.es/porting-30k-lines-of-code-from-flow-to-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;3万行のFlowのコードをTypeScriptへ移行した話。&lt;br&gt;
元々tcombによるRuntime CheckからFlowへ移行し、Babel 7 + TypeScript presetへ移行した話。&lt;br&gt;
&lt;code&gt;tsc&lt;/code&gt;を型チェッカーとして利用し、どのようにFlowからTypeScriptへ移行していったかについて。&lt;br&gt;
また移行した結果サードパーティの型定義の改善などから、型のカバレッジが向上した話など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidgom.es/what-i-wish-i-had-known-before-starting-to-use-flow/&quot; title=&quot;What I wish I had known before starting to use Flow&quot;&gt;What I wish I had known before starting to use Flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;callback-yahoo-japan-tech-blog&quot;&gt;Callback を撲滅せよ - Yahoo! JAPAN Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.yahoo.co.jp/javascript/nodejs/callback-to-promise/&quot; title=&quot;Callback を撲滅せよ - Yahoo! JAPAN Tech Blog&quot;&gt;techblog.yahoo.co.jp/javascript/nodejs/callback-to-promise/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コールバックスタイルの非同期コードをPromiseのインターフェースに変更する際のスタイルについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-start-a-node-js-project-phil-nash&quot;&gt;How to start a Node.js project | Phil Nash&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://philna.sh/blog/2019/01/10/how-to-start-a-node-js-project/&quot; title=&quot;How to start a Node.js project | Phil Nash&quot;&gt;philna.sh/blog/2019/01/10/how-to-start-a-node-js-project/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmで公開されているコマンドラインツールを使って、Node.jsプロジェクトのセットアップを簡単に行う話。 ライセンス、gitinore、CoCファイルの作成、pacakge.jsonの作成を行うコマンドの紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-speaker-deck&quot;&gt;雰囲気でやってる人向けの Redux 再入門 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jmblog/fen-wei-qi-deyatuteruren-xiang-kefalse-redux-zai-ru-men&quot; title=&quot;雰囲気でやってる人向けの Redux 再入門 - Speaker Deck&quot;&gt;speakerdeck.com/jmblog/fen-wei-qi-deyatuteruren-xiang-kefalse-redux-zai-ru-men&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reduxでのステート管理についてのスライド。&lt;br&gt;
Store/State、Actionとdispatch、Reducer、Middlewareのそれぞれの役割や動作の流れについて解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-feature-toggles-chrome&quot;&gt;CSS Feature Toggles - Chrome ウェブストア&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/css-feature-toggles/aeinmfddnniiloadoappmdnffcbffnjg&quot; title=&quot;CSS Feature Toggles - Chrome ウェブストア&quot;&gt;chrome.google.com/webstore/detail/css-feature-toggles/aeinmfddnniiloadoappmdnffcbffnjg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの特定の機能を無効化するブラウザ拡張機能。&lt;br&gt;
Grid、Flexbox、Sticky、Transform、Shapes、&lt;code&gt;@supports&lt;/code&gt;などを無効化できる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/keithclark/css-feature-toggle-devtools-extension&quot; title=&quot;keithclark/css-feature-toggle-devtools-extension: A devtools extension for toggling CSS features allowing developers to see how pages/apps render in browsers that don&amp;amp;#x27;t support modern CSS features&quot;&gt;keithclark/css-feature-toggle-devtools-extension: A devtools extension for toggling CSS features allowing developers to see how pages/apps render in browsers that don&amp;#39;t support modern CSS features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-libnpm-programmatic-npm-api&quot;&gt;npm/libnpm: programmatic npm API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/libnpm&quot; title=&quot;npm/libnpm: programmatic npm API&quot;&gt;github.com/npm/libnpm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm APIを操作できるライブラリ。&lt;br&gt;
パッケージやRegistry周りのAPI操作などが行える&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wpk-cli-wpk-a-friendly-intuitive-intelligent-and-unofficial-cli-for-webpack&quot;&gt;wpk-cli/wpk: a friendly, intuitive, intelligent, and unofficial CLI for webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wpk-cli/wpk&quot; title=&quot;wpk-cli/wpk: a friendly, intuitive, intelligent, and unofficial CLI for webpack&quot;&gt;github.com/wpk-cli/wpk&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackをラップしたCLI。&lt;br&gt;
webpackの設定ファイルの作成や変更、ビルド、開発サーバの立ち上げ、&lt;code&gt;webpack-bundle-analyzer&lt;/code&gt;を使ったbundleの解析などのコマンドを提供する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukeed-sockette-the-cutest-little-websocket-wrapper&quot;&gt;lukeed/sockette: The cutest little WebSocket wrapper! 🧦&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukeed/sockette&quot; title=&quot;lukeed/sockette: The cutest little WebSocket wrapper! 🧦&quot;&gt;github.com/lukeed/sockette&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WebSocket&lt;/code&gt;を扱う小さなライブラリ。&lt;br&gt;
自動再接続やイベントハンドリングのAPIを提供しているライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;crubier-code-to-graph-transforms-js-code-into-mermaid-flowchart&quot;&gt;crubier/code-to-graph: Transforms JS code 🙈into mermaid flowchart 🐵&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/crubier/code-to-graph&quot; title=&quot;crubier/code-to-graph: Transforms JS code 🙈into mermaid flowchart 🐵&quot;&gt;github.com/crubier/code-to-graph&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;graphic&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコードから制御フローをgraphviz, mermaid flowchartなどの作図へ変換するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-amazon&quot;&gt;JavaScript コードレシピ集 | 池田 泰延, 鹿野 壮 |本 | 通販 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4297103680/&quot; title=&quot;JavaScript コードレシピ集 | 池田 泰延, 鹿野 壮 |本 | 通販 | Amazon&quot;&gt;www.amazon.co.jp/dp/4297103680/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2019年1月25日発売&lt;br&gt;
JavaScriptを使ったコード例を扱うレシピ本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 22 Jan 2019 11:15:44 +0900</pubDate>
        <link>https://jser.info/2019/01/22/node.js-11.7.0lighthouse-4.0.0flow-to-typescript/</link>
        <guid isPermaLink="true">https://jser.info/2019/01/22/node.js-11.7.0lighthouse-4.0.0flow-to-typescript/</guid>
        
        <category>Node.js</category>
        
        <category>performance</category>
        
        <category>flow</category>
        
        <category>TypeScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>JSer.info 8周年</title>
        <description>&lt;p&gt;2019年1月16日でJSer.infoが8周年を迎えました。&lt;/p&gt;

&lt;p&gt;8周年以外では、今年度は&lt;a href=&quot;https://jser.info/2018/09/22/jser-info-400/&quot;&gt;JSer.info 400回記念イベント&lt;/a&gt;を行ないました。&lt;/p&gt;

&lt;p&gt;最近のJavaScriptは変化が早いとも、変化はあまりしてないとも言われます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&quot;&gt;MSEdgeがChromiumベースへ移行&lt;/a&gt;することを発表したり、&lt;a href=&quot;https://jser.info/2018/12/25/node-browser-libs-gap/&quot;&gt;webpackに求められる役割が変化&lt;/a&gt;しています。&lt;br&gt;
一方、ここ数年で&lt;a href=&quot;https://risingstars.js.org/2018/en/#section-framework&quot;&gt;主要となるフロントエンドフレームワーク&lt;/a&gt;はあまり変化していません。&lt;br&gt;
その分&lt;a href=&quot;https://github.com/facebook/create-react-app&quot;&gt;Create React App&lt;/a&gt;、&lt;a href=&quot;https://medium.com/the-vue-point/vue-cli-3-0-is-here-c42bebe28fbb&quot;&gt;Vue CLI&lt;/a&gt;、&lt;a href=&quot;https://github.com/angular/angular-cli&quot;&gt;Angular CLI&lt;/a&gt;などのCLIや関連エコシステムが集中することで充実しています。&lt;/p&gt;

&lt;p&gt;エコシステムが充実することで出来ることのベースラインは上がっていきます。&lt;br&gt;
一方で多くのエコシステムは何かしらの技術をうまく隠蔽するため、基礎的な部分を知らなくても動かすことができるようになり、それには良い点も悪い点もあります。&lt;br&gt;
(特にブラウザでは後方互換性の問題があるため基礎的な部分の代替えできても、なくなることは少ないです。)&lt;/p&gt;

&lt;p&gt;そのため、視点によっては変化しているとも言えますが、別の視点では急激な変化は少なくなっているとも言えます。&lt;br&gt;
どちらにしても変異が表面化することは減っているとは思うので、JSer.infoではそのような部分についても見ていきたいなと思っています。&lt;/p&gt;

&lt;p&gt;それでは、&lt;a href=&quot;https://jser.info/&quot;&gt;JSer.info&lt;/a&gt;のタイムラインを振り返って、8周年を締めとさせていただきます。&lt;/p&gt;

&lt;p&gt;コメントなどがありましたら次のIssueへご自由に書き込んでください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/103&quot;&gt;JSer.info 8周年 · Issue #103 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jser-info&quot;&gt;JSer.infoのタイムライン&lt;/h2&gt;

&lt;style&gt;
.cd-timeline.svelte-h3wscg .svelte-h3wscg,.cd-timeline.svelte-h3wscg .svelte-h3wscg::after,.cd-timeline.svelte-h3wscg .svelte-h3wscg::before{-webkit-box-sizing:border-box;box-sizing:border-box}.cd-timeline.svelte-h3wscg{font-size:1.4rem;font-family:serif;color:#7f8c97;background-color:#e9f0f5}.cd-timeline.svelte-h3wscg a{color:#1b95e0;text-decoration:none}.cd-timeline.svelte-h3wscg img{max-width:100%}.cd-timeline.svelte-h3wscg h1,h2{font-family:&quot;Open Sans&quot;, sans-serif;font-weight:bold}@media only screen and (min-width: 1170px){}.cd-timeline.svelte-h3wscg{overflow:hidden;margin:2em auto}.cd-timeline__container.svelte-h3wscg{position:relative;width:90%;max-width:1170px;margin:0 auto;padding:2em 0}.cd-timeline__container.svelte-h3wscg::before{content:'';position:absolute;top:0;left:18px;height:100%;width:4px;background:#d7e4ed}@media only screen and (min-width: 1170px){.cd-timeline.svelte-h3wscg{margin-top:3em;margin-bottom:3em}.cd-timeline__container.svelte-h3wscg::before{left:50%;margin-left:-2px}}.cd-timeline__block.svelte-h3wscg{position:relative;margin:2em 0}.cd-timeline__block.svelte-h3wscg:after{content:&quot;&quot;;display:table;clear:both}.cd-timeline__block.svelte-h3wscg:first-child{margin-top:0}.cd-timeline__block.svelte-h3wscg:last-child{margin-bottom:0}@media only screen and (min-width: 1170px){.cd-timeline__block.svelte-h3wscg{margin:4em 0}}.cd-timeline__img.svelte-h3wscg{position:absolute;top:0;left:0;width:40px;height:40px;border-radius:50%;-webkit-box-shadow:0 0 0 4px white, inset 0 2px 0 rgba(0, 0, 0, 0.08), 0 3px 0 4px rgba(0, 0, 0, 0.05);box-shadow:0 0 0 4px white, inset 0 2px 0 rgba(0, 0, 0, 0.08), 0 3px 0 4px rgba(0, 0, 0, 0.05)}.cd-timeline__img.svelte-h3wscg{background:#75ce66}@media only screen and (min-width: 1170px){.cd-timeline__img.svelte-h3wscg{width:60px;height:60px;left:50%;margin-left:-30px;-webkit-transform:translateZ(0);transform:translateZ(0)}}@-webkit-keyframes svelte-h3wscg-cd-bounce-1{0%{opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}60%{opacity:1;-webkit-transform:scale(1.2);transform:scale(1.2)}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes svelte-h3wscg-cd-bounce-1{0%{opacity:0;-webkit-transform:scale(0.5);transform:scale(0.5)}60%{opacity:1;-webkit-transform:scale(1.2);transform:scale(1.2)}100%{-webkit-transform:scale(1);transform:scale(1)}}.cd-timeline__content.svelte-h3wscg{position:relative;margin-left:60px;background:white;border-radius:0.25em;padding:1em;-webkit-box-shadow:0 3px 0 #d7e4ed;box-shadow:0 3px 0 #d7e4ed}.cd-timeline__content.svelte-h3wscg:after{content:&quot;&quot;;display:table;clear:both}.cd-timeline__content.svelte-h3wscg::before{content:'';position:absolute;top:16px;right:100%;height:0;width:0;border:7px solid transparent;border-right:7px solid white}.cd-timeline__content.svelte-h3wscg h2.svelte-h3wscg{color:#303e49}.cd-timeline__date.svelte-h3wscg{font-size:1.2rem;color:#000;}.cd-timeline__date.svelte-h3wscg{display:inline-block}.cd-timeline__date.svelte-h3wscg{float:left;padding:.8em 0;opacity:.7}@media only screen and (min-width: 768px){.cd-timeline__content.svelte-h3wscg h2.svelte-h3wscg{font-size:2rem}.cd-timeline__date.svelte-h3wscg{font-size:1.1rem}}@media only screen and (min-width: 1170px){.cd-timeline__content.svelte-h3wscg{margin-left:0;padding:1.6em;width:45%;-webkit-transform:translateZ(0);transform:translateZ(0)}.cd-timeline__content.svelte-h3wscg::before{top:24px;left:100%;border-color:transparent;border-left-color:white}.cd-timeline__date.svelte-h3wscg{position:absolute;width:100%;left:122%;top:6px;font-size:1.4rem}.cd-timeline__block.svelte-h3wscg:nth-child(even) .cd-timeline__content.svelte-h3wscg{float:right}.cd-timeline__block.svelte-h3wscg:nth-child(even) .cd-timeline__content.svelte-h3wscg::before{top:24px;left:auto;right:100%;border-color:transparent;border-right-color:white}.cd-timeline__block.svelte-h3wscg:nth-child(even) .cd-timeline__date.svelte-h3wscg{left:auto;right:122%;text-align:right}}@media only screen and (min-width: 1170px){}@-webkit-keyframes svelte-h3wscg-cd-bounce-2{0%{opacity:0;-webkit-transform:translateX(-100px);transform:translateX(-100px)}60%{opacity:1;-webkit-transform:translateX(20px);transform:translateX(20px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes svelte-h3wscg-cd-bounce-2{0%{opacity:0;-webkit-transform:translateX(-100px);transform:translateX(-100px)}60%{opacity:1;-webkit-transform:translateX(20px);transform:translateX(20px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@-webkit-keyframes svelte-h3wscg-cd-bounce-2-inverse{0%{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}60%{opacity:1;-webkit-transform:translateX(-20px);transform:translateX(-20px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes svelte-h3wscg-cd-bounce-2-inverse{0%{opacity:0;-webkit-transform:translateX(100px);transform:translateX(100px)}60%{opacity:1;-webkit-transform:translateX(-20px);transform:translateX(-20px)}100%{-webkit-transform:translateX(0);transform:translateX(0)}}
&lt;/style&gt;

&lt;section class=&quot;cd-timeline js-cd-timeline svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__container svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 公開&lt;/h2&gt;
&lt;p&gt;JSer.infoを公開して運用を開始した。&lt;/p&gt;
&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2011-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 1周年&lt;/h2&gt;
&lt;p&gt;JSer.infoを公開してから1年が経ったのを記念して&lt;a href=&quot;https://atnd.org/events/23551&quot;&gt;オフラインJavaScript勉強会&lt;/a&gt;で発表をした。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/post/15883533195&quot;&gt;オフライン勉強会でJSer.info一周年について発表してきた - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;
&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2012-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 100回&lt;/h2&gt;
&lt;p&gt;100回目の投稿。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/post/37638024456&quot;&gt;2012-12-10のJS: Firebug 1.11.0、Heap Profilerでのメモリリーク調査、CSS testing tools - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2012-12-10&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 2周年&lt;/h2&gt;
&lt;p&gt;2周年を迎えた。&lt;/p&gt;
&lt;p&gt;公開時にとりあえず2年はやってみることにしていていてそれを達成した。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/post/41104670903&quot;&gt;2013-01-21のJS: jQuery 1.9、Testing jQuery Plugins、JavaScript testing boilerplate - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2013-01-21&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 3周年&lt;/h2&gt;
&lt;p&gt;3周年を迎えた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/post/73484514668/third-anniversary&quot;&gt;third anniversary - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2014-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;GitHub Pagesに移行&lt;/h2&gt;
&lt;p&gt;TumblrからGitHub Pagesに移行した。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2014/08/03/renewal/&quot;&gt;JSer.infoをTumblrからGitHub Pagesに移行しました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2014-08-03&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 200回&lt;/h2&gt;
&lt;p&gt;投稿記事が200コになることを記念して、初めて主催となるイベントを開催した。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2014/11/02/jser200/&quot;&gt;JSer.info 200回記念イベントを開催しました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2014-11-02&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 4周年&lt;/h2&gt;
&lt;p&gt;4周年を迎えた。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2015/01/16/4-years/&quot;&gt;JSer.info 4周年 - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2015-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.infoの韓国語訳&lt;/h2&gt;
&lt;p&gt;同サイト内で韓国語訳を開始した。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/ko/&quot;&gt;https://jser.info/ko/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;韓国語訳は&lt;a href=&quot;https://github.com/UYEONG&quot;&gt;U-Yeong Ju&lt;/a&gt;さんがメインでしている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2015/06/10/es6-status-webaudio/&quot;&gt;2015-06-10のJS: ブラウザとES6の状況、Web Audio APIチュートリアル - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2015-06-10&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 5周年&lt;/h2&gt;
&lt;p&gt;5周年となり記念イベントを開催した。
イベントではJavaScript Discussionのコーナーを行うようになった。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/&quot;&gt;ECMAScript Daily&lt;/a&gt;というECMAScriptに関する情報のみを扱うサイトを作成した。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2016/01/16/jser-5years/&quot;&gt;JSer.info 5周年記念イベントを開催しました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2016-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 300回&lt;/h2&gt;
&lt;p&gt;300回目の投稿。サイトがフルHTTPSへ移行した。
また&lt;a href=&quot;https://jser.info/ping/&quot; title=&quot;Ping! to JSer.info&quot;&gt;Ping! to JSer.info&lt;/a&gt;で掲載して欲しいURLを通知できるようになった。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2016/10/10/300posts/&quot;&gt;JSer.info 300回目 &amp;#x26;&amp;#x26; https化 &amp;#x26;&amp;#x26; ユーザー投稿機能 - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2016-10-10&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 6周年&lt;/h2&gt;
&lt;p&gt;6周年を迎えた。&lt;/p&gt;
&lt;p&gt;前日の2017-01-15に6周年記念イベントを開催した。
イベントではDropbox Paperを使ったリアルタイム書き起こしを取り入れた。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2017/01/15/jser-info-6years/&quot;&gt;JSer.info 6周年記念イベントを開催しました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2017-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 7周年&lt;/h2&gt;
&lt;p&gt;7周年を迎えた。365回目の投稿。&lt;/p&gt;
&lt;p&gt;あらためてJSer.infoのワークフローについてをまとめた&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2018/01/15/jser-info-7years/&quot;&gt;JSer.infoを開始してから7年が経ちました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2018-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 400回&lt;/h2&gt;
&lt;p&gt;400回目の投稿。&lt;/p&gt;
&lt;p&gt;400回記念イベントを開催した。&lt;/p&gt;
&lt;p&gt;詳細は&lt;a href=&quot;https://jser.info/2018/09/22/jser-info-400/&quot;&gt;JSer.info 400回記念イベントを開催しました - JSer.info&lt;/a&gt;を参照。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2018-09-22&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&quot;cd-timeline__block js-cd-block svelte-h3wscg&quot;&gt;
&lt;div class=&quot;cd-timeline__img cd-timeline__img--movie js-cd-img svelte-h3wscg&quot;&gt;
&lt;/div&gt;
&lt;div class=&quot;cd-timeline__content js-cd-content svelte-h3wscg&quot;&gt;
&lt;h2 class=&quot;svelte-h3wscg&quot;&gt;JSer.info 8周年&lt;/h2&gt;
&lt;p&gt;8周年を迎えた。&lt;/p&gt;

&lt;span class=&quot;cd-timeline__date svelte-h3wscg&quot;&gt;2019-01-16&lt;/span&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
</description>
        <pubDate>Wed, 16 Jan 2019 12:03:00 +0900</pubDate>
        <link>https://jser.info/2019/01/16/8-years/</link>
        <guid isPermaLink="true">https://jser.info/2019/01/16/8-years/</guid>
        
        <category>JSer.info</category>
        
        
        <category>雑記</category>
        
      </item>
    
      <item>
        <title>2019-01-16のJS: Storybook 4.1、TypeScriptへの段階的移行、2018年のスター数増加率</title>
        <description>&lt;p&gt;JSer.info #418 - Storybook 4.1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/storybookjs/storybook-4-1-need-for-speed-b05fd5f1e83d&quot;&gt;Storybook 4.1: Need for Speed – Storybook – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PreviewエリアとMangerエリアを分離することでパフォーマンスの改善がされています。&lt;br&gt;
また、&lt;a href=&quot;https://medium.com/storybookjs/storybook-4-0-is-here-10b9857fc7de&quot;&gt;Storybook 4.0&lt;/a&gt;ではReactのContext APIに依存していたため、React 16.3以降でしか動きませんでした。Storybook 4.1ではReact 15.xでも動作するように、後方互換性の修正が含まれています。&lt;/p&gt;

&lt;p&gt;その他として&lt;a href=&quot;https://github.com/storybooks/storybook/tree/next/addons/cssresources&quot;&gt;Storybook Addon Cssresources&lt;/a&gt;の追加などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://efcl.info/2019/01/09/babel-to-typescript-library/&quot;&gt;Babelで書かれたJavaScriptライブラリをTypeScriptへ移行する方法 | Web Scratch&lt;/a&gt;という記事では、TypeScriptへ段階的に移行する方法について書かれています。&lt;br&gt;
Babelを使ってES2015で書かれていたライブラリを例に、ステップバイステップでTypeScriptへ段階的に移行する手順を紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;GitHubのスター数の増加数をまとめたJavaScript Rising Starsの2018年版が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://risingstars.js.org/2018/en/&quot;&gt;2018 JavaScript Rising Stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;フロントエンドフレームワーク、フレームワークごとのエコシステム、Node.js、モバイル、コンパイラ(Transpiler)、ビルドツール、テストフレームワーク、エディタ、CSS in JS、静的サイト、GraphQLの項目別にまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;storybook-4-1-need-for-speed-storybook-medium&quot;&gt;Storybook 4.1: Need for Speed – Storybook – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/storybookjs/storybook-4-1-need-for-speed-b05fd5f1e83d&quot; title=&quot;Storybook 4.1: Need for Speed – Storybook – Medium&quot;&gt;medium.com/storybookjs/storybook-4-1-need-for-speed-b05fd5f1e83d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybook 4.1リリース。&lt;br&gt;
パフォーマンスの改善、React 15.xの後方互換性を追加、 CSS Resources addonの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-73-webkit&quot;&gt;Release Notes for Safari Technology Preview 73 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8555/release-notes-for-safari-technology-preview-73/&quot; title=&quot;Release Notes for Safari Technology Preview 73 | WebKit&quot;&gt;webkit.org/blog/8555/release-notes-for-safari-technology-preview-73/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 73リリース。&lt;br&gt;
&lt;code&gt;globalThis&lt;/code&gt;のサポート、Web Inspectorでm3u8の中身をテキスト表示できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;video-js-7-4-video-js-blog&quot;&gt;Video.js 7.4 | Video.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.videojs.com/video-js-7-4/&quot; title=&quot;Video.js 7.4 | Video.js Blog&quot;&gt;blog.videojs.com/video-js-7-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Video.js 7.4リリース。&lt;br&gt;
Live UIのサポート、VoiceOverの対応などアクセシビリティの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-0-0-juliangarnier-anime&quot;&gt;Release v3.0.0 · juliangarnier/anime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/juliangarnier/anime/releases/tag/v3.0.0&quot; title=&quot;Release v3.0.0 · juliangarnier/anime&quot;&gt;github.com/juliangarnier/anime/releases/tag/v3.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;アニメーションライブラリのanime 3.0.0リリース。&lt;br&gt;
新しいイージング関数の追加、ライフサイクル系のコールバックを追加、keyframesシステムの刷新など。&lt;br&gt;
破壊的な変更点としてAPIが一部リネームされている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1-1-0-avajs-ava&quot;&gt;Release 1.1.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.1.0&quot; title=&quot;Release 1.1.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v1.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 1.1.0リリース。&lt;br&gt;
実行中のテストファイルのパスなどを取得できる&lt;code&gt;meta&lt;/code&gt;オブジェクトの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;donejs-3&quot;&gt;DoneJS 3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bitovi.com/blog/donejs-3&quot; title=&quot;DoneJS 3&quot;&gt;www.bitovi.com/blog/donejs-3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DoneJS 3リリース。&lt;br&gt;
CanJS 5.0、StealJS 2.0へのアップデートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bitovi.com/blog/canjs-5&quot; title=&quot;CanJS 5.0&quot;&gt;CanJS 5.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://donejs.com/Features.html#incremental-rendering&quot; title=&quot;donejs - Features&quot;&gt;donejs - Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-javascript-typescript-web-scratch&quot;&gt;Babelで書かれたJavaScriptライブラリをTypeScriptへ移行する方法 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://efcl.info/2019/01/09/babel-to-typescript-library/&quot; title=&quot;Babelで書かれたJavaScriptライブラリをTypeScriptへ移行する方法 | Web Scratch&quot;&gt;efcl.info/2019/01/09/babel-to-typescript-library/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ライブラリのコードベースをTypeScriptへマイグレーションしていく方法について。&lt;br&gt;
Babelで行っていたES2015からの変換処理を&lt;code&gt;tsc&lt;/code&gt;に移行し、コードベースをTypeScriptへと段階的に変換していくチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-2-8-conditional-types-marius-schulz&quot;&gt;TypeScript 2.8: Conditional Types — Marius Schulz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mariusschulz.com/2019/01/09/typescript-2-8-conditional-types&quot; title=&quot;TypeScript 2.8: Conditional Types — Marius Schulz&quot;&gt;blog.mariusschulz.com/2019/01/09/typescript-2-8-conditional-types&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.8で導入されたConditional Typesについて。&lt;br&gt;
Conditional Typesを使った型の分岐処理について、さまざまなコード例を紹介している。&lt;br&gt;
NonNullable、Inferの利用例などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;computer-science-in-javascript-2019-linked-list-human-who-codes&quot;&gt;Computer science in JavaScript 2019: Linked list - Human Who Codes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://humanwhocodes.com/blog/2019/01/computer-science-in-javascript-linked-list/&quot; title=&quot;Computer science in JavaScript 2019: Linked list - Human Who Codes&quot;&gt;humanwhocodes.com/blog/2019/01/computer-science-in-javascript-linked-list/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;algorithm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでLinkedListを実装しながら、そのデータ構造について学ぶ記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-vue-router-vuex-laravel-1-hypertext-candy&quot;&gt;Vue + Vue Router + Vuex + Laravelで写真共有アプリを作ろう (1) イントロダクション | Hypertext Candy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hypertextcandy.com/vue-laravel-tutorial-introduction&quot; title=&quot;Vue + Vue Router + Vuex + Laravelで写真共有アプリを作ろう (1) イントロダクション | Hypertext Candy&quot;&gt;www.hypertextcandy.com/vue-laravel-tutorial-introduction&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.js + Vue Router + Laravelを使ったSPAアプリケーションを作成する連載記事。&lt;br&gt;
写真共有アプリを例にクライアントサイドとサーバサイドをどちらも作成していくチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-learn-css-smashing-magazine&quot;&gt;How To Learn CSS — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2019/01/how-to-learn-css/&quot; title=&quot;How To Learn CSS — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2019/01/how-to-learn-css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSをどのように学ぶかについての記事。&lt;br&gt;
Selector、Boxモデル、Flow、Layout、Aligment、SizingなどCSSの基礎となる要素について解説やリソースを紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-performance-checklist-2019-pdf-apple-pages-ms-word-smashing-magazine&quot;&gt;Front-End Performance Checklist 2019 [PDF, Apple Pages, MS Word] — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2019/01/front-end-performance-checklist-2019-pdf-pages/&quot; title=&quot;Front-End Performance Checklist 2019 \[PDF, Apple Pages, MS Word\] — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2019/01/front-end-performance-checklist-2019-pdf-pages/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドに関するパフォーマンスチェックリスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fast-gif-parsing-on-the-web-with-wasm-wuffs-dev-community&quot;&gt;Fast GIF parsing on the web with WASM + Wuffs - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/chromiumdev/fast-gif-parsing-on-the-web-with-wasm--wuffs-48l4&quot; title=&quot;Fast GIF parsing on the web with WASM + Wuffs - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/chromiumdev/fast-gif-parsing-on-the-web-with-wasm--wuffs-48l4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GIFパースをEmscripten + WebAssemblyで行う話。&lt;br&gt;
どのようにbindingを作成し、デコード処理をして、Canvasで描画するかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/01/emscripten-npm&quot; title=&quot;Emscripten and npm  |  Web  |  Google Developers&quot;&gt;Emscripten and npm  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2018-javascript-rising-stars&quot;&gt;2018 JavaScript Rising Stars&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://risingstars.js.org/2018/en/&quot; title=&quot;2018 JavaScript Rising Stars&quot;&gt;risingstars.js.org/2018/en/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript関係のプロダクトにおける、2018年のGitHubスター数の増加数ランキングが公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;markdown-driven-scaffolding-wadackel-me&quot;&gt;Markdown Driven な scaffolding ツールを作った - wadackel.me&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.wadackel.me/2019/scaffdog/&quot; title=&quot;Markdown Driven な scaffolding ツールを作った - wadackel.me&quot;&gt;blog.wadackel.me/2019/scaffdog/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Markdownの1ファイルに複数のファイルテンプレートを書いて、複数ファイルを出力できるファイル生成ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fromjs-an-experimental-data-flow-analysis-tool-for-front-end-javascript&quot;&gt;FromJS - An experimental data-flow analysis tool for front-end JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.fromjs.com/&quot; title=&quot;FromJS - An experimental data-flow analysis tool for front-end JavaScript&quot;&gt;www.fromjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;表示されている文字列がコードのどこで生成されているかをDOMインスペクトできるツール。&lt;br&gt;
HTMLを生成するDOM APIを上書きして、トレースできるようにしたChromeを立ち上げデバッグできるようにしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dominictobias-keshi-a-better-in-memory-cache-for-node-and-the-browser&quot;&gt;DominicTobias/keshi: A better in-memory cache for Node and the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DominicTobias/keshi&quot; title=&quot;DominicTobias/keshi: A better in-memory cache for Node and the browser&quot;&gt;github.com/DominicTobias/keshi&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザとNode.jsで動くインメモリキャッシュライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 16 Jan 2019 11:26:58 +0900</pubDate>
        <link>https://jser.info/2019/01/16/storybook-4.1typescript2018/</link>
        <guid isPermaLink="true">https://jser.info/2019/01/16/storybook-4.1typescript2018/</guid>
        
        <category>storybook</category>
        
        <category>typescript</category>
        
        <category>github</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-01-08のJS: TypeScriptのロードマップ、FBT i18n Framework、Learn JavaScript</title>
        <description>&lt;p&gt;JSer.info #417 - TypeScriptの2019年前半のロードマップが、次のIssueで公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/29288&quot;&gt;TypeScript Roadmap: January - June 2019 · Issue #29288 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;allowJs&lt;/code&gt;や&lt;code&gt;checkJS&lt;/code&gt;などでJavaScriptも扱うようになったため、さらにJS/JSDocの扱いの改善してTypeScriptへのマイグレーションがスムーズにできるようにすること。&lt;br&gt;
またLintへの取り組みでは、TSLintはルールの仕組み上パフォーマンスに問題がありそれを改善するには既存のルールにも影響を与えるため、TSLintではなくESLintでのTypeScriptのLint改善をしていく方針について書かれています。&lt;/p&gt;

&lt;p&gt;また、TypeScript Compilerのパフォーマンス改善や整形などをCLIから行えるようにするといったCLIの改善、ドキュメントの改善、Playgroundで&lt;code&gt;tsconfig.json&lt;/code&gt;の設定できるようにするといった改善などに取り組んでいく方針について書かれています。&lt;/p&gt;

&lt;p&gt;このロードマップに対してのフィードバックも募集しています。&lt;br&gt;
意見がある人は書いてみるとよいかもしれません。&lt;/p&gt;

&lt;p&gt;機能的なロードマップについては、次のページで公開されているので合わせてみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://learnjavascript.online/&quot;&gt;Learn JavaScript&lt;/a&gt;というJavaScriptの学習サイトが公開されています。&lt;/p&gt;

&lt;p&gt;ES2015なども含めた基本的なJavaScriptの書き方について練習問題を解いていきながら学べるサイトとなっています。&lt;br&gt;
すべての問題にテストが書かれており、そのテストを通るようにJavaScriptを書いていく&lt;a href=&quot;https://en.wikipedia.org/wiki/Kata_%28programming%29&quot;&gt;code kata&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;復習用にFlashcardsも用意されているので、JavaScriptを書いて学びたい人は触ってみると良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-9-0-qunitjs-qunit&quot;&gt;Release 2.9.0 · qunitjs/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/qunitjs/qunit/releases/tag/2.9.0&quot; title=&quot;Release 2.9.0 · qunitjs/qunit&quot;&gt;github.com/qunitjs/qunit/releases/tag/2.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;QUnit 2.9.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-1-3-facebook-create-react-app&quot;&gt;Release v2.1.3 · facebook/create-react-app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/releases/tag/v2.1.3&quot; title=&quot;Release v2.1.3 · facebook/create-react-app&quot;&gt;github.com/facebook/create-react-app/releases/tag/v2.1.3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;react&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;create-react-app 2.1.3リリース。&lt;br&gt;
&lt;code&gt;webpack-dev-server@3.1.10&lt;/code&gt;以下にあった脆弱性を修正したバージョンを取り込んでいる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cal1.cn/post/Sniffing%20Codes%20in%20Hot%20Module%20Reloading%20Messages&quot; title=&quot;Sniffing Codes in Hot Module Reloading Messages - crblog&quot;&gt;Sniffing Codes in Hot Module Reloading Messages - crblog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack-dev-server/releases/tag/v3.1.11&quot; title=&quot;Release v3.1.11 · webpack/webpack-dev-server&quot;&gt;Release v3.1.11 · webpack/webpack-dev-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/advisories/725&quot; title=&quot;npm&quot;&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;page-object-pattern-in-javascript-linkedin&quot;&gt;Page Object pattern in JavaScript | LinkedIn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/page-object-pattern-javascript-vladim%C3%ADr-gorej/&quot; title=&quot;Page Object pattern in JavaScript | LinkedIn&quot;&gt;www.linkedin.com/pulse/page-object-pattern-javascript-vladim%C3%ADr-gorej/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Selenium WebDriverを使ったページオブジェクトパターンについて。&lt;br&gt;
ページオブジェクトとはどのようなものか、要素の抽象化、遅延処理、ページオブジェクトにAssertを含めないことについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;odi-server-side-framework-dev-community&quot;&gt;Odi - server-side framework - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/dantsk/odi---server-side-framework-2ep7&quot; title=&quot;Odi - server-side framework - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/dantsk/odi---server-side-framework-2ep7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのサーバサイドフレームワーク。Decoratorを使った宣言的な定義やTypeScriptの&lt;code&gt;emitDecoratorMetadata&lt;/code&gt;を使ったDTOなどを持つ。&lt;br&gt;
類似するコンセプトを持つNestjsとの違いについてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Odi-ts/odi&quot; title=&quot;Odi-ts/odi: 🌪🌌 Opinionated, Declarative, Idiomatic framework for building scalable, supportable, enterprise applications and servers.&quot;&gt;Odi-ts/odi: 🌪🌌 Opinionated, Declarative, Idiomatic framework for building scalable, supportable, enterprise applications and servers.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;neural-networks-in-javascript-scrimba-com&quot;&gt;Neural networks in JavaScript | Scrimba.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scrimba.com/g/gneuralnetworks&quot; title=&quot;Neural networks in JavaScript | Scrimba.com&quot;&gt;scrimba.com/g/gneuralnetworks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ニューラルネットワークライブラリであるBrain.jsのインタラクティブなチュートリアル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BrainJS/brain.js&quot; title=&quot;BrainJS/brain.js: 🤖 Neural networks in JavaScript&quot;&gt;BrainJS/brain.js: 🤖 Neural networks in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-roadmap-january-june-2019-issue-29288-microsoft-typescript&quot;&gt;TypeScript Roadmap: January - June 2019 · Issue #29288 · Microsoft/TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/29288&quot; title=&quot;TypeScript Roadmap: January - June 2019 · Issue #29288 · Microsoft/TypeScript&quot;&gt;github.com/Microsoft/TypeScript/issues/29288&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのロードマップ。&lt;br&gt;
JS/JSDocの扱いの改善、TSLintではなくESLintでのTSのLint改善、パフォーマンス改善、CLIの改善、ドキュメントの改善、Playgroundの改善などに取り組んでいく&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-javascript&quot;&gt;Learn JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learnjavascript.online/&quot; title=&quot;Learn JavaScript&quot;&gt;learnjavascript.online/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptについてテストを通るようにコードを書いて学べるサイト。&lt;br&gt;
それぞれの項目に対して大量の練習問題があり、復習用にFlashcardsが用意されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-webm-wasm-webm-wasm-lets-you-create-webm-videos-in-javascript-via-webassembly&quot;&gt;GoogleChromeLabs/webm-wasm: webm-wasm lets you create webm videos in JavaScript via WebAssembly.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/webm-wasm&quot; title=&quot;GoogleChromeLabs/webm-wasm: webm-wasm lets you create webm videos in JavaScript via WebAssembly.&quot;&gt;github.com/GoogleChromeLabs/webm-wasm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C++&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webmをエンコードするWebAssemblyライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;facebookincubator-fbt-a-javascript-internationalization-framework&quot;&gt;facebookincubator/fbt: A JavaScript Internationalization Framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebookincubator/fbt&quot; title=&quot;facebookincubator/fbt: A JavaScript Internationalization Framework&quot;&gt;github.com/facebookincubator/fbt&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;u18&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Facebookのi18n JavaScriptフレームワーク。&lt;br&gt;
ソースコードからフレーズの収集、翻訳ファイルの管理、関数やJSXでの翻訳表示、babelプラグインなどを持ったi18nフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;runjs-write-and-run-javascript-instantly&quot;&gt;RunJS - Write and run JavaScript instantly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://projects.lukehaas.me/runjs/&quot; title=&quot;RunJS - Write and run JavaScript instantly&quot;&gt;projects.lukehaas.me/runjs/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;mac&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを実行した結果をside by sideで表示できるmacOS向けのアプリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Jan 2019 11:22:36 +0900</pubDate>
        <link>https://jser.info/2019/01/08/typescriptfbt-i18n-frameworklearn-javascript/</link>
        <guid isPermaLink="true">https://jser.info/2019/01/08/typescriptfbt-i18n-frameworklearn-javascript/</guid>
        
        <category>TypeScript</category>
        
        <category>i18n</category>
        
        <category>JavaScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-01-01のJS: WebdriverIO v5、Rollup 1.0、Rust + WebAssembly + WebWorker</title>
        <description>&lt;p&gt;JSer.info #416 - WebDriverを扱うテストフレームワークであるWebdriverIO v5がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&quot;&gt;WebdriverIO v5 Released · WebdriverIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot;&gt;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;パッケージ構造やAPI周りの変更が行われています。&lt;/p&gt;

&lt;p&gt;基本的なパッケージが&lt;a href=&quot;https://www.npmjs.com/org/@wdio/&quot;&gt;&lt;code&gt;@wdio&lt;/code&gt;&lt;/a&gt;に移動され、同梱されていたCLIが&lt;code&gt;@wdio/cli&lt;/code&gt;に移動しています。&lt;/p&gt;

&lt;p&gt;API周りではコマンドがselectorを受け取らないようになり、メソッドチェーンではなくasync/awaitベースに変更されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// v4ではセレクタを渡せた&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#elem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// v5からはelementを取得してから操作する&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#elem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;その他にも&lt;code&gt;isVisible&lt;/code&gt;が&lt;code&gt;isDisplayed&lt;/code&gt;にリネームされるなど多くのコマンドのリネームが行われています。&lt;br&gt;
詳しくは&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot;&gt;CHANGELOG.md&lt;/a&gt;に掲載されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;モジュールBundlerであるRollup v1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rollup/rollup/releases/tag/v1.0.0&quot;&gt;Release v1.0.0 · rollup/rollup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更として、非推奨となっていたオプションやオプションのリネームが含まれています。&lt;br&gt;
&lt;code&gt;bundle.generate&lt;/code&gt;と&lt;code&gt;bundle.write&lt;/code&gt;の返す値のフォーマットの変更、&lt;code&gt;acorn@6&lt;/code&gt;へアップデートなどが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rollup/rollup/pull/2293&quot;&gt;1.0 changes by guybedford · Pull Request #2293 · rollup/rollup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/3846masa/items/92d24e16ebb5151b08ba&quot;&gt;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&lt;/a&gt;という記事では、Zip展開アプリの例にしたRustとWebAssemblyを使った開発について書かれています。&lt;/p&gt;

&lt;p&gt;Rustや&lt;a href=&quot;https://rustwasm.github.io/wasm-pack/book/&quot;&gt;wasm-pack&lt;/a&gt;を使った開発環境の設定から、&lt;a href=&quot;https://rustwasm.github.io/wasm-bindgen/&quot;&gt;wasm-bindgen&lt;/a&gt;でRustとJavaScriptのバインディングの作成、webpackでの読み込みとブラウザでの実行についてまで書かれています。&lt;br&gt;
また、メインスレッドで重たい処理を行うのを避けるために、WebAssemblyの処理をWebWorker上で行い、そのメッセージのやり取りに&lt;a href=&quot;https://github.com/GoogleChromeLabs/comlink&quot;&gt;Comlink&lt;/a&gt;を使う方法などについても紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverio-v5-released-webdriverio&quot;&gt;WebdriverIO v5 Released · WebdriverIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&quot; title=&quot;WebdriverIO v5 Released · WebdriverIO&quot;&gt;webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIO v5リリース。&lt;br&gt;
&lt;code&gt;wdio&lt;/code&gt; CLIは&lt;code&gt;@wdio/cli&lt;/code&gt;に移動、コマンドがselectorを受け取らないように、メソッドチェーンではなくasync/awaitベースに変更。&lt;br&gt;
その他にもコマンドのリネームなどの破壊的な変更を多く含む&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot; title=&quot;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&quot;&gt;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-rollup-rollup&quot;&gt;Release v1.0.0 · rollup/rollup&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rollup/rollup/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · rollup/rollup&quot;&gt;github.com/rollup/rollup/releases/tag/v1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rollup 1.0.0リリース。&lt;br&gt;
破壊的な変更としてオプションのリネーム、&lt;code&gt;bundle.generate&lt;/code&gt;の返す値のフォーマットの変更、&lt;code&gt;acorn@6&lt;/code&gt;へアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;graphql-rest-api-hub-web&quot;&gt;「GraphQL」徹底入門 ─ RESTとの比較、API・フロント双方の実装から学ぶ - エンジニアHub｜若手Webエンジニアのキャリアを考える！&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://employment.en-japan.com/engineerhub/entry/2018/12/26/103000&quot; title=&quot;「GraphQL」徹底入門 ─ RESTとの比較、API・フロント双方の実装から学ぶ - エンジニアHub｜若手Webエンジニアのキャリアを考える！&quot;&gt;employment.en-japan.com/engineerhub/entry/2018/12/26/103000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLの入門記事。&lt;br&gt;
GraphQLの利点、欠点、スキーマ/クエリの書き方、VariableやFragmentの使い方について。&lt;br&gt;
またRelayの拡張や実際にGraphQLを使った実装例についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-throttling-and-debouncing-bits-and-pieces&quot;&gt;Understanding Throttling and Debouncing – Bits and Pieces&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.bitsrc.io/understanding-throttling-and-debouncing-973131c1ba07&quot; title=&quot;Understanding Throttling and Debouncing – Bits and Pieces&quot;&gt;blog.bitsrc.io/understanding-throttling-and-debouncing-973131c1ba07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ThrottlingとDebouncingについてそれぞれを実装しながら挙動を理解していく記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comlink-rust-webassembly-qiita&quot;&gt;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/3846masa/items/92d24e16ebb5151b08ba&quot; title=&quot;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&quot;&gt;qiita.com/3846masa/items/92d24e16ebb5151b08ba&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustを使ったWebAssemblyライブラリの開発について。&lt;br&gt;
Rustを使ったwasmのバインディングの作成、webpackを使ったロード方法について。&lt;br&gt;
また、処理をメインスレッド外のWebWorkerで行いComlinkでのデータのやり取りする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-7-qiita&quot;&gt;Babel 7 の主な変更点まとめ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/soarflat/items/21b8955f992bf7d38581&quot; title=&quot;Babel 7 の主な変更点まとめ - Qiita&quot;&gt;qiita.com/soarflat/items/21b8955f992bf7d38581&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7の主な変更点やマイグレーション方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-native-codezine&quot;&gt;基礎からはじめるReact Native入門連載一覧：CodeZine（コードジン）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codezine.jp/article/corner/772&quot; title=&quot;基礎からはじめるReact Native入門連載一覧：CodeZine（コードジン）&quot;&gt;codezine.jp/article/corner/772&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Nativeについての連載記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-modules-in-node-js-the-new-plan&quot;&gt;ECMAScript modules in Node.js: the new plan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://2ality.com/2018/12/nodejs-esm-phases.html&quot; title=&quot;ECMAScript modules in Node.js: the new plan&quot;&gt;2ality.com/2018/12/nodejs-esm-phases.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにおけるES Modulesの扱いについてのまとめ記事。&lt;br&gt;
&lt;code&gt;.mjs&lt;/code&gt;のサポートについてやCommonJSとの相互運用性の問題、今後どのような方針が予定されているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-web-infoq&quot;&gt;JavaScriptとWeb開発に関するInfoQトレンドレポート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.infoq.com/jp/articles/javascript-web-development-trends&quot; title=&quot;JavaScriptとWeb開発に関するInfoQトレンドレポート&quot;&gt;www.infoq.com/jp/articles/javascript-web-development-trends&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;InfoQのJavaScriptに関するトレンドレポート。&lt;br&gt;
イノベーター、アーリーアダプター、アーリーマジョリティ、レイトマジョリティ、ラガードに分けて関連するライブラリ/フレームワーク/ツールについて紹介している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-angular&quot;&gt;TypeScriptで実現する型安全な多言語対応（Angularを例に） | 株式会社カブク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kabuku.co.jp/software_engineer/typescript-angular-i18n/&quot; title=&quot;TypeScriptで実現する型安全な多言語対応（Angularを例に） | 株式会社カブク&quot;&gt;www.kabuku.co.jp/software_engineer/typescript-angular-i18n/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;翻訳ファイルをTypeScriptのコードとして表現することで型安全な翻訳定義を作成する方法について。&lt;br&gt;
翻訳ファイルをコードにするメリットとデメリットについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;takefumi-yoshii-react-hooks-ogiri-advent-calendar-of-2018-this-is-a-showreel-using-a-reaction-hook&quot;&gt;takefumi-yoshii/react-hooks-ogiri: Advent calendar of 2018. This is a showreel using a reaction hook.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/takefumi-yoshii/react-hooks-ogiri&quot; title=&quot;takefumi-yoshii/react-hooks-ogiri: Advent calendar of 2018. This is a showreel using a reaction hook.&quot;&gt;github.com/takefumi-yoshii/react-hooks-ogiri&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Hooks APIを使ったUIコンポーネントのサンプル実装集&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/advent-calendar/2018/react-hooks-ogiri&quot; title=&quot;React Hooks 大喜利 Advent Calendar 2018 - Qiita&quot;&gt;React Hooks 大喜利 Advent Calendar 2018 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fontoxml-fontoxpath-a-minimalistic-xpath-3-1-implementation-in-pure-javascript&quot;&gt;FontoXML/fontoxpath: A minimalistic XPath 3.1 implementation in pure JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/FontoXML/fontoxpath&quot; title=&quot;FontoXML/fontoxpath: A minimalistic XPath 3.1 implementation in pure JavaScript&quot;&gt;github.com/FontoXML/fontoxpath&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;xpath&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;XPath 3.1、XQuery 3.1の実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsincss-a-js-in-css-stylesheet-loader&quot;&gt;jsincss | A JS-in-CSS stylesheet loader&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsincss.com/&quot; title=&quot;jsincss | A JS-in-CSS stylesheet loader&quot;&gt;jsincss.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptからテンプレートでCSSを生成でき、イベントによってリアクティブにCSSを変更できるライブラリ。&lt;br&gt;
プラグインで拡張できるようになっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tomhodgins/jsincss&quot; title=&quot;tomhodgins/jsincss: A JS-in-CSS stylesheet loader&quot;&gt;tomhodgins/jsincss: A JS-in-CSS stylesheet loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://responsive.style/theory/what-is-a-jic-stylesheet.html&quot; title=&quot;What is a JIC Stylesheet? - Responsive Style&quot;&gt;What is a JIC Stylesheet? - Responsive Style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babeledit-editor-for-json-translation-files-for-angular-react&quot;&gt;BabelEdit - Editor for JSON translation files for Angular &amp;amp; React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codeandweb.com/babeledit&quot; title=&quot;BabelEdit - Editor for JSON translation files for Angular &amp;amp; React&quot;&gt;www.codeandweb.com/babeledit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSONベースの翻訳ファイルエディタ。&lt;br&gt;
AngularやReactとの連携としたワークフローが紹介されている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 31 Dec 2018 22:38:01 +0900</pubDate>
        <link>https://jser.info/2018/12/31/webdriverio-v5rollup-1.0rust-webassembly-webworker/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/31/webdriverio-v5rollup-1.0rust-webassembly-webworker/</guid>
        
        <category>Selenium</category>
        
        <category>rollup</category>
        
        <category>WebAssembly</category>
        
        <category>Rust</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ</title>
        <description>&lt;p&gt;このレポートは、現在進行形で機能追加や仕様変更が行われているNode.jsコアモジュールとブラウザ向けpolyfillにおける挙動の違い(ギャップ)が広がってきている問題について調べたものです。&lt;/p&gt;

&lt;p&gt;ここでは &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;https://nodejs.org/api/&lt;/a&gt; に掲載されているうち &lt;code&gt;assert&lt;/code&gt;のようにNode.jsにバンドルされているモジュールのことをNode.jsコアモジュールと呼びます。コアモジュールはNode.jsでの利用のみを想定しているため、Node.jsに依存した処理を多く含んでいます。そのため、コアモジュールのコードをコピーしてブラウザなどで動かすことは難しいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack&quot; title=&quot;webpack&quot;&gt;webpack&lt;/a&gt;や&lt;a href=&quot;https://github.com/substack/node-browserify&quot; title=&quot;browserify&quot;&gt;browserify&lt;/a&gt;などのbundlerは、コード中にあるコアモジュールを代替モジュールへとすり替えます。この代替モジュールはブラウザ向けpolyfillライブラリとよび、このpolyfillライブラリはブラウザで動くようにNode.jsコアモジュールと同等また空のダミー実装をしています。&lt;/p&gt;

&lt;h2 id=&quot;node-js-polyfill&quot;&gt;Node.jsコアモジュールのpolyfillライブラリの例&lt;/h2&gt;

&lt;p&gt;webpackとbrowserifyは変換時に、コード中に現れる&lt;code&gt;assert&lt;/code&gt;モジュールを&lt;a href=&quot;https://github.com/browserify/commonjs-assert&quot; title=&quot;commonjs-assert&quot;&gt;commonjs-assert&lt;/a&gt;というpolyfillライブラリに自動的にすり替えます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というコードはwebpackなどでbundleすると、次のように書いたのと同じようにモジュールの差し替えが行われます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;commonjs-assert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;webpackでは、このNode.jsコアモジュールへの差し替えを&lt;a href=&quot;https://webpack.js.org/configuration/node/&quot;&gt;node&lt;/a&gt;オプションによって設定が可能です。&lt;/p&gt;

&lt;h2 id=&quot;polyfill-library&quot;&gt;polyfill library&lt;/h2&gt;

&lt;p&gt;webpackとbrowserifyが利用するpolyfillライブラリは次の場所で管理されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webpack:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot; title=&quot;webpack/node-libs-browser: The node core libs for in browser usage.&quot;&gt;webpack/node-libs-browser: The node core libs for in browser usage.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;browserify:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/browserify-handbook#builtins&quot;&gt;substack/browserify-handbook: how to build modular applications with browserify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/blob/master/lib/builtins.js&quot;&gt;node-browserify/builtins.js at master · substack/node-browserify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どちらも基本的に利用しているpolyfill自体はほとんど同じです。  &lt;/p&gt;

&lt;h2 id=&quot;part-ce8bd090803bc3cf&quot;&gt;機能のギャップ&lt;/h2&gt;

&lt;p&gt;このレポートの本題であるNode.jsコアモジュールとブラウザ向けpolyfillのギャップがあったものをまとめた表です。&lt;br&gt;
ここでいうギャップというのは、次のようなケースを並べています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.jsコアモジュールで追加されたAPIがpolyfillライブラリには存在しない&lt;/li&gt;
&lt;li&gt;Node.jsコアモジュールとpolyfillライブラリで挙動が異なる&lt;/li&gt;
&lt;li&gt;利用されているpolyfillライブラリがDeprecatedになっている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらの調査結果については次のリポジトリで管理しています。最新の状況もこのリポジトリに反映しています。&lt;br&gt;
そのため次の表は古くなっている可能性があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap&quot; title=&quot;azu/node-browser-polyfill-gap: The gap issue between Node.js and Browser polyfills.&quot;&gt;azu/node-browser-polyfill-gap: The gap issue between Node.js and Browser polyfills.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注記: 依存しているpolyfillそのものはアップデートで解決されている場合があります。しかし、bundlerが古いバージョンを使っている場合があります。&lt;/p&gt;

&lt;table border=&quot;1&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Node.js&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Browser polyfill&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Issue&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;assert&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/commonjs-assert&quot;&gt;browserify/commonjs-assert&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Error code and Error message are different&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/13937&quot;&gt;Issue&lt;/a&gt;, &lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65&quot;&gt;Article&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;assert.deepEqual&lt;/code&gt; does&amp;#39;t support &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt; etc...&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/2309&quot;&gt;Issue&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_deepequal_actual_expected_message&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/blog/release/v8.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;require(&amp;quot;assert&amp;quot;).strict&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_strict_mode&quot;&gt;Docs&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/blog/release/v9.9.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_rejects_block_error_message&quot;&gt;&lt;code&gt;assert.rejects()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_doesnotreject_block_error_message&quot;&gt;&lt;code&gt;assert.doesNotReject()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Compatible issue with &lt;code&gt;assert.fail()&lt;/code&gt;, &lt;code&gt;assert.ok()&lt;/code&gt;, and &lt;code&gt;assert.ifError()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No arguments behavior. &lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;buffer&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/feross/buffer&quot;&gt;feross/buffer&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;child_process&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cluster&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;console&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/Raynos/console-browserify&quot;&gt;Raynos/console-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;constants&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/juliangruber/constants-browserify&quot;&gt;juliangruber/constants-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;crypto&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/crypto-browserify/crypto-browserify&quot;&gt;crypto-browserify/crypto-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dgram&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dns&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;domain&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/bevry/domain-browser&quot;&gt;bevry/domain-browser&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;events&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/Gozala/events&quot;&gt;Gozala/events&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_eventnames&quot;&gt;&lt;code&gt;eventNames&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_getmaxlisteners&quot;&gt;&lt;code&gt;getMaxListeners&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_prependlistener_eventname_listener&quot;&gt;&lt;code&gt;prependListener&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_prependoncelistener_eventname_listener&quot;&gt;&lt;code&gt;prependOnceListener&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/17156&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;fs&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;http&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/jhiesey/stream-http&quot;&gt;jhiesey/stream-http&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;https&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/substack/https-browserify&quot;&gt;substack/https-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;module&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;net&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;os&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/CoderPuppy/os-browserify&quot;&gt;CoderPuppy/os-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/os.html#os_os_constants&quot; title=&quot;os.constants&quot;&gt;os.constants&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;path&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify&quot;&gt;browserify/path-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.posix&quot;&gt;path.posix&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify/issues/11&quot; title=&quot;Update to use newer node path code · Issue #11 · substack/path-browserify&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/docs/latest/api/path.html#path_path_parse_path&quot; title=&quot;path.parse(path)&quot;&gt;path.parse(path)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify/issues/2&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.win32&quot;&gt;path.win32&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.format(pathObject)&quot;&gt;path.format(pathObject)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;process&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process&quot;&gt;defunctzombie/node-process&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_channel&quot; title=&quot;process.channel&quot;&gt;process.channel&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_platform&quot; title=&quot;process.platform&quot;&gt;process.platform&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process/issues/55&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_execargv&quot; title=&quot;process.execArgv&quot;&gt;process.execArgv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process/issues/75&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_cpuusage_previousvalue&quot; title=&quot;process.cpuUsage([previousValue])&quot;&gt;process.cpuUsage([previousValue])&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_emitwarning_warning_options&quot; title=&quot;process.emitWarning(warning[, options])&quot;&gt;process.emitWarning(warning[, options])&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;punycode&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;bestiejs/punycode.js&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;querystring&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/mike-spainhower/querystring&quot;&gt;mike-spainhower/querystring&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;readline&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;repl&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;stream&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/stream-browserify&quot;&gt;browserify/stream-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;string_decoder&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/rvagg/archived-string_decoder&quot;&gt;rvagg/string_decoder&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;TODO&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/string_decoder&quot;&gt;Repository&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sys&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util&quot;&gt;defunctzombie/node-util&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;TODO&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;timers&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/timers-browserify&quot;&gt;browserify/timers-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tls&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tty&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/tty-browserify&quot;&gt;browserify/tty-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;url&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-url&quot;&gt;defunctzombie/node-url&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;url.URL&lt;/code&gt;(WHATWG URL)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.0.0/#say-hello-to-the-whatwg-url-parser&quot;&gt;Release&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/url.html#url_the_whatwg_url_api&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;https://github.com/defunctzombie/node-url/issues/33&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;url.format&lt;/code&gt; does&amp;#39;t support  WHATWG URL&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.6.0/&quot;&gt;Release&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_url_options&quot;&gt;Document&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;util&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util&quot;&gt;defunctzombie/node-util&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_callbackify_original&quot; title=&quot;util.callbackify(original)&quot;&gt;util.callbackify(original)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_custom&quot; title=&quot;util.inspect.custom&quot;&gt;util.inspect.custom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_defaultoptions&quot; title=&quot;util.inspect.defaultOptions&quot;&gt;util.inspect.defaultOptions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_promisify_original&quot; title=&quot;util.promisify(original)&quot;&gt;util.promisify(original)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_promisify_custom&quot; title=&quot;util.promisify.custom&quot;&gt;util.promisify.custom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util/issues/15&quot; title=&quot;util.inspect() options maxArrayLength, breakLength&quot;&gt;util.inspect() options maxArrayLength, breakLength&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isdeepstrictequal_val1_val2&quot;&gt;util.isDeepStrictEqual&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isdeepstrictequal_val1_val2&quot;&gt;util.isDeepStrictEqual&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;vm&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/vm-browserify&quot;&gt;browserify/vm-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/vm.html#vm_vm_runincontext_code_contextifiedsandbox_options&quot; title=&quot;vm.isContext(sandbox)&quot;&gt;vm.isContext(sandbox)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;zlib&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/devongovett/browserify-zlib&quot;&gt;devongovett/browserify-zlib&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_zlib_bytesread&quot; title=&quot;zlib.bytesRead#&quot;&gt;zlib.bytesRead&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;part-2c5fae6c6b9bbc28&quot;&gt;実装状況&lt;/h2&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap&quot;&gt;調査リポジトリ&lt;/a&gt;には簡単な機能テストも実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap/tree/master/test&quot;&gt;node-browser-polyfill-gap/test at master · azu/node-browser-polyfill-gap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;次にそれぞれでのテスト結果を示します。&lt;/p&gt;

&lt;h3 id=&quot;node-v11-5-0&quot;&gt;Node v11.5.0&lt;/h3&gt;

&lt;p&gt;24コのテストをすべてパス(これがpolyfillの元なので当然ですが…)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  24 passing (146ms)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;browserify-16-2-3&quot;&gt;Browserify 16.2.3&lt;/h3&gt;

&lt;p&gt;4/24のテストをパス。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  gap-test
    assert
      1) Error#code
      2) assert.deepEqual
      3) assert.strict
      4) assert.rejects
      5) assert.doesNotReject
    events
      6) off
      ✓ eventNames
      ✓ getMaxListeners()
      ✓ prependListener()
      ✓ prependOnceListener()
    os
      7) constants
    path
      8) posix
      9) win32
      10) parse
      11) format
    process
      12) platform
      13) execArgv
      14) cpuUsage()
      15) emitWarning()
    url
      16) URL
    util
      17) inspect.defaultOptions
      18) callbackify()
      19) promisify()
    vm
      20) isContext


  4 passing (293ms)
  20 failing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;webpack-4-82-2&quot;&gt;webpack 4.82.2&lt;/h3&gt;

&lt;p&gt;すべてのテストが失敗しました。&lt;br&gt;
Gapリスト通りのpolyfillが使われています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  gap-test
    assert
      1) Error#code
      2) assert.deepEqual
      3) assert.strict
      4) assert.rejects
      5) assert.doesNotReject
    events
      6) off
      7) eventNames
      8) getMaxListeners()
      9) prependListener()
      10) prependOnceListener()
    os
      11) constants
    path
      12) posix
      13) win32
      14) parse
      15) format
    process
      16) platform
      17) execArgv
      18) cpuUsage()
      19) emitWarning()
    url
      20) URL
    util
      21) inspect.defaultOptions
      22) callbackify()
      23) promisify()
    vm
      24) isContext


  0 passing (134ms)
  24 failing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;node-js-polyfill&quot;&gt;Node.jsコアモジュールのpolyfillの今後&lt;/h2&gt;

&lt;p&gt;このレポートは、webpackやbrowserifyを使っているとあまり意識されないpolyfillライブラリに潜在的な問題があることを調べる目的で書きました。&lt;br&gt;
この問題の難しさは各polyfillライブラリの管理者やバランスが異なるにもかかわらず、polyfillライブラリ群として暗黙的に参照されている点です。&lt;/p&gt;

&lt;p&gt;多くのコアモジュールにおいては、問題が表面化しない可能性もあります。&lt;br&gt;
しかし、&lt;code&gt;assert&lt;/code&gt;、&lt;code&gt;events&lt;/code&gt;、&lt;code&gt;url&lt;/code&gt;はブラウザ向けとしてよく使われているにもかかわらず、差異が分かる程度にはあります。&lt;br&gt;
また、ギャップの問題が解決できた場合にも、バージョンを指定できずに暗黙的なpolyfillライブラリを差し替える仕組みは、互換性の問題が発生するかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65&quot; title=&quot;Node.js Errors — Changes you need to know about – Node.js Collection – Medium&quot;&gt;Node.js Errors — Changes you need to know about – Node.js Collection – Medium&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assert&lt;/code&gt;結果の&lt;code&gt;Error#name&lt;/code&gt;などが異なるため、Node.jsでは通るがブラウザ(polyfill)では失敗するテストができる&lt;/li&gt;
&lt;li&gt;MapやSetなどES2015以降のビルトインオブジェクトに対応していない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&quot;&gt;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Node.jsがブラウザのWHATWG URLをサポートしたが、ブラウザ(polyfill)ではサポートされていない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpackなどにIssueで同様の問題を報告していましたが、このIssueについては特に進捗はありませんでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/node-libs-browser/issues/78&quot;&gt;Incompatibility between Node.js core libs and webpack&amp;#39;s lib · Issue #78 · webpack/node-libs-browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最近(2018年12月21日)になって&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot;&gt;webpack 5 alpha&lt;/a&gt;が公開されました。&lt;br&gt;
webpack 5では自動的にNode.jsコアモジュールのpolyfillを自動的に入れないようにする変更が予定されています。&lt;br&gt;
(2018年12月25日時点ではただの予定であるため、&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot;&gt;該当Issue&lt;/a&gt;においてフィードバックを求めています。)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the early days, webpack&amp;#39;s aim was to allow running most node.js modules in the browser, but the module landscape changed and many module uses are now written mainly for frontend purposes.&lt;br&gt;
-- &lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&quot;&gt;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;変更理由としてこのように書かれているのように、webpackはNode.jsモジュールをブラウザ向けにpack(polyfill)する役割から、フロントエンド向けに書かれたモジュールをbundleする役割へ変わってきています。&lt;/p&gt;

&lt;p&gt;今までは&lt;code&gt;Buffer&lt;/code&gt;など&lt;a href=&quot;https://nodejs.org/api/index.html&quot;&gt;Node.jsのコアAPI&lt;/a&gt;に対応するモジュールを自動的にbundleすることで、Node.js向けに書かれたモジュールをブラウザでも動かせるようにしていました。&lt;br&gt;
一方で、現在ではブラウザ向けに書かれた多くのモジュールがあるため、webpackが自動的にpolyfillを入れる必然性が少なくなってきています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;Buffer&lt;/code&gt;のpolyfillなどはファイルサイズがほどほどに大きいため、パフォーマンス面においては自動的にpolyfillを行わないメリットもあります。(polyfillを行うかどうかは、webpack 4でも&lt;a href=&quot;https://webpack.js.org/configuration/node/&quot;&gt;node&lt;/a&gt;オプションによって設定が可能です)&lt;/p&gt;

&lt;p&gt;少しブラウザとは異なりますが、React Nativeの&lt;a href=&quot;https://facebook.github.io/metro/&quot;&gt;Bundler&lt;/a&gt;もNode.jsコアモジュールのpolyfillを自動的に差し替えない仕組みとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react-native/issues/21405&quot;&gt;Unable to resolve module &lt;code&gt;assert&lt;/code&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;code&gt;events&lt;/code&gt; · Issue #21405 · facebook/react-native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このように、BundlerがNode.jsコアモジュールのpolyfillを暗黙的に入れるという挙動の状況は少し変わりつつあります。&lt;br&gt;
これは&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&quot;&gt;webpack 5の変更予定&lt;/a&gt;にも書かれていたように、Bundlerの目的の1つがNode.js向けに書かれたモジュールをブラウザ向けに変換することでした。&lt;br&gt;
しかし、現在は多くのブラウザ向けに書かれたモジュールがあり、Bundlerはそれを効率的に扱うという目的に変わってきている点も関係しているのかもしれません。&lt;/p&gt;

&lt;h2 id=&quot;part-34bec9340448ad61&quot;&gt;調査を終えて&lt;/h2&gt;

&lt;p&gt;今回の調査で感じたのは、Node.jsのコアモジュールとブラウザ向けのPolyfillといった一種の互換レイヤーに対して関心を持っている人の絶対数が少ないという印象です。Node.jsもコアAPIとしてブラウザと同じ&lt;a href=&quot;https://nodejs.org/api/url.html#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt;を実装するなどいった&lt;a href=&quot;https://github.com/nodejs/node/pull/18281&quot;&gt;ブラウザとの相互運用性&lt;/a&gt;に関する取り組みも行われています。&lt;br&gt;
しかし、このNode.jsコアモジュールのpolyfillという互換レイヤーに関しては暗黙的に扱われていることが多く、その互換性に問題があることについてはあまり言及されていません。&lt;/p&gt;

&lt;p&gt;W3C TAGの&lt;a href=&quot;https://w3ctag.github.io/polyfills/&quot;&gt;Polyfills and the evolution of the Web&lt;/a&gt;というドキュメントでpolyfillがどうあるべきかということについて書かれています。&lt;br&gt;
このNode.jsコアモジュールのpolfyillの問題も&lt;a href=&quot;https://w3ctag.github.io/polyfills/#life-cycle&quot;&gt;Node.jsとpolyfillのライフサイクルの違い&lt;/a&gt;からきている面があると思います。&lt;br&gt;
ブラウザの仕様における壊れたpolyfillはグローバルの挙動を書き換えるため問題となることがありましたが、幸いにもNode.jsのコアモジュールのpolyfillの多くはモジュールやBundlerという仕組みの上に作られたものです。&lt;/p&gt;

&lt;p&gt;しかしながら、このNode.jsコアモジュールのpolfyillも一定数利用者がいるため互換性という問題からは切り離すことが難しいです。(polyfillの1つである&lt;a href=&quot;https://www.npmjs.com/package/events&quot;&gt;events&lt;/a&gt;モジュールは500万/weekダウンロードされています)&lt;br&gt;
この問題に深く関係しているのはwebpackやbrowserifyなどのbundlerであるため、bundlerの動きがそのままNode.jsコアモジュールのpolfyillの今後に影響する可能性は高いと思います。&lt;/p&gt;

&lt;h2 id=&quot;jser-report&quot;&gt;&lt;a href=&quot;https://github.com/jser/report&quot;&gt;jser/report&lt;/a&gt; バックナンバー&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/31/bundler-testing-framework-report/&quot;&gt;JSerレポート #1 Bundlerの未来、テスティングフレームワークの現状 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 25 Dec 2018 12:14:00 +0900</pubDate>
        <link>https://jser.info/2018/12/25/node-browser-libs-gap/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/25/node-browser-libs-gap/</guid>
        
        <category>webpack</category>
        
        <category>browserify</category>
        
        <category>node.js</category>
        
        <category>polyfill</category>
        
        
        <category>レポート</category>
        
      </item>
    
      <item>
        <title>2018-12-25のJS: Chrome 72βとV8 7.2、webpack 5α、スクリーンリーダーの見え方</title>
        <description>&lt;p&gt;JSer.info #415 - Chrome 72βがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&quot; title=&quot;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&quot;&gt;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-72&quot; title=&quot;V8 release v7.2 · V8&quot;&gt;V8 release v7.2 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chrome 72βではV8 7.2が利用されています。&lt;br&gt;
V8 7.2では、async/awaitやSpread Elementsなどのパフォーマンス改善、&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/class-fields#private_class_fields&quot;&gt;Public class fields&lt;/a&gt;、&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/intl-listformat&quot;&gt;&lt;code&gt;Intl.ListFormat&lt;/code&gt;&lt;/a&gt;のサポートなどがおこなれています。&lt;/p&gt;

&lt;p&gt;また、Chrome 72では&lt;a href=&quot;https://github.com/dtapuska/useractivation&quot;&gt;User Activation Query API&lt;/a&gt;のサポート、HPKPの削除、TLS 1.0と1.1を非推奨化などが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/chrome-72-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;webpackの次期メジャーバージョンであるwebpack 5αが公開されフィードバックを募集中となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot; title=&quot;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&quot;&gt;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md&quot; title=&quot;changelog-v5/README.md at master · webpack/changelog-v5&quot;&gt;changelog-v5/README.md at master · webpack/changelog-v5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更の予定として、v4で非推奨となっているものを削除、&lt;code&gt;events&lt;/code&gt;などNode.jsのコアモジュールのpolyfillを自動で入れないように変更などが予定されています。&lt;/p&gt;

&lt;p&gt;この変更を含めたBundlerの動きについて、詳しくは次のレポートに書いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2018/12/25/node-browser-libs-gap/&quot; title=&quot;JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ - JSer.info&quot;&gt;JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、長期的なキャッシュを目的として、&lt;code&gt;chunkIds&lt;/code&gt;のアルゴリズムとして&lt;code&gt;deterministic&lt;/code&gt;が導入され(3-4文字の短いID)、これがデフォルトとなるように変更されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v7-2-v8&quot;&gt;V8 release v7.2 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-72&quot; title=&quot;V8 release v7.2 · V8&quot;&gt;v8.dev/blog/v8-release-72&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v7.2.リリース。&lt;br&gt;
&lt;code&gt;async/await&lt;/code&gt;、Spread Elementsなどのパフォーマンス改善、Publicクラスフィールド、&lt;code&gt;Intl.ListFormat&lt;/code&gt;、&lt;code&gt;export * as foo from&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-72-beta-public-class-fields-user-activation-and-more&quot;&gt;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&quot; title=&quot;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&quot;&gt;blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 72 Betaリリース。&lt;br&gt;
Public class fieldsの実装、 User Activation Query APIのサポート、HPKPの削除、TLS 1.0と1.1を非推奨化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D72&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/chrome-72-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-4-0-0-electron-blog&quot;&gt;Electron 4.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://electronjs.org/blog/electron-4-0&quot; title=&quot;Electron 4.0.0 | Electron Blog&quot;&gt;electronjs.org/blog/electron-4-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 4.0.0リリース。&lt;br&gt;
&lt;code&gt;BrowserWindow&lt;/code&gt;で&lt;code&gt;remote&lt;/code&gt;モジュールを無効化できるように、WebContentsからの&lt;code&gt;remote.require&lt;/code&gt;などをイベント処理できるようになるなど。&lt;br&gt;
macOS 10.9のサポート終了、&lt;code&gt;app.makeSingleInstance()&lt;/code&gt;を&lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt;に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-5-alpha-feedback-issue-8537-webpack-webpack&quot;&gt;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot; title=&quot;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&quot;&gt;github.com/webpack/webpack/issues/8537&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5αがリリースされフィードバックを募集中。&lt;br&gt;
v4で非推奨となっているものを削除、&lt;code&gt;events&lt;/code&gt;などNode.jsのコアモジュールのpolyfillを自動で入れないように変更、chunk idなどの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md&quot; title=&quot;changelog-v5/README.md at master · webpack/changelog-v5&quot;&gt;changelog-v5/README.md at master · webpack/changelog-v5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-0-0-developit-htm&quot;&gt;Release 2.0.0 · developit/htm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/htm/releases/tag/2.0.0&quot; title=&quot;Release 2.0.0 · developit/htm&quot;&gt;github.com/developit/htm/releases/tag/2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXライクなタグ関数を提供するHTM 2.0リリース。&lt;br&gt;
パフォーマンス改善、Babelプラグインの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-4-2-1-bootstrap-blog&quot;&gt;Bootstrap 4.2.1 · Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/12/21/bootstrap-4-2-1/&quot; title=&quot;Bootstrap 4.2.1 · Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2018/12/21/bootstrap-4-2-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 4.2.1リリース。&lt;br&gt;
Spinner loading、Toast、Switchesコンポーネントの追加、いくつかのユーティリティクラスの追加。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-3-4-0-bootstrap-blog&quot;&gt;Bootstrap 3.4.0 · Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/&quot; title=&quot;Bootstrap 3.4.0 · Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 3.4.0リリース(最新版は4.x系)&lt;br&gt;
data属性に関するXSS脆弱性を修正(4.0では修正済み)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://snyk.io/vuln/npm:bootstrap:20160627&quot; title=&quot;Cross-Site Scripting (XSS) | Snyk&quot;&gt;Cross-Site Scripting (XSS) | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/pull/23687&quot; title=&quot;Fix some XSS in v3 by Johann-S · Pull Request #23687 · twbs/bootstrap&quot;&gt;Fix some XSS in v3 by Johann-S · Pull Request #23687 · twbs/bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;three-js-0-3d-qiita&quot;&gt;three.js超入門 第0回 3Dコンピュータグラフィックスの基礎 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/watabo_shi/items/f7c559c3cdbcdd0f2629&quot; title=&quot;three.js超入門 第0回 3Dコンピュータグラフィックスの基礎 - Qiita&quot;&gt;qiita.com/watabo_shi/items/f7c559c3cdbcdd0f2629&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;3D&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;three.js入門の連載記事。&lt;br&gt;
three.jsや3DCGの基本的な用語やレンダリング、インタラクションの実装などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudworker-a-local-cloudflare-worker-runner&quot;&gt;Cloudworker  -  A local Cloudflare Worker Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudworker-a-local-cloudflare-worker-runner/&quot; title=&quot;Cloudworker  -  A local Cloudflare Worker Runner&quot;&gt;blog.cloudflare.com/cloudworker-a-local-cloudflare-worker-runner/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Workers向けのスクリプトをローカルで動かすことを目的としたツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dollarshaveclub/cloudworker&quot; title=&quot;dollarshaveclub/cloudworker: Run Cloudflare Worker scripts locally&quot;&gt;dollarshaveclub/cloudworker: Run Cloudflare Worker scripts locally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;folio-yosuke-kurami-medium&quot;&gt;FOLIOの画像回帰テストの裏側 – Yosuke Kurami – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@Quramy/folio%E3%81%AE%E7%94%BB%E5%83%8F%E5%9B%9E%E5%B8%B0%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E8%A3%8F%E5%81%B4-c848030991bc&quot; title=&quot;FOLIOの画像回帰テストの裏側 – Yosuke Kurami – Medium&quot;&gt;medium.com/@Quramy/folio%E3%81%AE%E7%94%BB%E5%83%8F%E5%9B%9E%E5%B8%B0%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E8%A3%8F%E5%81%B4-c848030991bc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;画像ベースのビジュアルリグレッションテストの運用について。&lt;br&gt;
アニメーションやロードが発生する描画結果の画像キャプチャを安定して取る手法やStorybookとテストの段階的な導入についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i-used-the-web-for-a-day-using-a-screen-reader-smashing-magazine&quot;&gt;I Used The Web For A Day Using A Screen Reader — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/12/voiceover-screen-reader-web-apps/&quot; title=&quot;I Used The Web For A Day Using A Screen Reader — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/12/voiceover-screen-reader-web-apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;スクリーンリーダを実際にどのように使うかについて。&lt;br&gt;
VoiceOverを使っていくつかのサイトを元に、スクリーンリーダの動きやどのようにみえているのかなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript&quot;&gt;現代の JavaScript チュートリアル&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ja.javascript.info/&quot; title=&quot;現代の JavaScript チュートリアル&quot;&gt;ja.javascript.info/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://javascript.info/&quot;&gt;https://javascript.info/&lt;/a&gt; の翻訳サイト。 JavaScript、DOM APIについてのチュートリアルサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;swc-project-swc-super-fast-alternative-for-babel&quot;&gt;swc-project/swc: Super-fast alternative for babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/swc-project/swc&quot; title=&quot;swc-project/swc: Super-fast alternative for babel&quot;&gt;github.com/swc-project/swc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustで書かれたJavaScript Transpiler。&lt;br&gt;
BabelなどのようにECMAScriptバージョンに対応した変換を行う。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-typescript-deep-dive&quot;&gt;Introduction - TypeScript Deep Dive 日本語版&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://typescript-jp.gitbook.io/deep-dive/&quot; title=&quot;Introduction - TypeScript Deep Dive 日本語版&quot;&gt;typescript-jp.gitbook.io/deep-dive/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript Deep Diveの日本語訳&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yohamta/typescript-book-jp&quot; title=&quot;yohamta/typescript-book-jp: TypeScript Bookの日本語訳です。&quot;&gt;yohamta/typescript-book-jp: TypeScript Bookの日本語訳です。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 25 Dec 2018 11:33:59 +0900</pubDate>
        <link>https://jser.info/2018/12/25/chrome-72bv8-7.2webpack-5a/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/25/chrome-72bv8-7.2webpack-5a/</guid>
        
        <category>chrome</category>
        
        <category>V8</category>
        
        <category>webpack</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-18のJS: Firefox 64.0、AVA 1.0、ES Modules対応パッケージ検索</title>
        <description>&lt;p&gt;JSer.info #414 - Firefox 64.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/64.0/releasenotes/&quot;&gt;Firefox 64.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Mozilla/Firefox/Releases/64&quot;&gt;Firefox 64 for developers | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/64/&quot;&gt;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/12/firefox-64-released/&quot;&gt;Firefox 64 Released - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars&quot;&gt;CSS Scrollbars&lt;/a&gt;のサポート、&lt;br&gt;
Fullscreen APIの接頭辞を削除、&lt;code&gt;requestFullscreen()&lt;/code&gt;や&lt;code&gt;exitFullscreen()&lt;/code&gt;が変更完了時にPromiseを返すように。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen&quot;&gt;Element.requestFullscreen() | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/Bugs/Public/show_bug.cgi?id=27674&quot;&gt;27674 – requestFullscreen should return a promise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、macOSでWebVR API(1.1)が有効化され、&lt;code&gt;XMLHttpRequest.getAllResponseHeaders()&lt;/code&gt;がヘッダ名を小文字で返すようになるといった変更も行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2018/xhr-getallresponseheaders-now-returns-header-names-in-lowercase/&quot;&gt;XHR.getAllResponseHeaders() がヘッダー名を小文字で返すようになりました | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;テストフレームワークのAVA 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.1&quot;&gt;Release 1.0 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 7に対応、&lt;code&gt;ava.config.js&lt;/code&gt;のサポート、&lt;code&gt;t.throws&lt;/code&gt;の挙動の変更と&lt;code&gt;t.throwsAsync&lt;/code&gt;の追加などが行わなわれています。&lt;br&gt;
破壊的な変更として&lt;code&gt;test&lt;/code&gt;関数は名前をもつことが必須となり、&lt;code&gt;t.ifError&lt;/code&gt;が削除され代わりに&lt;code&gt;t.falsy&lt;/code&gt;の利用が推奨されています。&lt;/p&gt;

&lt;p&gt;1.0では&lt;code&gt;t.throws&lt;/code&gt;と&lt;code&gt;t.notThrows&lt;/code&gt;はObservableやPromiseなどの非同期をサポートしなくなったため、&lt;code&gt;t.throwsAsync&lt;/code&gt;と&lt;code&gt;t.notThrowsAsync&lt;/code&gt;へ移行するマイグレーションスクリプトも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/novemberborn/c2cdc94020083a1cafe3f41e8276f983&quot;&gt;AVA throwsAsync transform for jscodeshift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-64-0-see-all-new-features-updates-and-fixes&quot;&gt;Firefox 64.0, See All New Features, Updates and Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/64.0/releasenotes/&quot; title=&quot;Firefox 64.0, See All New Features, Updates and Fixes&quot;&gt;www.mozilla.org/en-US/firefox/64.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 64.0リリース。&lt;br&gt;
Fullscreen APIの接頭辞を削除、&lt;code&gt;requestFullscreen()&lt;/code&gt;などがPromiseを返すように、macOSでWebVR APIを有効化。&lt;br&gt;
&lt;code&gt;XMLHttpRequest.getAllResponseHeaders()&lt;/code&gt;がヘッダ名を小文字で返すようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Mozilla/Firefox/Releases/64&quot; title=&quot;Firefox 64 for developers | MDN&quot;&gt;Firefox 64 for developers | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/64/&quot; title=&quot;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/12/firefox-64-released/&quot; title=&quot;Firefox 64 Released - Mozilla Hacks - the Web developer blog&quot;&gt;Firefox 64 Released - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-6-released&quot;&gt;Ember.js - Ember 3.6 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/12/13/ember-3-6-released.html&quot; title=&quot;Ember.js - Ember 3.6 Released&quot;&gt;emberjs.com/blog/2018/12/13/ember-3-6-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.6リリース。&lt;br&gt;
いくつかの制限はあるがES classをサポート。&lt;br&gt;
&lt;code&gt;new EmberObject()&lt;/code&gt;を非推奨化し、&lt;code&gt;EmberObject.create()&lt;/code&gt;の利用を推奨するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-reduxjs-react-redux&quot;&gt;Release v6.0.0 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Redux 6.0.0リリース。&lt;br&gt;
Context APIのサポート、&lt;code&gt;withRef&lt;/code&gt;オプションは&lt;code&gt;forwardRef&lt;/code&gt;オプションに置き換えなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1-0-avajs-ava&quot;&gt;Release 1.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.1&quot; title=&quot;Release 1.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v1.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 1.0リリース。&lt;br&gt;
&lt;code&gt;t.throws&lt;/code&gt;の挙動の変更と&lt;code&gt;t.throwsAsync&lt;/code&gt;の追加。&lt;br&gt;
Babel 7に対応、&lt;code&gt;ava.config.js&lt;/code&gt;のサポートなど。&lt;br&gt;
破壊的な変更として&lt;code&gt;test&lt;/code&gt;は名前をもつことが必須となり、&lt;code&gt;t.ifError&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;billboard-js-1-7-0-release-jae-sung-park-medium&quot;&gt;billboard.js 1.7.0 release!! – Jae Sung Park – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@alberto.park/billboard-js-1-7-0-release-4944a2eb59fe&quot; title=&quot;billboard.js 1.7.0 release!! – Jae Sung Park – Medium&quot;&gt;medium.com/@alberto.park/billboard-js-1-7-0-release-4944a2eb59fe&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3.jsベースのグラフライブラリであるbillboard.js 1.7.0リリース。&lt;br&gt;
Multi Axes、&lt;code&gt;graph&lt;/code&gt; theme、TypeScriptのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-devtools-web-mercari-engineering-blog&quot;&gt;Chrome DevToolsを用いたメルカリWebのパフォーマンス計測 - Mercari Engineering Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.mercari.com/entry/2018/12/12/090156&quot; title=&quot;Chrome DevToolsを用いたメルカリWebのパフォーマンス計測 - Mercari Engineering Blog&quot;&gt;tech.mercari.com/entry/2018/12/12/090156&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの開発者ツールのネットワークパネルやパフォーマンスパネルの読み方について。&lt;br&gt;
スクリーンショットを元にそれぞれの要素が何を表しているかを説明している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-background-fetch-web-google-developers&quot;&gt;Introducing Background Fetch  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/background-fetch&quot; title=&quot;Introducing Background Fetch  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/12/background-fetch&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 71で試験的に導入されるBackground Fetchについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-and-guide-to-the-css-object-model-cssom-css-tricks&quot;&gt;An Introduction and Guide to the CSS Object Model (CSSOM) | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/&quot; title=&quot;An Introduction and Guide to the CSS Object Model (CSSOM) | CSS-Tricks&quot;&gt;css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Object Model (CSSOM) について。&lt;br&gt;
JavaScriptから要素のスタイルの取得、変更、Priorityや&lt;code&gt;@keyframes&lt;/code&gt;などへのアクセス方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;worker_threads-node-js-kakts-log&quot;&gt;worker_threadsを使ったNode.js マルチスレッドプログラミング - kakts-log&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://kakts-tec.hatenablog.com/entry/2018/12/14/005316&quot; title=&quot;worker\_threadsを使ったNode.js マルチスレッドプログラミング - kakts-log&quot;&gt;kakts-tec.hatenablog.com/entry/2018/12/14/005316&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.5.0で試験的にサポートされた&lt;code&gt;worker_threads&lt;/code&gt;モジュールについて。&lt;br&gt;
Node.jsでのWorkerを使ったスレッド処理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-vue-js-qiita&quot;&gt;混沌を極める jQuery のコードをいかにして Vue.js に頼らずに整理したか - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/cesare/items/c00acd7911afcba21224&quot; title=&quot;混沌を極める jQuery のコードをいかにして Vue.js に頼らずに整理したか - Qiita&quot;&gt;qiita.com/cesare/items/c00acd7911afcba21224&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryを使い書かれていたイベント処理が密結合で影響範囲が複雑化していた問題について。&lt;br&gt;
イベントのフローや影響範囲をViewで区切るなど、どのようにリファクタリングを進めたかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html5-conference-2018-youtube&quot;&gt;HTML5 Conference 2018 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLeFZWzLJpZccuopdBjJAuod_tYGvVCIHv&quot; title=&quot;HTML5 Conference 2018 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLeFZWzLJpZccuopdBjJAuod_tYGvVCIHv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML5&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML5 Conference 2018の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;measuring-the-performance-impact-of-chrome-extensions-debugbear&quot;&gt;Measuring the performance impact of Chrome extensions | DebugBear&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.debugbear.com/blog/measuring-the-performance-impact-of-chrome-extensions&quot; title=&quot;Measuring the performance impact of Chrome extensions | DebugBear&quot;&gt;www.debugbear.com/blog/measuring-the-performance-impact-of-chrome-extensions&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome拡張などがパフォーマンス計測に与える影響について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-quicklink-faster-subsequent-page-loads-by-prefetching-in-viewport-links-during-idle-time&quot;&gt;GoogleChromeLabs/quicklink: ⚡️Faster subsequent page-loads by prefetching in-viewport links during idle time&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/quicklink&quot; title=&quot;GoogleChromeLabs/quicklink: ⚡️Faster subsequent page-loads by prefetching in-viewport links during idle time&quot;&gt;github.com/GoogleChromeLabs/quicklink&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Viewportに表示されているリンクをアイドル時にprefetchを行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pika-search-modern-module-esm-packages-on-npm&quot;&gt;Pika | Search modern module esm packages on npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pikapkg.com/&quot; title=&quot;Pika | Search modern module esm packages on npm&quot;&gt;www.pikapkg.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptモジュールに対応したnpmパッケージを検索できるウェブサービス。&lt;br&gt;
&amp;quot;module&amp;quot;フィールドに対応しているパッケージを検索できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pikapkg.com/about/&quot; title=&quot;Pika | What is Pika?&quot;&gt;Pika | What is Pika?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simov-grant-oauth-middleware-for-express-koa-and-hapi&quot;&gt;simov/grant: OAuth Middleware for Express, Koa and Hapi&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simov/grant&quot; title=&quot;simov/grant: OAuth Middleware for Express, Koa and Hapi&quot;&gt;github.com/simov/grant&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;OAuth&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressなどで使えるOAuth middleware。&lt;br&gt;
passportのように色々なサービスに対応している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/simov/grant/issues/77&quot; title=&quot;How does this project compare to Passport? · Issue #77 · simov/grant&quot;&gt;How does this project compare to Passport? · Issue #77 · simov/grant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wenzil-mhysa-dependency-free-stream-utils-for-node-js&quot;&gt;Wenzil/Mhysa: Dependency-free stream utils for Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Wenzil/Mhysa&quot; title=&quot;Wenzil/Mhysa: Dependency-free stream utils for Node.js&quot;&gt;github.com/Wenzil/Mhysa&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js Streamを扱う&lt;br&gt;
TypeScriptで書かれているライブラリ。&lt;code&gt;fromArray&lt;/code&gt;からStreamのラッパーを作成し&lt;code&gt;map&lt;/code&gt;、&lt;code&gt;reduce&lt;/code&gt;、&lt;code&gt;merge&lt;/code&gt;、&lt;code&gt;duplex&lt;/code&gt;などを使いStream処理できるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-arg-simple-argument-parsing&quot;&gt;zeit/arg: Simple argument parsing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeit/arg&quot; title=&quot;zeit/arg: Simple argument parsing&quot;&gt;github.com/zeit/arg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シンプルなコマンドライン引数パーサライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 18 Dec 2018 10:21:34 +0900</pubDate>
        <link>https://jser.info/2018/12/18/firefox-64.0ava-1.0es-modules/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/18/firefox-64.0ava-1.0es-modules/</guid>
        
        <category>firefox</category>
        
        <category>avajs</category>
        
        <category>testing</category>
        
        <category>Modules</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-11のJS: gulp 4が正式リリース、MSEdgeがChromiumベースに移行</title>
        <description>&lt;p&gt;JSer.info #413 - gulp 4.0が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/gulpjs/version-4-now-default-92c6cd4beb45&quot;&gt;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今まではプレリリース扱いだったので&lt;code&gt;npm install gulp@next&lt;/code&gt;でないとインストールされませんでしたが、現在は&lt;code&gt;npm install gulp&lt;/code&gt;で4.0がインストールされるようになっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gulp.series&lt;/code&gt;、&lt;code&gt;gulp.parallel&lt;/code&gt;、&lt;code&gt;gulp.lastRun&lt;/code&gt;、&lt;code&gt;gulp.symlink&lt;/code&gt;などのAPIが追加されています。&lt;br&gt;
sourcemapsのビルトインサポート、gulpfileからのmodule exportをタスクとして扱えるようなっています。&lt;/p&gt;

&lt;p&gt;または破壊的な変更として、&lt;code&gt;gulp&lt;/code&gt;と&lt;code&gt;gulp-cli&lt;/code&gt;の分離、&lt;code&gt;gulp.task&lt;/code&gt;や&lt;code&gt;gulp.watch&lt;/code&gt;の引数の変更などが行われています。&lt;/p&gt;

&lt;p&gt;3.xからの公式なマイグレーションガイドはまだありませんが、すでにいくつか記事が書かれているのでそれらを見てみるとよいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gulpjs/gulp/issues/861&quot;&gt;[Docs] Migration Guide · Issue #861 · gulpjs/gulp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://satoyan419.com/gulp-v4/&quot; title=&quot;gulp v4.0.0がプレリリース！ 移行方法と変更点まとめ - satoyan419.com&quot;&gt;gulp v4.0.0がプレリリース！ 移行方法と変更点まとめ - satoyan419.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.liquidlight.co.uk/blog/article/how-do-i-update-to-gulp-4/&quot; title=&quot;How do I update to Gulp 4? - Liquid Light&quot;&gt;How do I update to Gulp 4? - Liquid Light&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.joezimjs.com/javascript/complete-guide-upgrading-gulp-4/&quot; title=&quot;The Complete-Ish Guide to Upgrading to Gulp 4 | Joe Zim&amp;#39;s JavaScript Corner&quot;&gt;The Complete-Ish Guide to Upgrading to Gulp 4 | Joe Zim&amp;#39;s JavaScript Corner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Microsoftは、&lt;a href=&quot;https://www.microsoft.com/windows/microsoft-edge&quot;&gt;Microsoft Edge&lt;/a&gt;(MSEdge)を&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;ベースへと移行することを発表しました。&lt;br&gt;
現在のMSEdgeはレンダリングエンジンであるEdgeHTMLとJavaScriptエンジンである&lt;a href=&quot;https://github.com/Microsoft/ChakraCore&quot;&gt;ChakraCore&lt;/a&gt;を利用しています。&lt;br&gt;
これをChromiumのレンダリングエンジンである&lt;a href=&quot;https://www.chromium.org/blink&quot;&gt;Blink&lt;/a&gt;とJavaScriptエンジンである&lt;a href=&quot;https://v8.dev/&quot;&gt;V8&lt;/a&gt;へ移行することを表明しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/#5yeIh988gX4mFiRU.97&quot;&gt;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdge&quot; title=&quot;MicrosoftEdge/MSEdge: Microsoft Edge&quot;&gt;MicrosoftEdge/MSEdge: Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers&quot; title=&quot;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&quot;&gt;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MSEdgeというブラウザ自体(ブランド)は維持されますが、中身がChromeと同じ&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;ベースへ移行されます。&lt;br&gt;
この移行によってWindows7, 8を含めたすべてのサポートバージョンのWindowsとmacOSなどの他のプラットフォームをサポートする予定です。&lt;/p&gt;

&lt;p&gt;新しいMSEdgeはChakraCoreを利用しない予定ですが、ChakraCore自体はブラウザ以外でも利用されているためサポートを継続するとの発表もしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/issues/5865&quot;&gt;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-71-web-google-developers&quot;&gt;New in Chrome 71  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/nic71&quot; title=&quot;New in Chrome 71  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/12/nic71&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 71の変更点について。&lt;br&gt;
&lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt;のサポート、&lt;code&gt;text-underline-position&lt;/code&gt;のサポート。&lt;br&gt;
Fetch APIのcredentials-modeのデフォルト値が&lt;code&gt;omit&lt;/code&gt;から&lt;code&gt;same-origin&lt;/code&gt;へと変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-2-0-released-private-instance-methods-babel&quot;&gt;7.2.0 Released: Private Instance Methods · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2018/12/03/7.2.0.html&quot; title=&quot;7.2.0 Released: Private Instance Methods · Babel&quot;&gt;babeljs.io/blog/2018/12/03/7.2.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.2.0リリース。&lt;br&gt;
Private methods proposalのサポート、pipeline operator proposalのパースをサポート、replで変換過程を見られるタイムトラベルをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-71-webkit&quot;&gt;Release Notes for Safari Technology Preview 71 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8517/release-notes-for-safari-technology-preview-71/&quot; title=&quot;Release Notes for Safari Technology Preview 71 | WebKit&quot;&gt;webkit.org/blog/8517/release-notes-for-safari-technology-preview-71/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 71リリース。&lt;br&gt;
&lt;code&gt;supported-color-schemes&lt;/code&gt;のサポート、Intersection Observerの有効化、Web Authenticationの試験的サポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-8-4-0-developit-preact&quot;&gt;Release 8.4.0 · developit/preact&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact/releases/tag/8.4.0&quot; title=&quot;Release 8.4.0 · developit/preact&quot;&gt;github.com/developit/preact/releases/tag/8.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Preact 8.4.0リリース。&lt;br&gt;
TypeScriptの型定義を改善、パフォーマンスの改善など。&lt;br&gt;
また次期メジャーバージョンのPreact Xについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-making-the-web-better-through-more-open-source-collaboration-windows-experience-blogwindows-experience-blog&quot;&gt;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&quot; title=&quot;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&quot;&gt;blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;デスクトップMSEdgeはChromiumベース(Blink+V8)に移行し、すべてのWindowsバージョンやmacOS向けなどへ提供予定。&lt;br&gt;
JavaScriptエンジンのChakraCoreはEdge以外の利用のためサポートを続ける。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdge&quot; title=&quot;MicrosoftEdge/MSEdge: Microsoft Edge&quot;&gt;MicrosoftEdge/MSEdge: Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/issues/5865&quot; title=&quot;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&quot;&gt;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers&quot; title=&quot;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&quot;&gt;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;puppeteer-experimental-puppeteer-firefox-at-master-googlechrome-puppeteer&quot;&gt;puppeteer/experimental/puppeteer-firefox at master · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/tree/master/experimental/puppeteer-firefox&quot; title=&quot;puppeteer/experimental/puppeteer-firefox at master · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/tree/master/experimental/puppeteer-firefox&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PuppeteerのFirefox版&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-developers-blog-flutter-1-0-google-s-portable-ui-toolkit&quot;&gt;Google Developers Blog: Flutter 1.0: Google’s Portable UI Toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.googleblog.com/2018/12/flutter-10-googles-portable-ui-toolkit.html&quot; title=&quot;Google Developers Blog: Flutter 1.0: Google’s Portable UI Toolkit&quot;&gt;developers.googleblog.com/2018/12/flutter-10-googles-portable-ui-toolkit.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flutter&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flutter 1.0リリース。&lt;br&gt;
Hummingbirdというウェブ向けの出力対応予定について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flutter-io/hummingbird-building-flutter-for-the-web-e687c2a023a8&quot; title=&quot;Hummingbird: Building Flutter for the Web – Flutter – Medium&quot;&gt;Hummingbird: Building Flutter for the Web – Flutter – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;processing-js-2008-2018&quot;&gt;Processing.js 2008-2018&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.humphd.org/processing-js-2008/&quot; title=&quot;Processing.js 2008-2018&quot;&gt;blog.humphd.org/processing-js-2008/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;メンテンナンスモードであったProcessing.jsのリポジトリがアーカイブ化された。&lt;br&gt;
またProcessing.jsの歴史について。後継ライブラリとしてはp5jsが開発されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/processing-js/processing-js/&quot; title=&quot;processing-js/processing-js: A port of the Processing visualization language to JavaScript.&quot;&gt;processing-js/processing-js: A port of the Processing visualization language to JavaScript.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-88-0-facebook-flow&quot;&gt;Release v0.88.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.88.0&quot; title=&quot;Release v0.88.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.88.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.88.0リリース。&lt;br&gt;
&lt;code&gt;Function&lt;/code&gt;と&lt;code&gt;Object&lt;/code&gt;を&lt;code&gt;any&lt;/code&gt;のaliasとして扱うように。&lt;br&gt;
&lt;code&gt;flow start --lazy-mode watchman&lt;/code&gt;の追加、&lt;code&gt;flow config check&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-10-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.10.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/12/eslint-v5.10.0-released&quot; title=&quot;ESLint v5.10.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/12/eslint-v5.10.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.10.0リリース。&lt;br&gt;
&lt;code&gt;padding-line-between-statements&lt;/code&gt;にオプションの追加、&lt;br&gt;
JSDoc関係のルールである&lt;code&gt;require-jsdoc&lt;/code&gt;と&lt;code&gt;valid-jsdoc&lt;/code&gt;が非推奨になるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/64a09c3bea4c06d84a2e&quot; title=&quot;ESLint v5.10.0 - Qiita&quot;&gt;ESLint v5.10.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;version-4-0-now-default-gulpjs-medium&quot;&gt;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/gulpjs/version-4-now-default-92c6cd4beb45&quot; title=&quot;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&quot;&gt;medium.com/gulpjs/version-4-now-default-92c6cd4beb45&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;gulp 4.0が正式リリース。&lt;br&gt;
&lt;code&gt;gulp.series&lt;/code&gt;と&lt;code&gt;gulp.parallel&lt;/code&gt;を追加。&lt;br&gt;
sourcemapsのビルトインサポート、gulpfileからのexportをタスクとして扱えるように、&lt;code&gt;gulp&lt;/code&gt;と&lt;code&gt;gulp-cli&lt;/code&gt;の分離など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gulpjs/gulp/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · gulpjs/gulp&quot;&gt;Release v4.0.0 · gulpjs/gulp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-dely-engineering-blog&quot;&gt;jQueryへの依存を外す方法 - dely engineering blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.dely.jp/entry/2018/12/08/160000&quot; title=&quot;jQueryへの依存を外す方法 - dely engineering blog&quot;&gt;tech.dely.jp/entry/2018/12/08/160000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryの依存を外すまでのフローについて。&lt;br&gt;
polyfill.io の利用、CoffeeScriptからTypeScriptへの移行。&lt;br&gt;
jQueryをVanillaJS + polyfillで動くように書き直し、BackstopJSでビジュアルリグレッションテストする方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-everywhere-with-environment-variables-node-js-collection-medium&quot;&gt;Node.js Everywhere with Environment Variables! – Node.js Collection – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/making-your-node-js-work-everywhere-with-environment-variables-2da8cdf6e786&quot; title=&quot;Node.js Everywhere with Environment Variables! – Node.js Collection – Medium&quot;&gt;medium.com/the-node-js-collection/making-your-node-js-work-everywhere-with-environment-variables-2da8cdf6e786&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでの環境変数の使い方、&lt;code&gt;.env&lt;/code&gt;を使った環境変数の定義と読み込み方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yahoo-japan-fido2-yahoo-japan-tech-blog&quot;&gt;Yahoo! JAPANでの生体認証の取り組み（FIDO2サーバーの仕組みについて） - Yahoo! JAPAN Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.yahoo.co.jp/advent-calendar-2018/webauthn/&quot; title=&quot;Yahoo! JAPANでの生体認証の取り組み（FIDO2サーバーの仕組みについて） - Yahoo! JAPAN Tech Blog&quot;&gt;techblog.yahoo.co.jp/advent-calendar-2018/webauthn/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAuthn（Web Authentication）を使った生体認証でのログインフローについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-yahoo-japan-tech-blog&quot;&gt;ヤフー株式会社におけるWebフロントエンドの技術選定 - Yahoo! JAPAN Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.yahoo.co.jp/advent-calendar-2018/yahoo-frontend/&quot; title=&quot;ヤフー株式会社におけるWebフロントエンドの技術選定 - Yahoo! JAPAN Tech Blog&quot;&gt;techblog.yahoo.co.jp/advent-calendar-2018/yahoo-frontend/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ヤフー株式会社における各サービスごとのフロントエンドに利用しているフレームワークやライブラリなどについて。&lt;br&gt;
それぞれの技術を選定した理由などについてもまとめられている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-calendar-data-s-h-aver-strategies&quot;&gt;Performance Calendar » data-s(h)aver strategies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2018/data-shaver-strategies/&quot; title=&quot;Performance Calendar » data-s(h)aver strategies&quot;&gt;calendar.perfplanet.com/2018/data-shaver-strategies/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのデータセーバーが有効かを判定し、それに対してどのようなコンテンツを返すかについて。&lt;br&gt;
コンテンツ数の削減、自動再生の防止、解像度の低い画像の配信、データセーバーが有効になっていることの通知などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;compare-har-files&quot;&gt;Compare HAR files&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://compare.sitespeed.io/&quot; title=&quot;Compare HAR files&quot;&gt;compare.sitespeed.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HARファイル同士を比較できるウェブサービス。&lt;br&gt;
それぞれのリソースロードのタイムライン比較、動画、ファイルサイズのDiffなどを出してくれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2018/sharing-comparing-har-files/&quot; title=&quot;Performance Calendar » Sharing is caring: What’s new with comparing HAR files?&quot;&gt;Performance Calendar » Sharing is caring: What’s new with comparing HAR files?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rowanmanning-proclaim-a-simple-assertion-library-for-server-and-client-side-javascript&quot;&gt;rowanmanning/proclaim: A simple assertion library for server and client side JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rowanmanning/proclaim&quot; title=&quot;rowanmanning/proclaim: A simple assertion library for server and client side JavaScript.&quot;&gt;github.com/rowanmanning/proclaim&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;古いブラウザや古いNode.jsでも動作するように書かれたassert系ライブラリ。&lt;br&gt;
chaiのようにassertの拡張メソッドも実装されている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 11 Dec 2018 09:22:12 +0900</pubDate>
        <link>https://jser.info/2018/12/11/gulp-4msedgechromium/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/11/gulp-4msedgechromium/</guid>
        
        <category>gulpjs</category>
        
        <category>MSEdge</category>
        
        <category>Chromium</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-04のJS: TypeScript 3.2、React 16.xロードマップ、ESLintのビルトインJSDocサポート終了の予定</title>
        <description>&lt;p&gt;JSer.info #412 - TypeScript 3.2が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&quot;&gt;Announcing TypeScript 3.2 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/79557e00cfe6d3c612cd&quot;&gt;TypeScript 3.2.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポート。&lt;/p&gt;

&lt;p&gt;また&lt;code&gt;allowJs&lt;/code&gt;の際に&lt;code&gt;Object.defineProperty&lt;/code&gt;で宣言されたプロパティのチェック(&lt;code&gt;checkJs&lt;/code&gt;)に対応しています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;では既存の&lt;code&gt;tsconfig.json&lt;/code&gt;を継承して拡張できますが、今まで&lt;code&gt;node_modules/&lt;/code&gt;にある場合はそのままパスを書く必要がありました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../node_modules/@my-team/tsconfig-base/tsconfig.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./**/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Override&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;certain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;project-by-project&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;basis.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;strictBindCallApply&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;プロジェクトなどで&lt;code&gt;tsconfig.json&lt;/code&gt;をnpmで配布して共有する場合には、少し不便でした。(たとえば、node&lt;em&gt;modulesがflatかどうかでパスが変わる可能性もあります)&lt;br&gt;
そのため、3.2から&lt;code&gt;extends&lt;/code&gt;が`node&lt;/em&gt;modules/`以下を探索するようになったため、次のように書けます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@my-team/tsconfig-base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./**/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Override&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;certain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;project-by-project&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;basis.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;strictBindCallApply&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/11/27/react-16-roadmap.html&quot;&gt;React 16.x Roadmap – React Blog&lt;/a&gt;ではReact 16.xのロードマップについて書かれています。&lt;/p&gt;

&lt;p&gt;それぞれのminorアップデートや実装される予定の機能について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React 16.6 with Suspense for Code Splitting (already shipped)&lt;/li&gt;
&lt;li&gt;16.7?: A minor 16.x release with React Hooks (~Q1 2019)&lt;/li&gt;
&lt;li&gt;16.8?: A minor 16.x release with Concurrent Mode (~Q2 2019)&lt;/li&gt;
&lt;li&gt;16.9?: A minor 16.x release with Suspense for Data Fetching (~mid 2019)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また合わせてReact DOMのリファクタリングやSuspenseのSSR対応なども勧めていく予定とのことです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/issues/13525&quot;&gt;React Fire: Modernizing React DOM · Issue #13525 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&lt;/a&gt;という記事では、現在ESLintにビルトインで入っているJSDocサポートの今後について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/09f9dd4ab2569cd4cd68&quot;&gt;ESLint の組み込み JSDoc サポートが終了します - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLintコアで行っていたJSDoc周りのパーサやルールなどの開発を終了するという内容です。&lt;/p&gt;

&lt;p&gt;これによりESLint本体から&lt;code&gt;require-jsdoc&lt;/code&gt;などのJSDoc関係のサポートが終了され、次のメジャーアップデートで削除される可能性があります。&lt;br&gt;
そのためコミュニティで開発されている&lt;a href=&quot;https://github.com/gajus/eslint-plugin-jsdoc&quot;&gt;eslint-plugin-jsdoc&lt;/a&gt;というプラグインへの移行が推奨されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gajus/eslint-plugin-jsdoc/issues/107&quot;&gt;Incorporating now deprecated ESLint jsdoc features · Issue #107 · gajus/eslint-plugin-jsdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLintが利用していたJSDocパーサである&lt;a href=&quot;https://github.com/eslint/doctrine&quot;&gt;doctrine&lt;/a&gt;も開発が終了され、現在アーカイブ化されています。&lt;br&gt;
これはもともと&lt;a href=&quot;https://github.com/Constellation&quot;&gt;@constellation&lt;/a&gt;さんが開発し、ESLint/JS Foundationにtransferしたパッケージです。&lt;br&gt;
JS Foundationでの開発を引き継ぐには手続きが煩雑になることから、Forkによる引き継ぎが推奨されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev-opera-what-s-new-in-chromium-70-and-opera-57&quot;&gt;Dev.Opera — What’s new in Chromium 70 and Opera 57&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-57/&quot; title=&quot;Dev.Opera — What’s new in Chromium 70 and Opera 57&quot;&gt;dev.opera.com/blog/opera-57/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Opera 57 (based on Chromium 70)リリース。&lt;br&gt;
Feature Detectionの混乱をさけるために&lt;code&gt;ontouch*&lt;/code&gt;イベントの属性はデスクトップにおいてデフォルトで無効化、&lt;code&gt;postMessage&lt;/code&gt;に&lt;code&gt;targetOrigin&lt;/code&gt;オプションの追加。&lt;br&gt;
Web Components V1を非推奨化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-2-typescript&quot;&gt;Announcing TypeScript 3.2 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&quot; title=&quot;Announcing TypeScript 3.2 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.2リリース。&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポート。&lt;br&gt;
&lt;code&gt;tsconfig.json&lt;/code&gt;の&lt;code&gt;extends&lt;/code&gt;がnode_modulesのパスに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-loading-and-preloading-components-in-react-16-6&quot;&gt;Lazy loading (and preloading) components in React 16.6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d&quot; title=&quot;Lazy loading (and preloading) components in React 16.6&quot;&gt;medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;React.lazy()&lt;/code&gt;を使ったコンポーネントの遅延ロードについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;end-of-life-for-built-in-jsdoc-support-in-eslint-eslint-pluggable-javascript-linter&quot;&gt;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot; title=&quot;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/11/jsdoc-end-of-life&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLintのJSDocサポートが4.0.0でビルトインではなくなることについて。&lt;br&gt;
これにあわせてJSDocパーサのDoctrineも更新されなくなる。&lt;br&gt;
既存のJSDoc関係のルールは別途プラグインとして切り出される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eslint/doctrine&quot; title=&quot;eslint/doctrine: JSDoc parser&quot;&gt;eslint/doctrine: JSDoc parser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-16-x-roadmap-react-blog&quot;&gt;React 16.x Roadmap – React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/11/27/react-16-roadmap.html&quot; title=&quot;React 16.x Roadmap – React Blog&quot;&gt;reactjs.org/blog/2018/11/27/react-16-roadmap.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.xのロードマップについて。&lt;br&gt;
16.7でReact Hooks、16.8でConcurrent Mode、16.9でSuspense for Data Fetchingをリリース予定。&lt;br&gt;
また、React DOMのモダン化やSSRに対するSuspenseを検討中。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-72-web-google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 72)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/11/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 72)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/11/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 72の開発者ツールの変更点。&lt;br&gt;
Performance metricsのビジュアライズ、&amp;quot;Copy JS path&amp;quot;(セレクタを指定するコードのコピー)を追加、Lighthouseのアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-frontend-testing-with-cypress-io-framework-snipcart&quot;&gt;Modern Frontend Testing with Cypress.io Framework - Snipcart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snipcart.com/blog/frontend-testing-cypress&quot; title=&quot;Modern Frontend Testing with Cypress.io Framework - Snipcart&quot;&gt;snipcart.com/blog/frontend-testing-cypress&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypressを使ったE2Eテストについてのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-workers-vs-service-workers-vs-worklets&quot;&gt;Web workers vs Service workers vs Worklets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsofco.de/web-workers-vs-service-workers-vs-worklets/&quot; title=&quot;Web workers vs Service workers vs Worklets&quot;&gt;bitsofco.de/web-workers-vs-service-workers-vs-worklets/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Worker、Service Worker、Workletsの役割や動作についてを簡単に紹介している記事。&lt;br&gt;
ブラウザのメインスレッドとは異なるスレッドでコードを実行するWorkerについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2018-11-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2018-11 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2018/12/01/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates @ 2018-11 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2018/12/01/ecmascript-proposal-updates&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年11月のTC39ミーティングで変更があったECMAScript Proposalのステータスまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-s-new-in-create-react-app-2-logrocket&quot;&gt;What’s new in Create React App 2 – LogRocket&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/whats-new-in-create-react-app-2-fe8f4f448c75&quot; title=&quot;What’s new in Create React App 2 – LogRocket&quot;&gt;blog.logrocket.com/whats-new-in-create-react-app-2-fe8f4f448c75&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Create React App 2.0での変更点について。&lt;br&gt;
TypeScript対応、Service Workerがオプトインに変更、Babel macrosの対応、&lt;code&gt;src/setupProxy.js&lt;/code&gt;の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-does-react-tell-a-class-from-a-function-overreacted&quot;&gt;How Does React Tell a Class from a Function? | Overreacted&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://overreacted.io/how-does-react-tell-a-class-from-a-function/&quot; title=&quot;How Does React Tell a Class from a Function? | Overreacted&quot;&gt;overreacted.io/how-does-react-tell-a-class-from-a-function/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactが関数とクラスで書かれたコンポーネントを呼び分ける必要があるため、内部でどのように判別しているかについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-and-network-performance-css-wizardry-css-architecture-web-performance-optimisation-and-more-by-harry-roberts&quot;&gt;CSS and Network Performance – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://csswizardry.com/2018/11/css-and-network-performance/&quot; title=&quot;CSS and Network Performance – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&quot;&gt;csswizardry.com/2018/11/css-and-network-performance/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのロードとパフォーマンスについての記事。&lt;br&gt;
非同期ロード、&lt;code&gt;@import&lt;/code&gt;を避ける、CSSとJSのロード順の問題などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scrimba&quot;&gt;Scrimba&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scrimba.com/&quot; title=&quot;Scrimba&quot;&gt;scrimba.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular、React、VueやTypeScriptなどのスクリーンキャストを公開しているサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-second-edition-of-refactoring&quot;&gt;The Second Edition of &amp;quot;Refactoring&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://martinfowler.com/articles/refactoring-2nd-ed.html&quot; title=&quot;The Second Edition of \&amp;quot;Refactoring\&amp;quot;&quot;&gt;martinfowler.com/articles/refactoring-2nd-ed.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Refactoring 第二版がリリースされた&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 Dec 2018 09:33:24 +0900</pubDate>
        <link>https://jser.info/2018/12/04/typescript-3.2react-16.xeslintjsdoc/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/04/typescript-3.2react-16.xeslintjsdoc/</guid>
        
        <category>typescript</category>
        
        <category>react</category>
        
        <category>eslint</category>
        
        <category>JSDoc</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
