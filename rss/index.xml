<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 01 Jan 2019 11:55:12 +0900</pubDate>
    <lastBuildDate>Tue, 01 Jan 2019 11:55:12 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>2019-01-01のJS: WebdriverIO v5、Rollup 1.0、Rust + WebAssembly + WebWorker</title>
        <description>&lt;p&gt;JSer.info #416 - WebDriverを扱うテストフレームワークであるWebdriverIO v5がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&quot;&gt;WebdriverIO v5 Released · WebdriverIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot;&gt;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;パッケージ構造やAPI周りの変更が行われています。&lt;/p&gt;

&lt;p&gt;基本的なパッケージが&lt;a href=&quot;https://www.npmjs.com/org/@wdio/&quot;&gt;&lt;code&gt;@wdio&lt;/code&gt;&lt;/a&gt;に移動され、同梱されていたCLIが&lt;code&gt;@wdio/cli&lt;/code&gt;に移動しています。&lt;/p&gt;

&lt;p&gt;API周りではコマンドがselectorを受け取らないようになり、メソッドチェーンではなくasync/awaitベースに変更されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// v4ではセレクタを渡せた&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#elem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// v5からはelementを取得してから操作する&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#elem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;その他にも&lt;code&gt;isVisible&lt;/code&gt;が&lt;code&gt;isDisplayed&lt;/code&gt;にリネームされるなど多くのコマンドのリネームが行われています。&lt;br&gt;
詳しくは&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot;&gt;CHANGELOG.md&lt;/a&gt;に掲載されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;モジュールBundlerであるRollup v1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rollup/rollup/releases/tag/v1.0.0&quot;&gt;Release v1.0.0 · rollup/rollup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更として、非推奨となっていたオプションやオプションのリネームが含まれています。&lt;br&gt;
&lt;code&gt;bundle.generate&lt;/code&gt;と&lt;code&gt;bundle.write&lt;/code&gt;の返す値のフォーマットの変更、&lt;code&gt;acorn@6&lt;/code&gt;へアップデートなどが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rollup/rollup/pull/2293&quot;&gt;1.0 changes by guybedford · Pull Request #2293 · rollup/rollup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/3846masa/items/92d24e16ebb5151b08ba&quot;&gt;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&lt;/a&gt;という記事では、Zip展開アプリの例にしたRustとWebAssemblyを使った開発について書かれています。&lt;/p&gt;

&lt;p&gt;Rustや&lt;a href=&quot;https://rustwasm.github.io/wasm-pack/book/&quot;&gt;wasm-pack&lt;/a&gt;を使った開発環境の設定から、&lt;a href=&quot;https://rustwasm.github.io/wasm-bindgen/&quot;&gt;wasm-bindgen&lt;/a&gt;でRust&lt;br&gt;
とJavaScriptのバインディングの作成、webpackでの読み込みとブラウザでの実行についてまで書かれています。&lt;br&gt;
また、メインスレッドで重たい処理を行うのを避けるために、WebAssemblyの処理をWebWorker上で行い、そのメッセージのやり取りに&lt;a href=&quot;https://github.com/GoogleChromeLabs/comlink&quot;&gt;Comlink&lt;/a&gt;を使う方法などについても紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverio-v5-released-webdriverio&quot;&gt;WebdriverIO v5 Released · WebdriverIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&quot; title=&quot;WebdriverIO v5 Released · WebdriverIO&quot;&gt;webdriver.io/blog/2018/12/19/webdriverio-v5-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIO v5リリース。&lt;br&gt;
&lt;code&gt;wdio&lt;/code&gt; CLIは&lt;code&gt;@wdio/cli&lt;/code&gt;に移動、コマンドがselectorを受け取らないように、メソッドチェーンではなくasync/awaitベースに変更。&lt;br&gt;
その他にもコマンドのリネームなどの破壊的な変更を多く含む&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webdriverio/webdriverio/blob/master/CHANGELOG.md#v500-2018-12-20&quot; title=&quot;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&quot;&gt;webdriverio/CHANGELOG.md at master · webdriverio/webdriverio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-rollup-rollup&quot;&gt;Release v1.0.0 · rollup/rollup&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rollup/rollup/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · rollup/rollup&quot;&gt;github.com/rollup/rollup/releases/tag/v1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rollup 1.0.0リリース。&lt;br&gt;
破壊的な変更としてオプションのリネーム、&lt;code&gt;bundle.generate&lt;/code&gt;の返す値のフォーマットの変更、&lt;code&gt;acorn@6&lt;/code&gt;へアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;graphql-rest-api-hub-web&quot;&gt;「GraphQL」徹底入門 ─ RESTとの比較、API・フロント双方の実装から学ぶ - エンジニアHub｜若手Webエンジニアのキャリアを考える！&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://employment.en-japan.com/engineerhub/entry/2018/12/26/103000&quot; title=&quot;「GraphQL」徹底入門 ─ RESTとの比較、API・フロント双方の実装から学ぶ - エンジニアHub｜若手Webエンジニアのキャリアを考える！&quot;&gt;employment.en-japan.com/engineerhub/entry/2018/12/26/103000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLの入門記事。&lt;br&gt;
GraphQLの利点、欠点、スキーマ/クエリの書き方、VariableやFragmentの使い方について。&lt;br&gt;
またRelayの拡張や実際にGraphQLを使った実装例についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-throttling-and-debouncing-bits-and-pieces&quot;&gt;Understanding Throttling and Debouncing – Bits and Pieces&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.bitsrc.io/understanding-throttling-and-debouncing-973131c1ba07&quot; title=&quot;Understanding Throttling and Debouncing – Bits and Pieces&quot;&gt;blog.bitsrc.io/understanding-throttling-and-debouncing-973131c1ba07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ThrottlingとDebouncingについてそれぞれを実装しながら挙動を理解していく記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comlink-rust-webassembly-qiita&quot;&gt;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/3846masa/items/92d24e16ebb5151b08ba&quot; title=&quot;Comlink + Rust で言語とスレッドの垣根を越えた WebAssembly 開発 - Qiita&quot;&gt;qiita.com/3846masa/items/92d24e16ebb5151b08ba&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustを使ったWebAssemblyライブラリの開発について。&lt;br&gt;
Rustを使ったwasmのバインディングの作成、webpackを使ったロード方法について。&lt;br&gt;
また、処理をメインスレッド外のWebWorkerで行いComlinkでのデータのやり取りする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-7-qiita&quot;&gt;Babel 7 の主な変更点まとめ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/soarflat/items/21b8955f992bf7d38581&quot; title=&quot;Babel 7 の主な変更点まとめ - Qiita&quot;&gt;qiita.com/soarflat/items/21b8955f992bf7d38581&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7の主な変更点やマイグレーション方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-native-codezine&quot;&gt;基礎からはじめるReact Native入門連載一覧：CodeZine（コードジン）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codezine.jp/article/corner/772&quot; title=&quot;基礎からはじめるReact Native入門連載一覧：CodeZine（コードジン）&quot;&gt;codezine.jp/article/corner/772&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Nativeについての連載記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-modules-in-node-js-the-new-plan&quot;&gt;ECMAScript modules in Node.js: the new plan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://2ality.com/2018/12/nodejs-esm-phases.html&quot; title=&quot;ECMAScript modules in Node.js: the new plan&quot;&gt;2ality.com/2018/12/nodejs-esm-phases.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにおけるES Modulesの扱いについてのまとめ記事。&lt;br&gt;
&lt;code&gt;.mjs&lt;/code&gt;のサポートについてやCommonJSとの相互運用性の問題、今後どのような方針が予定されているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-web-infoq&quot;&gt;JavaScriptとWeb開発に関するInfoQトレンドレポート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.infoq.com/jp/articles/javascript-web-development-trends&quot; title=&quot;JavaScriptとWeb開発に関するInfoQトレンドレポート&quot;&gt;www.infoq.com/jp/articles/javascript-web-development-trends&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;InfoQのJavaScriptに関するトレンドレポート。&lt;br&gt;
イノベーター、アーリーアダプター、アーリーマジョリティ、レイトマジョリティ、ラガードに分けて関連するライブラリ/フレームワーク/ツールについて紹介している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-angular&quot;&gt;TypeScriptで実現する型安全な多言語対応（Angularを例に） | 株式会社カブク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kabuku.co.jp/software_engineer/typescript-angular-i18n/&quot; title=&quot;TypeScriptで実現する型安全な多言語対応（Angularを例に） | 株式会社カブク&quot;&gt;www.kabuku.co.jp/software_engineer/typescript-angular-i18n/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;翻訳ファイルをTypeScriptのコードとして表現することで型安全な翻訳定義を作成する方法について。&lt;br&gt;
翻訳ファイルをコードにするメリットとデメリットについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;takefumi-yoshii-react-hooks-ogiri-advent-calendar-of-2018-this-is-a-showreel-using-a-reaction-hook&quot;&gt;takefumi-yoshii/react-hooks-ogiri: Advent calendar of 2018. This is a showreel using a reaction hook.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/takefumi-yoshii/react-hooks-ogiri&quot; title=&quot;takefumi-yoshii/react-hooks-ogiri: Advent calendar of 2018. This is a showreel using a reaction hook.&quot;&gt;github.com/takefumi-yoshii/react-hooks-ogiri&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Hooks APIを使ったUIコンポーネントのサンプル実装集&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/advent-calendar/2018/react-hooks-ogiri&quot; title=&quot;React Hooks 大喜利 Advent Calendar 2018 - Qiita&quot;&gt;React Hooks 大喜利 Advent Calendar 2018 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fontoxml-fontoxpath-a-minimalistic-xpath-3-1-implementation-in-pure-javascript&quot;&gt;FontoXML/fontoxpath: A minimalistic XPath 3.1 implementation in pure JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/FontoXML/fontoxpath&quot; title=&quot;FontoXML/fontoxpath: A minimalistic XPath 3.1 implementation in pure JavaScript&quot;&gt;github.com/FontoXML/fontoxpath&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;xpath&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;XPath 3.1、XQuery 3.1の実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsincss-a-js-in-css-stylesheet-loader&quot;&gt;jsincss | A JS-in-CSS stylesheet loader&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsincss.com/&quot; title=&quot;jsincss | A JS-in-CSS stylesheet loader&quot;&gt;jsincss.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptからテンプレートでCSSを生成でき、イベントによってリアクティブにCSSを変更できるライブラリ。&lt;br&gt;
プラグインで拡張できるようになっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tomhodgins/jsincss&quot; title=&quot;tomhodgins/jsincss: A JS-in-CSS stylesheet loader&quot;&gt;tomhodgins/jsincss: A JS-in-CSS stylesheet loader&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://responsive.style/theory/what-is-a-jic-stylesheet.html&quot; title=&quot;What is a JIC Stylesheet? - Responsive Style&quot;&gt;What is a JIC Stylesheet? - Responsive Style&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babeledit-editor-for-json-translation-files-for-angular-react&quot;&gt;BabelEdit - Editor for JSON translation files for Angular &amp;amp; React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codeandweb.com/babeledit&quot; title=&quot;BabelEdit - Editor for JSON translation files for Angular &amp;amp; React&quot;&gt;www.codeandweb.com/babeledit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSONベースの翻訳ファイルエディタ。&lt;br&gt;
AngularやReactとの連携としたワークフローが紹介されている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 31 Dec 2018 22:38:01 +0900</pubDate>
        <link>https://jser.info/2018/12/31/webdriverio-v5rollup-1.0rust-webassembly-webworker/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/31/webdriverio-v5rollup-1.0rust-webassembly-webworker/</guid>
        
        <category>Selenium</category>
        
        <category>rollup</category>
        
        <category>WebAssembly</category>
        
        <category>Rust</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ</title>
        <description>&lt;p&gt;このレポートは、現在進行形で機能追加や仕様変更が行われているNode.jsコアモジュールとブラウザ向けpolyfillにおける挙動の違い(ギャップ)が広がってきている問題について調べたものです。&lt;/p&gt;

&lt;p&gt;ここでは &lt;a href=&quot;https://nodejs.org/api/&quot;&gt;https://nodejs.org/api/&lt;/a&gt; に掲載されているうち &lt;code&gt;assert&lt;/code&gt;のようにNode.jsにバンドルされているモジュールのことをNode.jsコアモジュールと呼びます。コアモジュールはNode.jsでの利用のみを想定しているため、Node.jsに依存した処理を多く含んでいます。そのため、コアモジュールのコードをコピーしてブラウザなどで動かすことは難しいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack&quot; title=&quot;webpack&quot;&gt;webpack&lt;/a&gt;や&lt;a href=&quot;https://github.com/substack/node-browserify&quot; title=&quot;browserify&quot;&gt;browserify&lt;/a&gt;などのbundlerは、コード中にあるコアモジュールを代替モジュールへとすり替えます。この代替モジュールはブラウザ向けpolyfillライブラリとよび、このpolyfillライブラリはブラウザで動くようにNode.jsコアモジュールと同等また空のダミー実装をしています。&lt;/p&gt;

&lt;h2 id=&quot;node-js-polyfill&quot;&gt;Node.jsコアモジュールのpolyfillライブラリの例&lt;/h2&gt;

&lt;p&gt;webpackとbrowserifyは変換時に、コード中に現れる&lt;code&gt;assert&lt;/code&gt;モジュールを&lt;a href=&quot;https://github.com/browserify/commonjs-assert&quot; title=&quot;commonjs-assert&quot;&gt;commonjs-assert&lt;/a&gt;というpolyfillライブラリに自動的にすり替えます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;というコードはwebpackなどでbundleすると、次のように書いたのと同じようにモジュールの差し替えが行われます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;commonjs-assert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;webpackでは、このNode.jsコアモジュールへの差し替えを&lt;a href=&quot;https://webpack.js.org/configuration/node/&quot;&gt;node&lt;/a&gt;オプションによって設定が可能です。&lt;/p&gt;

&lt;h2 id=&quot;polyfill-library&quot;&gt;polyfill library&lt;/h2&gt;

&lt;p&gt;webpackとbrowserifyが利用するpolyfillライブラリは次の場所で管理されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;webpack:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot; title=&quot;webpack/node-libs-browser: The node core libs for in browser usage.&quot;&gt;webpack/node-libs-browser: The node core libs for in browser usage.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;browserify:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/browserify-handbook#builtins&quot;&gt;substack/browserify-handbook: how to build modular applications with browserify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/blob/master/lib/builtins.js&quot;&gt;node-browserify/builtins.js at master · substack/node-browserify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どちらも基本的に利用しているpolyfill自体はほとんど同じです。  &lt;/p&gt;

&lt;h2 id=&quot;part-ce8bd090803bc3cf&quot;&gt;機能のギャップ&lt;/h2&gt;

&lt;p&gt;このレポートの本題であるNode.jsコアモジュールとブラウザ向けpolyfillのギャップがあったものをまとめた表です。&lt;br&gt;
ここでいうギャップというのは、次のようなケースを並べています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node.jsコアモジュールで追加されたAPIがpolyfillライブラリには存在しない&lt;/li&gt;
&lt;li&gt;Node.jsコアモジュールとpolyfillライブラリで挙動が異なる&lt;/li&gt;
&lt;li&gt;利用されているpolyfillライブラリがDeprecatedになっている&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらの調査結果については次のリポジトリで管理しています。最新の状況もこのリポジトリに反映しています。&lt;br&gt;
そのため次の表は古くなっている可能性があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap&quot; title=&quot;azu/node-browser-polyfill-gap: The gap issue between Node.js and Browser polyfills.&quot;&gt;azu/node-browser-polyfill-gap: The gap issue between Node.js and Browser polyfills.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;注記: 依存しているpolyfillそのものはアップデートで解決されている場合があります。しかし、bundlerが古いバージョンを使っている場合があります。&lt;/p&gt;

&lt;table border=&quot;1&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Node.js&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Browser polyfill&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Issue&lt;/th&gt;
&lt;th&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;assert&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/commonjs-assert&quot;&gt;browserify/commonjs-assert&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Error code and Error message are different&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/13937&quot;&gt;Issue&lt;/a&gt;, &lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65&quot;&gt;Article&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;assert.deepEqual&lt;/code&gt; does&amp;#39;t support &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt; etc...&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/2309&quot;&gt;Issue&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_deepequal_actual_expected_message&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/blog/release/v8.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;require(&amp;quot;assert&amp;quot;).strict&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_strict_mode&quot;&gt;Docs&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/en/blog/release/v9.9.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_rejects_block_error_message&quot;&gt;&lt;code&gt;assert.rejects()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/assert.html#assert_assert_doesnotreject_block_error_message&quot;&gt;&lt;code&gt;assert.doesNotReject()&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Compatible issue with &lt;code&gt;assert.fail()&lt;/code&gt;, &lt;code&gt;assert.ok()&lt;/code&gt;, and &lt;code&gt;assert.ifError()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;No arguments behavior. &lt;a href=&quot;https://nodejs.org/en/blog/release/v10.0.0/&quot;&gt;Release&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;buffer&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/feross/buffer&quot;&gt;feross/buffer&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;child_process&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cluster&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;console&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/Raynos/console-browserify&quot;&gt;Raynos/console-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;constants&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/juliangruber/constants-browserify&quot;&gt;juliangruber/constants-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;crypto&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/crypto-browserify/crypto-browserify&quot;&gt;crypto-browserify/crypto-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dgram&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dns&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;domain&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/bevry/domain-browser&quot;&gt;bevry/domain-browser&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;events&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/Gozala/events&quot;&gt;Gozala/events&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_eventnames&quot;&gt;&lt;code&gt;eventNames&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_getmaxlisteners&quot;&gt;&lt;code&gt;getMaxListeners&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_prependlistener_eventname_listener&quot;&gt;&lt;code&gt;prependListener&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/events.html#events_emitter_prependoncelistener_eventname_listener&quot;&gt;&lt;code&gt;prependOnceListener&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/Gozala/events/pull/32&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/17156&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;fs&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;http&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/jhiesey/stream-http&quot;&gt;jhiesey/stream-http&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;https&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/substack/https-browserify&quot;&gt;substack/https-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;module&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;net&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;os&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/CoderPuppy/os-browserify&quot;&gt;CoderPuppy/os-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/os.html#os_os_constants&quot; title=&quot;os.constants&quot;&gt;os.constants&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;path&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify&quot;&gt;browserify/path-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.posix&quot;&gt;path.posix&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify/issues/11&quot; title=&quot;Update to use newer node path code · Issue #11 · substack/path-browserify&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/docs/latest/api/path.html#path_path_parse_path&quot; title=&quot;path.parse(path)&quot;&gt;path.parse(path)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/browserify/path-browserify/issues/2&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.win32&quot;&gt;path.win32&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/path.html#path_path_posix&quot; title=&quot;path.format(pathObject)&quot;&gt;path.format(pathObject)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;process&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process&quot;&gt;defunctzombie/node-process&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_channel&quot; title=&quot;process.channel&quot;&gt;process.channel&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_platform&quot; title=&quot;process.platform&quot;&gt;process.platform&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process/issues/55&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_execargv&quot; title=&quot;process.execArgv&quot;&gt;process.execArgv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process/issues/75&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_cpuusage_previousvalue&quot; title=&quot;process.cpuUsage([previousValue])&quot;&gt;process.cpuUsage([previousValue])&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/process.html#process_process_emitwarning_warning_options&quot; title=&quot;process.emitWarning(warning[, options])&quot;&gt;process.emitWarning(warning[, options])&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;punycode&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;bestiejs/punycode.js&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;querystring&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/mike-spainhower/querystring&quot;&gt;mike-spainhower/querystring&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;readline&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;repl&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;stream&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/stream-browserify&quot;&gt;browserify/stream-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;string_decoder&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/rvagg/archived-string_decoder&quot;&gt;rvagg/string_decoder&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;TODO&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/nodejs/string_decoder&quot;&gt;Repository&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;sys&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util&quot;&gt;defunctzombie/node-util&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;TODO&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;timers&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/timers-browserify&quot;&gt;browserify/timers-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tls&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tty&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/tty-browserify&quot;&gt;browserify/tty-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;url&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-url&quot;&gt;defunctzombie/node-url&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;url.URL&lt;/code&gt;(WHATWG URL)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.0.0/#say-hello-to-the-whatwg-url-parser&quot;&gt;Release&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/url.html#url_the_whatwg_url_api&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;https://github.com/defunctzombie/node-url/issues/33&quot;&gt;Issue&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;code&gt;url.format&lt;/code&gt; does&amp;#39;t support  WHATWG URL&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.6.0/&quot;&gt;Release&lt;/a&gt;, &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_url_options&quot;&gt;Document&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;util&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util&quot;&gt;defunctzombie/node-util&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_callbackify_original&quot; title=&quot;util.callbackify(original)&quot;&gt;util.callbackify(original)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_custom&quot; title=&quot;util.inspect.custom&quot;&gt;util.inspect.custom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_inspect_defaultoptions&quot; title=&quot;util.inspect.defaultOptions&quot;&gt;util.inspect.defaultOptions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_promisify_original&quot; title=&quot;util.promisify(original)&quot;&gt;util.promisify(original)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_promisify_custom&quot; title=&quot;util.promisify.custom&quot;&gt;util.promisify.custom&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-util/issues/15&quot; title=&quot;util.inspect() options maxArrayLength, breakLength&quot;&gt;util.inspect() options maxArrayLength, breakLength&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isdeepstrictequal_val1_val2&quot;&gt;util.isDeepStrictEqual&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/util.html#util_util_isdeepstrictequal_val1_val2&quot;&gt;util.isDeepStrictEqual&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;vm&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/browserify/vm-browserify&quot;&gt;browserify/vm-browserify&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/vm.html#vm_vm_runincontext_code_contextifiedsandbox_options&quot; title=&quot;vm.isContext(sandbox)&quot;&gt;vm.isContext(sandbox)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;zlib&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://github.com/devongovett/browserify-zlib&quot;&gt;devongovett/browserify-zlib&lt;/a&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_zlib_bytesread&quot; title=&quot;zlib.bytesRead#&quot;&gt;zlib.bytesRead&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;part-2c5fae6c6b9bbc28&quot;&gt;実装状況&lt;/h2&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap&quot;&gt;調査リポジトリ&lt;/a&gt;には簡単な機能テストも実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node-browser-polyfill-gap/tree/master/test&quot;&gt;node-browser-polyfill-gap/test at master · azu/node-browser-polyfill-gap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;次にそれぞれでのテスト結果を示します。&lt;/p&gt;

&lt;h3 id=&quot;node-v11-5-0&quot;&gt;Node v11.5.0&lt;/h3&gt;

&lt;p&gt;24コのテストをすべてパス(これがpolyfillの元なので当然ですが…)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  24 passing (146ms)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;browserify-16-2-3&quot;&gt;Browserify 16.2.3&lt;/h3&gt;

&lt;p&gt;4/24のテストをパス。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  gap-test
    assert
      1) Error#code
      2) assert.deepEqual
      3) assert.strict
      4) assert.rejects
      5) assert.doesNotReject
    events
      6) off
      ✓ eventNames
      ✓ getMaxListeners()
      ✓ prependListener()
      ✓ prependOnceListener()
    os
      7) constants
    path
      8) posix
      9) win32
      10) parse
      11) format
    process
      12) platform
      13) execArgv
      14) cpuUsage()
      15) emitWarning()
    url
      16) URL
    util
      17) inspect.defaultOptions
      18) callbackify()
      19) promisify()
    vm
      20) isContext


  4 passing (293ms)
  20 failing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;webpack-4-82-2&quot;&gt;webpack 4.82.2&lt;/h3&gt;

&lt;p&gt;すべてのテストが失敗しました。&lt;br&gt;
Gapリスト通りのpolyfillが使われています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;  gap-test
    assert
      1) Error#code
      2) assert.deepEqual
      3) assert.strict
      4) assert.rejects
      5) assert.doesNotReject
    events
      6) off
      7) eventNames
      8) getMaxListeners()
      9) prependListener()
      10) prependOnceListener()
    os
      11) constants
    path
      12) posix
      13) win32
      14) parse
      15) format
    process
      16) platform
      17) execArgv
      18) cpuUsage()
      19) emitWarning()
    url
      20) URL
    util
      21) inspect.defaultOptions
      22) callbackify()
      23) promisify()
    vm
      24) isContext


  0 passing (134ms)
  24 failing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;node-js-polyfill&quot;&gt;Node.jsコアモジュールのpolyfillの今後&lt;/h2&gt;

&lt;p&gt;このレポートは、webpackやbrowserifyを使っているとあまり意識されないpolyfillライブラリに潜在的な問題があることを調べる目的で書きました。&lt;br&gt;
この問題の難しさは各polyfillライブラリの管理者やバランスが異なるにもかかわらず、polyfillライブラリ群として暗黙的に参照されている点です。&lt;/p&gt;

&lt;p&gt;多くのコアモジュールにおいては、問題が表面化しない可能性もあります。&lt;br&gt;
しかし、&lt;code&gt;assert&lt;/code&gt;、&lt;code&gt;events&lt;/code&gt;、&lt;code&gt;url&lt;/code&gt;はブラウザ向けとしてよく使われているにもかかわらず、差異が分かる程度にはあります。&lt;br&gt;
また、ギャップの問題が解決できた場合にも、バージョンを指定できずに暗黙的なpolyfillライブラリを差し替える仕組みは、互換性の問題が発生するかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/node-js-errors-changes-you-need-to-know-about-dc8c82417f65&quot; title=&quot;Node.js Errors — Changes you need to know about – Node.js Collection – Medium&quot;&gt;Node.js Errors — Changes you need to know about – Node.js Collection – Medium&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assert&lt;/code&gt;結果の&lt;code&gt;Error#name&lt;/code&gt;などが異なるため、Node.jsでは通るがブラウザ(polyfill)では失敗するテストができる&lt;/li&gt;
&lt;li&gt;MapやSetなどES2015以降のビルトインオブジェクトに対応していない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&quot;&gt;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Node.jsがブラウザのWHATWG URLをサポートしたが、ブラウザ(polyfill)ではサポートされていない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpackなどにIssueで同様の問題を報告していましたが、このIssueについては特に進捗はありませんでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/node-libs-browser/issues/78&quot;&gt;Incompatibility between Node.js core libs and webpack&amp;#39;s lib · Issue #78 · webpack/node-libs-browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最近(2018年12月21日)になって&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot;&gt;webpack 5 alpha&lt;/a&gt;が公開されました。&lt;br&gt;
webpack 5では自動的にNode.jsコアモジュールのpolyfillを自動的に入れないようにする変更が予定されています。&lt;br&gt;
(2018年12月25日時点ではただの予定であるため、&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot;&gt;該当Issue&lt;/a&gt;においてフィードバックを求めています。)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In the early days, webpack&amp;#39;s aim was to allow running most node.js modules in the browser, but the module landscape changed and many module uses are now written mainly for frontend purposes.&lt;br&gt;
-- &lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&quot;&gt;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;変更理由としてこのように書かれているのように、webpackはNode.jsモジュールをブラウザ向けにpack(polyfill)する役割から、フロントエンド向けに書かれたモジュールをbundleする役割へ変わってきています。&lt;/p&gt;

&lt;p&gt;今までは&lt;code&gt;Buffer&lt;/code&gt;など&lt;a href=&quot;https://nodejs.org/api/index.html&quot;&gt;Node.jsのコアAPI&lt;/a&gt;に対応するモジュールを自動的にbundleすることで、Node.js向けに書かれたモジュールをブラウザでも動かせるようにしていました。&lt;br&gt;
一方で、現在ではブラウザ向けに書かれた多くのモジュールがあるため、webpackが自動的にpolyfillを入れる必然性が少なくなってきています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;Buffer&lt;/code&gt;のpolyfillなどはファイルサイズがほどほどに大きいため、パフォーマンス面においては自動的にpolyfillを行わないメリットもあります。(polyfillを行うかどうかは、webpack 4でも&lt;a href=&quot;https://webpack.js.org/configuration/node/&quot;&gt;node&lt;/a&gt;オプションによって設定が可能です)&lt;/p&gt;

&lt;p&gt;少しブラウザとは異なりますが、React Nativeの&lt;a href=&quot;https://facebook.github.io/metro/&quot;&gt;Bundler&lt;/a&gt;もNode.jsコアモジュールのpolyfillを自動的に差し替えない仕組みとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react-native/issues/21405&quot;&gt;Unable to resolve module &lt;code&gt;assert&lt;/code&gt; &lt;code&gt;buffer&lt;/code&gt; &lt;code&gt;events&lt;/code&gt; · Issue #21405 · facebook/react-native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このように、BundlerがNode.jsコアモジュールのpolyfillを暗黙的に入れるという挙動の状況は少し変わりつつあります。&lt;br&gt;
これは&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md#automatic-nodejs-polyfills-removed&quot;&gt;webpack 5の変更予定&lt;/a&gt;にも書かれていたように、Bundlerの目的の1つがNode.js向けに書かれたモジュールをブラウザ向けに変換することでした。&lt;br&gt;
しかし、現在は多くのブラウザ向けに書かれたモジュールがあり、Bundlerはそれを効率的に扱うという目的に変わってきている点も関係しているのかもしれません。&lt;/p&gt;

&lt;h2 id=&quot;part-34bec9340448ad61&quot;&gt;調査を終えて&lt;/h2&gt;

&lt;p&gt;今回の調査で感じたのは、Node.jsのコアモジュールとブラウザ向けのPolyfillといった一種の互換レイヤーに対して関心を持っている人の絶対数が少ないという印象です。Node.jsもコアAPIとしてブラウザと同じ&lt;a href=&quot;https://nodejs.org/api/url.html#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt;を実装するなどいった&lt;a href=&quot;https://github.com/nodejs/node/pull/18281&quot;&gt;ブラウザとの相互運用性&lt;/a&gt;に関する取り組みも行われています。&lt;br&gt;
しかし、このNode.jsコアモジュールのpolyfillという互換レイヤーに関しては暗黙的に扱われていることが多く、その互換性に問題があることについてはあまり言及されていません。&lt;/p&gt;

&lt;p&gt;W3C TAGの&lt;a href=&quot;https://w3ctag.github.io/polyfills/&quot;&gt;Polyfills and the evolution of the Web&lt;/a&gt;というドキュメントでpolyfillがどうあるべきかということについて書かれています。&lt;br&gt;
このNode.jsコアモジュールのpolfyillの問題も&lt;a href=&quot;https://w3ctag.github.io/polyfills/#life-cycle&quot;&gt;Node.jsとpolyfillのライフサイクルの違い&lt;/a&gt;からきている面があると思います。&lt;br&gt;
ブラウザの仕様における壊れたpolyfillはグローバルの挙動を書き換えるため問題となることがありましたが、幸いにもNode.jsのコアモジュールのpolyfillの多くはモジュールやBundlerという仕組みの上に作られたものです。&lt;/p&gt;

&lt;p&gt;しかしながら、このNode.jsコアモジュールのpolfyillも一定数利用者がいるため互換性という問題からは切り離すことが難しいです。(polyfillの1つである&lt;a href=&quot;https://www.npmjs.com/package/events&quot;&gt;events&lt;/a&gt;モジュールは500万/weekダウンロードされています)&lt;br&gt;
この問題に深く関係しているのはwebpackやbrowserifyなどのbundlerであるため、bundlerの動きがそのままNode.jsコアモジュールのpolfyillの今後に影響する可能性は高いと思います。&lt;/p&gt;

&lt;h2 id=&quot;jser-report&quot;&gt;&lt;a href=&quot;https://github.com/jser/report&quot;&gt;jser/report&lt;/a&gt; バックナンバー&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/31/bundler-testing-framework-report/&quot;&gt;JSerレポート #1 Bundlerの未来、テスティングフレームワークの現状 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 25 Dec 2018 12:14:00 +0900</pubDate>
        <link>https://jser.info/2018/12/25/node-browser-libs-gap/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/25/node-browser-libs-gap/</guid>
        
        <category>webpack</category>
        
        <category>browserify</category>
        
        <category>node.js</category>
        
        <category>polyfill</category>
        
        
        <category>レポート</category>
        
      </item>
    
      <item>
        <title>2018-12-25のJS: Chrome 72βとV8 7.2、webpack 5α、スクリーンリーダーの見え方</title>
        <description>&lt;p&gt;JSer.info #415 - Chrome 72βがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&quot; title=&quot;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&quot;&gt;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-72&quot; title=&quot;V8 release v7.2 · V8&quot;&gt;V8 release v7.2 · V8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chrome 72βではV8 7.2が利用されています。&lt;br&gt;
V8 7.2では、async/awaitやSpread Elementsなどのパフォーマンス改善、&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/class-fields#private_class_fields&quot;&gt;Public class fields&lt;/a&gt;、&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/intl-listformat&quot;&gt;&lt;code&gt;Intl.ListFormat&lt;/code&gt;&lt;/a&gt;のサポートなどがおこなれています。&lt;/p&gt;

&lt;p&gt;また、Chrome 72では&lt;a href=&quot;https://github.com/dtapuska/useractivation&quot;&gt;User Activation Query API&lt;/a&gt;のサポート、HPKPの削除、TLS 1.0と1.1を非推奨化などが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/chrome-72-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;webpackの次期メジャーバージョンであるwebpack 5αが公開されフィードバックを募集中となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot; title=&quot;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&quot;&gt;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md&quot; title=&quot;changelog-v5/README.md at master · webpack/changelog-v5&quot;&gt;changelog-v5/README.md at master · webpack/changelog-v5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更の予定として、v4で非推奨となっているものを削除、&lt;code&gt;events&lt;/code&gt;などNode.jsのコアモジュールのpolyfillを自動で入れないように変更などが予定されています。&lt;/p&gt;

&lt;p&gt;この変更を含めたBundlerの動きについて、詳しくは次のレポートに書いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2018/12/25/node-browser-libs-gap/&quot; title=&quot;JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ - JSer.info&quot;&gt;JSerレポート #2: Node.jsコアモジュールとBundler(webpackなど)によるpolyfillのギャップ - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、長期的なキャッシュを目的として、&lt;code&gt;chunkIds&lt;/code&gt;のアルゴリズムとして&lt;code&gt;deterministic&lt;/code&gt;が導入され(3-4文字の短いID)、これがデフォルトとなるように変更されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v7-2-v8&quot;&gt;V8 release v7.2 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-72&quot; title=&quot;V8 release v7.2 · V8&quot;&gt;v8.dev/blog/v8-release-72&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v7.2.リリース。&lt;br&gt;
&lt;code&gt;async/await&lt;/code&gt;、Spread Elementsなどのパフォーマンス改善、Publicクラスフィールド、&lt;code&gt;Intl.ListFormat&lt;/code&gt;、&lt;code&gt;export * as foo from&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-72-beta-public-class-fields-user-activation-and-more&quot;&gt;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&quot; title=&quot;Chromium Blog: Chrome 72 Beta: Public class fields, user activation and more&quot;&gt;blog.chromium.org/2018/12/chrome-72-beta-public-class-fields-user.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 72 Betaリリース。&lt;br&gt;
Public class fieldsの実装、 User Activation Query APIのサポート、HPKPの削除、TLS 1.0と1.1を非推奨化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D72&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/chrome-72-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 72  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-4-0-0-electron-blog&quot;&gt;Electron 4.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://electronjs.org/blog/electron-4-0&quot; title=&quot;Electron 4.0.0 | Electron Blog&quot;&gt;electronjs.org/blog/electron-4-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 4.0.0リリース。&lt;br&gt;
&lt;code&gt;BrowserWindow&lt;/code&gt;で&lt;code&gt;remote&lt;/code&gt;モジュールを無効化できるように、WebContentsからの&lt;code&gt;remote.require&lt;/code&gt;などをイベント処理できるようになるなど。&lt;br&gt;
macOS 10.9のサポート終了、&lt;code&gt;app.makeSingleInstance()&lt;/code&gt;を&lt;code&gt;app.requestSingleInstanceLock()&lt;/code&gt;に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-5-alpha-feedback-issue-8537-webpack-webpack&quot;&gt;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/8537&quot; title=&quot;webpack 5 alpha feedback · Issue #8537 · webpack/webpack&quot;&gt;github.com/webpack/webpack/issues/8537&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5αがリリースされフィードバックを募集中。&lt;br&gt;
v4で非推奨となっているものを削除、&lt;code&gt;events&lt;/code&gt;などNode.jsのコアモジュールのpolyfillを自動で入れないように変更、chunk idなどの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/changelog-v5/blob/master/README.md&quot; title=&quot;changelog-v5/README.md at master · webpack/changelog-v5&quot;&gt;changelog-v5/README.md at master · webpack/changelog-v5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-0-0-developit-htm&quot;&gt;Release 2.0.0 · developit/htm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/htm/releases/tag/2.0.0&quot; title=&quot;Release 2.0.0 · developit/htm&quot;&gt;github.com/developit/htm/releases/tag/2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXライクなタグ関数を提供するHTM 2.0リリース。&lt;br&gt;
パフォーマンス改善、Babelプラグインの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-4-2-1-bootstrap-blog&quot;&gt;Bootstrap 4.2.1 · Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/12/21/bootstrap-4-2-1/&quot; title=&quot;Bootstrap 4.2.1 · Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2018/12/21/bootstrap-4-2-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 4.2.1リリース。&lt;br&gt;
Spinner loading、Toast、Switchesコンポーネントの追加、いくつかのユーティリティクラスの追加。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-3-4-0-bootstrap-blog&quot;&gt;Bootstrap 3.4.0 · Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/&quot; title=&quot;Bootstrap 3.4.0 · Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 3.4.0リリース(最新版は4.x系)&lt;br&gt;
data属性に関するXSS脆弱性を修正(4.0では修正済み)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://snyk.io/vuln/npm:bootstrap:20160627&quot; title=&quot;Cross-Site Scripting (XSS) | Snyk&quot;&gt;Cross-Site Scripting (XSS) | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap/pull/23687&quot; title=&quot;Fix some XSS in v3 by Johann-S · Pull Request #23687 · twbs/bootstrap&quot;&gt;Fix some XSS in v3 by Johann-S · Pull Request #23687 · twbs/bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;three-js-0-3d-qiita&quot;&gt;three.js超入門 第0回 3Dコンピュータグラフィックスの基礎 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/watabo_shi/items/f7c559c3cdbcdd0f2629&quot; title=&quot;three.js超入門 第0回 3Dコンピュータグラフィックスの基礎 - Qiita&quot;&gt;qiita.com/watabo_shi/items/f7c559c3cdbcdd0f2629&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;3D&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;three.js入門の連載記事。&lt;br&gt;
three.jsや3DCGの基本的な用語やレンダリング、インタラクションの実装などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudworker-a-local-cloudflare-worker-runner&quot;&gt;Cloudworker  -  A local Cloudflare Worker Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudworker-a-local-cloudflare-worker-runner/&quot; title=&quot;Cloudworker  -  A local Cloudflare Worker Runner&quot;&gt;blog.cloudflare.com/cloudworker-a-local-cloudflare-worker-runner/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare Workers向けのスクリプトをローカルで動かすことを目的としたツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dollarshaveclub/cloudworker&quot; title=&quot;dollarshaveclub/cloudworker: Run Cloudflare Worker scripts locally&quot;&gt;dollarshaveclub/cloudworker: Run Cloudflare Worker scripts locally&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;folio-yosuke-kurami-medium&quot;&gt;FOLIOの画像回帰テストの裏側 – Yosuke Kurami – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@Quramy/folio%E3%81%AE%E7%94%BB%E5%83%8F%E5%9B%9E%E5%B8%B0%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E8%A3%8F%E5%81%B4-c848030991bc&quot; title=&quot;FOLIOの画像回帰テストの裏側 – Yosuke Kurami – Medium&quot;&gt;medium.com/@Quramy/folio%E3%81%AE%E7%94%BB%E5%83%8F%E5%9B%9E%E5%B8%B0%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E8%A3%8F%E5%81%B4-c848030991bc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;画像ベースのビジュアルリグレッションテストの運用について。&lt;br&gt;
アニメーションやロードが発生する描画結果の画像キャプチャを安定して取る手法やStorybookとテストの段階的な導入についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i-used-the-web-for-a-day-using-a-screen-reader-smashing-magazine&quot;&gt;I Used The Web For A Day Using A Screen Reader — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/12/voiceover-screen-reader-web-apps/&quot; title=&quot;I Used The Web For A Day Using A Screen Reader — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/12/voiceover-screen-reader-web-apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;スクリーンリーダを実際にどのように使うかについて。&lt;br&gt;
VoiceOverを使っていくつかのサイトを元に、スクリーンリーダの動きやどのようにみえているのかなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript&quot;&gt;現代の JavaScript チュートリアル&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ja.javascript.info/&quot; title=&quot;現代の JavaScript チュートリアル&quot;&gt;ja.javascript.info/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://javascript.info/&quot;&gt;https://javascript.info/&lt;/a&gt; の翻訳サイト。 JavaScript、DOM APIについてのチュートリアルサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;swc-project-swc-super-fast-alternative-for-babel&quot;&gt;swc-project/swc: Super-fast alternative for babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/swc-project/swc&quot; title=&quot;swc-project/swc: Super-fast alternative for babel&quot;&gt;github.com/swc-project/swc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rustで書かれたJavaScript Transpiler。&lt;br&gt;
BabelなどのようにECMAScriptバージョンに対応した変換を行う。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-typescript-deep-dive&quot;&gt;Introduction - TypeScript Deep Dive 日本語版&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://typescript-jp.gitbook.io/deep-dive/&quot; title=&quot;Introduction - TypeScript Deep Dive 日本語版&quot;&gt;typescript-jp.gitbook.io/deep-dive/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript Deep Diveの日本語訳&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yohamta/typescript-book-jp&quot; title=&quot;yohamta/typescript-book-jp: TypeScript Bookの日本語訳です。&quot;&gt;yohamta/typescript-book-jp: TypeScript Bookの日本語訳です。&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 25 Dec 2018 11:33:59 +0900</pubDate>
        <link>https://jser.info/2018/12/25/chrome-72bv8-7.2webpack-5a/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/25/chrome-72bv8-7.2webpack-5a/</guid>
        
        <category>chrome</category>
        
        <category>V8</category>
        
        <category>webpack</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-18のJS: Firefox 64.0、AVA 1.0、ES Modules対応パッケージ検索</title>
        <description>&lt;p&gt;JSer.info #414 - Firefox 64.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/64.0/releasenotes/&quot;&gt;Firefox 64.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Mozilla/Firefox/Releases/64&quot;&gt;Firefox 64 for developers | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/64/&quot;&gt;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/12/firefox-64-released/&quot;&gt;Firefox 64 Released - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scrollbars&quot;&gt;CSS Scrollbars&lt;/a&gt;のサポート、&lt;br&gt;
Fullscreen APIの接頭辞を削除、&lt;code&gt;requestFullscreen()&lt;/code&gt;や&lt;code&gt;exitFullscreen()&lt;/code&gt;が変更完了時にPromiseを返すように。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen&quot;&gt;Element.requestFullscreen() | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/Bugs/Public/show_bug.cgi?id=27674&quot;&gt;27674 – requestFullscreen should return a promise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、macOSでWebVR API(1.1)が有効化され、&lt;code&gt;XMLHttpRequest.getAllResponseHeaders()&lt;/code&gt;がヘッダ名を小文字で返すようになるといった変更も行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2018/xhr-getallresponseheaders-now-returns-header-names-in-lowercase/&quot;&gt;XHR.getAllResponseHeaders() がヘッダー名を小文字で返すようになりました | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;テストフレームワークのAVA 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.1&quot;&gt;Release 1.0 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 7に対応、&lt;code&gt;ava.config.js&lt;/code&gt;のサポート、&lt;code&gt;t.throws&lt;/code&gt;の挙動の変更と&lt;code&gt;t.throwsAsync&lt;/code&gt;の追加などが行わなわれています。&lt;br&gt;
破壊的な変更として&lt;code&gt;test&lt;/code&gt;関数は名前をもつことが必須となり、&lt;code&gt;t.ifError&lt;/code&gt;が削除され代わりに&lt;code&gt;t.falsy&lt;/code&gt;の利用が推奨されています。&lt;/p&gt;

&lt;p&gt;1.0では&lt;code&gt;t.throws&lt;/code&gt;と&lt;code&gt;t.notThrows&lt;/code&gt;はObservableやPromiseなどの非同期をサポートしなくなったため、&lt;code&gt;t.throwsAsync&lt;/code&gt;と&lt;code&gt;t.notThrowsAsync&lt;/code&gt;へ移行するマイグレーションスクリプトも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/novemberborn/c2cdc94020083a1cafe3f41e8276f983&quot;&gt;AVA throwsAsync transform for jscodeshift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-64-0-see-all-new-features-updates-and-fixes&quot;&gt;Firefox 64.0, See All New Features, Updates and Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/64.0/releasenotes/&quot; title=&quot;Firefox 64.0, See All New Features, Updates and Fixes&quot;&gt;www.mozilla.org/en-US/firefox/64.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 64.0リリース。&lt;br&gt;
Fullscreen APIの接頭辞を削除、&lt;code&gt;requestFullscreen()&lt;/code&gt;などがPromiseを返すように、macOSでWebVR APIを有効化。&lt;br&gt;
&lt;code&gt;XMLHttpRequest.getAllResponseHeaders()&lt;/code&gt;がヘッダ名を小文字で返すようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Mozilla/Firefox/Releases/64&quot; title=&quot;Firefox 64 for developers | MDN&quot;&gt;Firefox 64 for developers | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/64/&quot; title=&quot;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 64 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/12/firefox-64-released/&quot; title=&quot;Firefox 64 Released - Mozilla Hacks - the Web developer blog&quot;&gt;Firefox 64 Released - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-6-released&quot;&gt;Ember.js - Ember 3.6 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/12/13/ember-3-6-released.html&quot; title=&quot;Ember.js - Ember 3.6 Released&quot;&gt;emberjs.com/blog/2018/12/13/ember-3-6-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Ember&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.6リリース。&lt;br&gt;
いくつかの制限はあるがES classをサポート。&lt;br&gt;
&lt;code&gt;new EmberObject()&lt;/code&gt;を非推奨化し、&lt;code&gt;EmberObject.create()&lt;/code&gt;の利用を推奨するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-reduxjs-react-redux&quot;&gt;Release v6.0.0 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Redux 6.0.0リリース。&lt;br&gt;
Context APIのサポート、&lt;code&gt;withRef&lt;/code&gt;オプションは&lt;code&gt;forwardRef&lt;/code&gt;オプションに置き換えなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1-0-avajs-ava&quot;&gt;Release 1.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.1&quot; title=&quot;Release 1.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v1.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 1.0リリース。&lt;br&gt;
&lt;code&gt;t.throws&lt;/code&gt;の挙動の変更と&lt;code&gt;t.throwsAsync&lt;/code&gt;の追加。&lt;br&gt;
Babel 7に対応、&lt;code&gt;ava.config.js&lt;/code&gt;のサポートなど。&lt;br&gt;
破壊的な変更として&lt;code&gt;test&lt;/code&gt;は名前をもつことが必須となり、&lt;code&gt;t.ifError&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;billboard-js-1-7-0-release-jae-sung-park-medium&quot;&gt;billboard.js 1.7.0 release!! – Jae Sung Park – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@alberto.park/billboard-js-1-7-0-release-4944a2eb59fe&quot; title=&quot;billboard.js 1.7.0 release!! – Jae Sung Park – Medium&quot;&gt;medium.com/@alberto.park/billboard-js-1-7-0-release-4944a2eb59fe&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3.jsベースのグラフライブラリであるbillboard.js 1.7.0リリース。&lt;br&gt;
Multi Axes、&lt;code&gt;graph&lt;/code&gt; theme、TypeScriptのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-devtools-web-mercari-engineering-blog&quot;&gt;Chrome DevToolsを用いたメルカリWebのパフォーマンス計測 - Mercari Engineering Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.mercari.com/entry/2018/12/12/090156&quot; title=&quot;Chrome DevToolsを用いたメルカリWebのパフォーマンス計測 - Mercari Engineering Blog&quot;&gt;tech.mercari.com/entry/2018/12/12/090156&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの開発者ツールのネットワークパネルやパフォーマンスパネルの読み方について。&lt;br&gt;
スクリーンショットを元にそれぞれの要素が何を表しているかを説明している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-background-fetch-web-google-developers&quot;&gt;Introducing Background Fetch  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/background-fetch&quot; title=&quot;Introducing Background Fetch  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/12/background-fetch&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 71で試験的に導入されるBackground Fetchについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-and-guide-to-the-css-object-model-cssom-css-tricks&quot;&gt;An Introduction and Guide to the CSS Object Model (CSSOM) | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/&quot; title=&quot;An Introduction and Guide to the CSS Object Model (CSSOM) | CSS-Tricks&quot;&gt;css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Object Model (CSSOM) について。&lt;br&gt;
JavaScriptから要素のスタイルの取得、変更、Priorityや&lt;code&gt;@keyframes&lt;/code&gt;などへのアクセス方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;worker_threads-node-js-kakts-log&quot;&gt;worker_threadsを使ったNode.js マルチスレッドプログラミング - kakts-log&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://kakts-tec.hatenablog.com/entry/2018/12/14/005316&quot; title=&quot;worker\_threadsを使ったNode.js マルチスレッドプログラミング - kakts-log&quot;&gt;kakts-tec.hatenablog.com/entry/2018/12/14/005316&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.5.0で試験的にサポートされた&lt;code&gt;worker_threads&lt;/code&gt;モジュールについて。&lt;br&gt;
Node.jsでのWorkerを使ったスレッド処理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-vue-js-qiita&quot;&gt;混沌を極める jQuery のコードをいかにして Vue.js に頼らずに整理したか - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/cesare/items/c00acd7911afcba21224&quot; title=&quot;混沌を極める jQuery のコードをいかにして Vue.js に頼らずに整理したか - Qiita&quot;&gt;qiita.com/cesare/items/c00acd7911afcba21224&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryを使い書かれていたイベント処理が密結合で影響範囲が複雑化していた問題について。&lt;br&gt;
イベントのフローや影響範囲をViewで区切るなど、どのようにリファクタリングを進めたかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html5-conference-2018-youtube&quot;&gt;HTML5 Conference 2018 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLeFZWzLJpZccuopdBjJAuod_tYGvVCIHv&quot; title=&quot;HTML5 Conference 2018 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLeFZWzLJpZccuopdBjJAuod_tYGvVCIHv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML5&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML5 Conference 2018の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;measuring-the-performance-impact-of-chrome-extensions-debugbear&quot;&gt;Measuring the performance impact of Chrome extensions | DebugBear&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.debugbear.com/blog/measuring-the-performance-impact-of-chrome-extensions&quot; title=&quot;Measuring the performance impact of Chrome extensions | DebugBear&quot;&gt;www.debugbear.com/blog/measuring-the-performance-impact-of-chrome-extensions&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome拡張などがパフォーマンス計測に与える影響について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-quicklink-faster-subsequent-page-loads-by-prefetching-in-viewport-links-during-idle-time&quot;&gt;GoogleChromeLabs/quicklink: ⚡️Faster subsequent page-loads by prefetching in-viewport links during idle time&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/quicklink&quot; title=&quot;GoogleChromeLabs/quicklink: ⚡️Faster subsequent page-loads by prefetching in-viewport links during idle time&quot;&gt;github.com/GoogleChromeLabs/quicklink&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Viewportに表示されているリンクをアイドル時にprefetchを行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pika-search-modern-module-esm-packages-on-npm&quot;&gt;Pika | Search modern module esm packages on npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.pikapkg.com/&quot; title=&quot;Pika | Search modern module esm packages on npm&quot;&gt;www.pikapkg.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptモジュールに対応したnpmパッケージを検索できるウェブサービス。&lt;br&gt;
&amp;quot;module&amp;quot;フィールドに対応しているパッケージを検索できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pikapkg.com/about/&quot; title=&quot;Pika | What is Pika?&quot;&gt;Pika | What is Pika?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simov-grant-oauth-middleware-for-express-koa-and-hapi&quot;&gt;simov/grant: OAuth Middleware for Express, Koa and Hapi&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/simov/grant&quot; title=&quot;simov/grant: OAuth Middleware for Express, Koa and Hapi&quot;&gt;github.com/simov/grant&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;OAuth&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressなどで使えるOAuth middleware。&lt;br&gt;
passportのように色々なサービスに対応している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/simov/grant/issues/77&quot; title=&quot;How does this project compare to Passport? · Issue #77 · simov/grant&quot;&gt;How does this project compare to Passport? · Issue #77 · simov/grant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wenzil-mhysa-dependency-free-stream-utils-for-node-js&quot;&gt;Wenzil/Mhysa: Dependency-free stream utils for Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Wenzil/Mhysa&quot; title=&quot;Wenzil/Mhysa: Dependency-free stream utils for Node.js&quot;&gt;github.com/Wenzil/Mhysa&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js Streamを扱う&lt;br&gt;
TypeScriptで書かれているライブラリ。&lt;code&gt;fromArray&lt;/code&gt;からStreamのラッパーを作成し&lt;code&gt;map&lt;/code&gt;、&lt;code&gt;reduce&lt;/code&gt;、&lt;code&gt;merge&lt;/code&gt;、&lt;code&gt;duplex&lt;/code&gt;などを使いStream処理できるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-arg-simple-argument-parsing&quot;&gt;zeit/arg: Simple argument parsing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeit/arg&quot; title=&quot;zeit/arg: Simple argument parsing&quot;&gt;github.com/zeit/arg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シンプルなコマンドライン引数パーサライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 18 Dec 2018 10:21:34 +0900</pubDate>
        <link>https://jser.info/2018/12/18/firefox-64.0ava-1.0es-modules/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/18/firefox-64.0ava-1.0es-modules/</guid>
        
        <category>firefox</category>
        
        <category>avajs</category>
        
        <category>testing</category>
        
        <category>Modules</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-11のJS: gulp 4が正式リリース、MSEdgeがChromiumベースに移行</title>
        <description>&lt;p&gt;JSer.info #413 - gulp 4.0が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/gulpjs/version-4-now-default-92c6cd4beb45&quot;&gt;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今まではプレリリース扱いだったので&lt;code&gt;npm install gulp@next&lt;/code&gt;でないとインストールされませんでしたが、現在は&lt;code&gt;npm install gulp&lt;/code&gt;で4.0がインストールされるようになっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gulp.series&lt;/code&gt;、&lt;code&gt;gulp.parallel&lt;/code&gt;、&lt;code&gt;gulp.lastRun&lt;/code&gt;、&lt;code&gt;gulp.symlink&lt;/code&gt;などのAPIが追加されています。&lt;br&gt;
sourcemapsのビルトインサポート、gulpfileからのmodule exportをタスクとして扱えるようなっています。&lt;/p&gt;

&lt;p&gt;または破壊的な変更として、&lt;code&gt;gulp&lt;/code&gt;と&lt;code&gt;gulp-cli&lt;/code&gt;の分離、&lt;code&gt;gulp.task&lt;/code&gt;や&lt;code&gt;gulp.watch&lt;/code&gt;の引数の変更などが行われています。&lt;/p&gt;

&lt;p&gt;3.xからの公式なマイグレーションガイドはまだありませんが、すでにいくつか記事が書かれているのでそれらを見てみるとよいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gulpjs/gulp/issues/861&quot;&gt;[Docs] Migration Guide · Issue #861 · gulpjs/gulp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://satoyan419.com/gulp-v4/&quot; title=&quot;gulp v4.0.0がプレリリース！ 移行方法と変更点まとめ - satoyan419.com&quot;&gt;gulp v4.0.0がプレリリース！ 移行方法と変更点まとめ - satoyan419.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.liquidlight.co.uk/blog/article/how-do-i-update-to-gulp-4/&quot; title=&quot;How do I update to Gulp 4? - Liquid Light&quot;&gt;How do I update to Gulp 4? - Liquid Light&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.joezimjs.com/javascript/complete-guide-upgrading-gulp-4/&quot; title=&quot;The Complete-Ish Guide to Upgrading to Gulp 4 | Joe Zim&amp;#39;s JavaScript Corner&quot;&gt;The Complete-Ish Guide to Upgrading to Gulp 4 | Joe Zim&amp;#39;s JavaScript Corner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Microsoftは、&lt;a href=&quot;https://www.microsoft.com/windows/microsoft-edge&quot;&gt;Microsoft Edge&lt;/a&gt;(MSEdge)を&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;ベースへと移行することを発表しました。&lt;br&gt;
現在のMSEdgeはレンダリングエンジンであるEdgeHTMLとJavaScriptエンジンである&lt;a href=&quot;https://github.com/Microsoft/ChakraCore&quot;&gt;ChakraCore&lt;/a&gt;を利用しています。&lt;br&gt;
これをChromiumのレンダリングエンジンである&lt;a href=&quot;https://www.chromium.org/blink&quot;&gt;Blink&lt;/a&gt;とJavaScriptエンジンである&lt;a href=&quot;https://v8.dev/&quot;&gt;V8&lt;/a&gt;へ移行することを表明しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/#5yeIh988gX4mFiRU.97&quot;&gt;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdge&quot; title=&quot;MicrosoftEdge/MSEdge: Microsoft Edge&quot;&gt;MicrosoftEdge/MSEdge: Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers&quot; title=&quot;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&quot;&gt;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MSEdgeというブラウザ自体(ブランド)は維持されますが、中身がChromeと同じ&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;ベースへ移行されます。&lt;br&gt;
この移行によってWindows7, 8を含めたすべてのサポートバージョンのWindowsとmacOSなどの他のプラットフォームをサポートする予定です。&lt;/p&gt;

&lt;p&gt;新しいMSEdgeはChakraCoreを利用しない予定ですが、ChakraCore自体はブラウザ以外でも利用されているためサポートを継続するとの発表もしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/issues/5865&quot;&gt;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-71-web-google-developers&quot;&gt;New in Chrome 71  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/12/nic71&quot; title=&quot;New in Chrome 71  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/12/nic71&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 71の変更点について。&lt;br&gt;
&lt;code&gt;Intl.RelativeTimeFormat()&lt;/code&gt;のサポート、&lt;code&gt;text-underline-position&lt;/code&gt;のサポート。&lt;br&gt;
Fetch APIのcredentials-modeのデフォルト値が&lt;code&gt;omit&lt;/code&gt;から&lt;code&gt;same-origin&lt;/code&gt;へと変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-2-0-released-private-instance-methods-babel&quot;&gt;7.2.0 Released: Private Instance Methods · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2018/12/03/7.2.0.html&quot; title=&quot;7.2.0 Released: Private Instance Methods · Babel&quot;&gt;babeljs.io/blog/2018/12/03/7.2.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.2.0リリース。&lt;br&gt;
Private methods proposalのサポート、pipeline operator proposalのパースをサポート、replで変換過程を見られるタイムトラベルをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-71-webkit&quot;&gt;Release Notes for Safari Technology Preview 71 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8517/release-notes-for-safari-technology-preview-71/&quot; title=&quot;Release Notes for Safari Technology Preview 71 | WebKit&quot;&gt;webkit.org/blog/8517/release-notes-for-safari-technology-preview-71/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 71リリース。&lt;br&gt;
&lt;code&gt;supported-color-schemes&lt;/code&gt;のサポート、Intersection Observerの有効化、Web Authenticationの試験的サポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-8-4-0-developit-preact&quot;&gt;Release 8.4.0 · developit/preact&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact/releases/tag/8.4.0&quot; title=&quot;Release 8.4.0 · developit/preact&quot;&gt;github.com/developit/preact/releases/tag/8.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Preact 8.4.0リリース。&lt;br&gt;
TypeScriptの型定義を改善、パフォーマンスの改善など。&lt;br&gt;
また次期メジャーバージョンのPreact Xについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-making-the-web-better-through-more-open-source-collaboration-windows-experience-blogwindows-experience-blog&quot;&gt;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&quot; title=&quot;Microsoft Edge: Making the web better through more open source collaboration - Windows Experience BlogWindows Experience Blog&quot;&gt;blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;デスクトップMSEdgeはChromiumベース(Blink+V8)に移行し、すべてのWindowsバージョンやmacOS向けなどへ提供予定。&lt;br&gt;
JavaScriptエンジンのChakraCoreはEdge以外の利用のためサポートを続ける。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdge&quot; title=&quot;MicrosoftEdge/MSEdge: Microsoft Edge&quot;&gt;MicrosoftEdge/MSEdge: Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/issues/5865&quot; title=&quot;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&quot;&gt;Chromium adoption in Microsoft Edge and future of ChakraCore · Issue #5865 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers&quot; title=&quot;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&quot;&gt;MicrosoftEdge/MSEdgeExplainers: Home for explainer documents originated by the Microsoft Edge team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;puppeteer-experimental-puppeteer-firefox-at-master-googlechrome-puppeteer&quot;&gt;puppeteer/experimental/puppeteer-firefox at master · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/tree/master/experimental/puppeteer-firefox&quot; title=&quot;puppeteer/experimental/puppeteer-firefox at master · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/tree/master/experimental/puppeteer-firefox&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PuppeteerのFirefox版&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-developers-blog-flutter-1-0-google-s-portable-ui-toolkit&quot;&gt;Google Developers Blog: Flutter 1.0: Google’s Portable UI Toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.googleblog.com/2018/12/flutter-10-googles-portable-ui-toolkit.html&quot; title=&quot;Google Developers Blog: Flutter 1.0: Google’s Portable UI Toolkit&quot;&gt;developers.googleblog.com/2018/12/flutter-10-googles-portable-ui-toolkit.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flutter&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flutter 1.0リリース。&lt;br&gt;
Hummingbirdというウェブ向けの出力対応予定について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flutter-io/hummingbird-building-flutter-for-the-web-e687c2a023a8&quot; title=&quot;Hummingbird: Building Flutter for the Web – Flutter – Medium&quot;&gt;Hummingbird: Building Flutter for the Web – Flutter – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;processing-js-2008-2018&quot;&gt;Processing.js 2008-2018&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.humphd.org/processing-js-2008/&quot; title=&quot;Processing.js 2008-2018&quot;&gt;blog.humphd.org/processing-js-2008/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;メンテンナンスモードであったProcessing.jsのリポジトリがアーカイブ化された。&lt;br&gt;
またProcessing.jsの歴史について。後継ライブラリとしてはp5jsが開発されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/processing-js/processing-js/&quot; title=&quot;processing-js/processing-js: A port of the Processing visualization language to JavaScript.&quot;&gt;processing-js/processing-js: A port of the Processing visualization language to JavaScript.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-88-0-facebook-flow&quot;&gt;Release v0.88.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.88.0&quot; title=&quot;Release v0.88.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.88.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.88.0リリース。&lt;br&gt;
&lt;code&gt;Function&lt;/code&gt;と&lt;code&gt;Object&lt;/code&gt;を&lt;code&gt;any&lt;/code&gt;のaliasとして扱うように。&lt;br&gt;
&lt;code&gt;flow start --lazy-mode watchman&lt;/code&gt;の追加、&lt;code&gt;flow config check&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-10-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.10.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/12/eslint-v5.10.0-released&quot; title=&quot;ESLint v5.10.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/12/eslint-v5.10.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.10.0リリース。&lt;br&gt;
&lt;code&gt;padding-line-between-statements&lt;/code&gt;にオプションの追加、&lt;br&gt;
JSDoc関係のルールである&lt;code&gt;require-jsdoc&lt;/code&gt;と&lt;code&gt;valid-jsdoc&lt;/code&gt;が非推奨になるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/64a09c3bea4c06d84a2e&quot; title=&quot;ESLint v5.10.0 - Qiita&quot;&gt;ESLint v5.10.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;version-4-0-now-default-gulpjs-medium&quot;&gt;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/gulpjs/version-4-now-default-92c6cd4beb45&quot; title=&quot;🎉 Version 4.0 Now Default 🎉 – gulpjs – Medium&quot;&gt;medium.com/gulpjs/version-4-now-default-92c6cd4beb45&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;gulp 4.0が正式リリース。&lt;br&gt;
&lt;code&gt;gulp.series&lt;/code&gt;と&lt;code&gt;gulp.parallel&lt;/code&gt;を追加。&lt;br&gt;
sourcemapsのビルトインサポート、gulpfileからのexportをタスクとして扱えるように、&lt;code&gt;gulp&lt;/code&gt;と&lt;code&gt;gulp-cli&lt;/code&gt;の分離など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gulpjs/gulp/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · gulpjs/gulp&quot;&gt;Release v4.0.0 · gulpjs/gulp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-dely-engineering-blog&quot;&gt;jQueryへの依存を外す方法 - dely engineering blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.dely.jp/entry/2018/12/08/160000&quot; title=&quot;jQueryへの依存を外す方法 - dely engineering blog&quot;&gt;tech.dely.jp/entry/2018/12/08/160000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryの依存を外すまでのフローについて。&lt;br&gt;
polyfill.io の利用、CoffeeScriptからTypeScriptへの移行。&lt;br&gt;
jQueryをVanillaJS + polyfillで動くように書き直し、BackstopJSでビジュアルリグレッションテストする方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-everywhere-with-environment-variables-node-js-collection-medium&quot;&gt;Node.js Everywhere with Environment Variables! – Node.js Collection – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/making-your-node-js-work-everywhere-with-environment-variables-2da8cdf6e786&quot; title=&quot;Node.js Everywhere with Environment Variables! – Node.js Collection – Medium&quot;&gt;medium.com/the-node-js-collection/making-your-node-js-work-everywhere-with-environment-variables-2da8cdf6e786&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでの環境変数の使い方、&lt;code&gt;.env&lt;/code&gt;を使った環境変数の定義と読み込み方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yahoo-japan-fido2-yahoo-japan-tech-blog&quot;&gt;Yahoo! JAPANでの生体認証の取り組み（FIDO2サーバーの仕組みについて） - Yahoo! JAPAN Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.yahoo.co.jp/advent-calendar-2018/webauthn/&quot; title=&quot;Yahoo! JAPANでの生体認証の取り組み（FIDO2サーバーの仕組みについて） - Yahoo! JAPAN Tech Blog&quot;&gt;techblog.yahoo.co.jp/advent-calendar-2018/webauthn/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAuthn（Web Authentication）を使った生体認証でのログインフローについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-yahoo-japan-tech-blog&quot;&gt;ヤフー株式会社におけるWebフロントエンドの技術選定 - Yahoo! JAPAN Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.yahoo.co.jp/advent-calendar-2018/yahoo-frontend/&quot; title=&quot;ヤフー株式会社におけるWebフロントエンドの技術選定 - Yahoo! JAPAN Tech Blog&quot;&gt;techblog.yahoo.co.jp/advent-calendar-2018/yahoo-frontend/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;company&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ヤフー株式会社における各サービスごとのフロントエンドに利用しているフレームワークやライブラリなどについて。&lt;br&gt;
それぞれの技術を選定した理由などについてもまとめられている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-calendar-data-s-h-aver-strategies&quot;&gt;Performance Calendar » data-s(h)aver strategies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2018/data-shaver-strategies/&quot; title=&quot;Performance Calendar » data-s(h)aver strategies&quot;&gt;calendar.perfplanet.com/2018/data-shaver-strategies/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのデータセーバーが有効かを判定し、それに対してどのようなコンテンツを返すかについて。&lt;br&gt;
コンテンツ数の削減、自動再生の防止、解像度の低い画像の配信、データセーバーが有効になっていることの通知などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;compare-har-files&quot;&gt;Compare HAR files&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://compare.sitespeed.io/&quot; title=&quot;Compare HAR files&quot;&gt;compare.sitespeed.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HARファイル同士を比較できるウェブサービス。&lt;br&gt;
それぞれのリソースロードのタイムライン比較、動画、ファイルサイズのDiffなどを出してくれる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2018/sharing-comparing-har-files/&quot; title=&quot;Performance Calendar » Sharing is caring: What’s new with comparing HAR files?&quot;&gt;Performance Calendar » Sharing is caring: What’s new with comparing HAR files?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rowanmanning-proclaim-a-simple-assertion-library-for-server-and-client-side-javascript&quot;&gt;rowanmanning/proclaim: A simple assertion library for server and client side JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rowanmanning/proclaim&quot; title=&quot;rowanmanning/proclaim: A simple assertion library for server and client side JavaScript.&quot;&gt;github.com/rowanmanning/proclaim&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;古いブラウザや古いNode.jsでも動作するように書かれたassert系ライブラリ。&lt;br&gt;
chaiのようにassertの拡張メソッドも実装されている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 11 Dec 2018 09:22:12 +0900</pubDate>
        <link>https://jser.info/2018/12/11/gulp-4msedgechromium/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/11/gulp-4msedgechromium/</guid>
        
        <category>gulpjs</category>
        
        <category>MSEdge</category>
        
        <category>Chromium</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-12-04のJS: TypeScript 3.2、React 16.xロードマップ、ESLintのビルトインJSDocサポート終了の予定</title>
        <description>&lt;p&gt;JSer.info #412 - TypeScript 3.2が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&quot;&gt;Announcing TypeScript 3.2 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/79557e00cfe6d3c612cd&quot;&gt;TypeScript 3.2.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポート。&lt;/p&gt;

&lt;p&gt;また&lt;code&gt;allowJs&lt;/code&gt;の際に&lt;code&gt;Object.defineProperty&lt;/code&gt;で宣言されたプロパティのチェック(&lt;code&gt;checkJs&lt;/code&gt;)に対応しています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;では既存の&lt;code&gt;tsconfig.json&lt;/code&gt;を継承して拡張できますが、今まで&lt;code&gt;node_modules/&lt;/code&gt;にある場合はそのままパスを書く必要がありました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../node_modules/@my-team/tsconfig-base/tsconfig.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./**/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Override&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;certain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;project-by-project&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;basis.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;strictBindCallApply&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;プロジェクトなどで&lt;code&gt;tsconfig.json&lt;/code&gt;をnpmで配布して共有する場合には、少し不便でした。(たとえば、node&lt;em&gt;modulesがflatかどうかでパスが変わる可能性もあります)&lt;br&gt;
そのため、3.2から&lt;code&gt;extends&lt;/code&gt;が`node&lt;/em&gt;modules/`以下を探索するようになったため、次のように書けます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;extends&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@my-team/tsconfig-base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;include&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./**/*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;compilerOptions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Override&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;certain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;project-by-project&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;basis.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;strictBindCallApply&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/11/27/react-16-roadmap.html&quot;&gt;React 16.x Roadmap – React Blog&lt;/a&gt;ではReact 16.xのロードマップについて書かれています。&lt;/p&gt;

&lt;p&gt;それぞれのminorアップデートや実装される予定の機能について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React 16.6 with Suspense for Code Splitting (already shipped)&lt;/li&gt;
&lt;li&gt;16.7?: A minor 16.x release with React Hooks (~Q1 2019)&lt;/li&gt;
&lt;li&gt;16.8?: A minor 16.x release with Concurrent Mode (~Q2 2019)&lt;/li&gt;
&lt;li&gt;16.9?: A minor 16.x release with Suspense for Data Fetching (~mid 2019)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また合わせてReact DOMのリファクタリングやSuspenseのSSR対応なども勧めていく予定とのことです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/issues/13525&quot;&gt;React Fire: Modernizing React DOM · Issue #13525 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&lt;/a&gt;という記事では、現在ESLintにビルトインで入っているJSDocサポートの今後について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/09f9dd4ab2569cd4cd68&quot;&gt;ESLint の組み込み JSDoc サポートが終了します - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLintコアで行っていたJSDoc周りのパーサやルールなどの開発を終了するという内容です。&lt;/p&gt;

&lt;p&gt;これによりESLint本体から&lt;code&gt;require-jsdoc&lt;/code&gt;などのJSDoc関係のサポートが終了され、次のメジャーアップデートで削除される可能性があります。&lt;br&gt;
そのためコミュニティで開発されている&lt;a href=&quot;https://github.com/gajus/eslint-plugin-jsdoc&quot;&gt;eslint-plugin-jsdoc&lt;/a&gt;というプラグインへの移行が推奨されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gajus/eslint-plugin-jsdoc/issues/107&quot;&gt;Incorporating now deprecated ESLint jsdoc features · Issue #107 · gajus/eslint-plugin-jsdoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLintが利用していたJSDocパーサである&lt;a href=&quot;https://github.com/eslint/doctrine&quot;&gt;doctrine&lt;/a&gt;も開発が終了され、現在アーカイブ化されています。&lt;br&gt;
これはもともと&lt;a href=&quot;https://github.com/Constellation&quot;&gt;@constellation&lt;/a&gt;さんが開発し、ESLint/JS Foundationにtransferしたパッケージです。&lt;br&gt;
JS Foundationでの開発を引き継ぐには手続きが煩雑になることから、Forkによる引き継ぎが推奨されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev-opera-what-s-new-in-chromium-70-and-opera-57&quot;&gt;Dev.Opera — What’s new in Chromium 70 and Opera 57&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-57/&quot; title=&quot;Dev.Opera — What’s new in Chromium 70 and Opera 57&quot;&gt;dev.opera.com/blog/opera-57/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Opera 57 (based on Chromium 70)リリース。&lt;br&gt;
Feature Detectionの混乱をさけるために&lt;code&gt;ontouch*&lt;/code&gt;イベントの属性はデスクトップにおいてデフォルトで無効化、&lt;code&gt;postMessage&lt;/code&gt;に&lt;code&gt;targetOrigin&lt;/code&gt;オプションの追加。&lt;br&gt;
Web Components V1を非推奨化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-2-typescript&quot;&gt;Announcing TypeScript 3.2 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&quot; title=&quot;Announcing TypeScript 3.2 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.2リリース。&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポート。&lt;br&gt;
&lt;code&gt;tsconfig.json&lt;/code&gt;の&lt;code&gt;extends&lt;/code&gt;がnode_modulesのパスに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-loading-and-preloading-components-in-react-16-6&quot;&gt;Lazy loading (and preloading) components in React 16.6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d&quot; title=&quot;Lazy loading (and preloading) components in React 16.6&quot;&gt;medium.com/@pomber/lazy-loading-and-preloading-components-in-react-16-6-804de091c82d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;React.lazy()&lt;/code&gt;を使ったコンポーネントの遅延ロードについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;end-of-life-for-built-in-jsdoc-support-in-eslint-eslint-pluggable-javascript-linter&quot;&gt;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot; title=&quot;End-of-Life for Built-in JSDoc Support in ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/11/jsdoc-end-of-life&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLintのJSDocサポートが4.0.0でビルトインではなくなることについて。&lt;br&gt;
これにあわせてJSDocパーサのDoctrineも更新されなくなる。&lt;br&gt;
既存のJSDoc関係のルールは別途プラグインとして切り出される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eslint/doctrine&quot; title=&quot;eslint/doctrine: JSDoc parser&quot;&gt;eslint/doctrine: JSDoc parser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-16-x-roadmap-react-blog&quot;&gt;React 16.x Roadmap – React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/11/27/react-16-roadmap.html&quot; title=&quot;React 16.x Roadmap – React Blog&quot;&gt;reactjs.org/blog/2018/11/27/react-16-roadmap.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.xのロードマップについて。&lt;br&gt;
16.7でReact Hooks、16.8でConcurrent Mode、16.9でSuspense for Data Fetchingをリリース予定。&lt;br&gt;
また、React DOMのモダン化やSSRに対するSuspenseを検討中。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-72-web-google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 72)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/11/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 72)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/11/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 72の開発者ツールの変更点。&lt;br&gt;
Performance metricsのビジュアライズ、&amp;quot;Copy JS path&amp;quot;(セレクタを指定するコードのコピー)を追加、Lighthouseのアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-frontend-testing-with-cypress-io-framework-snipcart&quot;&gt;Modern Frontend Testing with Cypress.io Framework - Snipcart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snipcart.com/blog/frontend-testing-cypress&quot; title=&quot;Modern Frontend Testing with Cypress.io Framework - Snipcart&quot;&gt;snipcart.com/blog/frontend-testing-cypress&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypressを使ったE2Eテストについてのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-workers-vs-service-workers-vs-worklets&quot;&gt;Web workers vs Service workers vs Worklets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsofco.de/web-workers-vs-service-workers-vs-worklets/&quot; title=&quot;Web workers vs Service workers vs Worklets&quot;&gt;bitsofco.de/web-workers-vs-service-workers-vs-worklets/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Worker、Service Worker、Workletsの役割や動作についてを簡単に紹介している記事。&lt;br&gt;
ブラウザのメインスレッドとは異なるスレッドでコードを実行するWorkerについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2018-11-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2018-11 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2018/12/01/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates @ 2018-11 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2018/12/01/ecmascript-proposal-updates&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年11月のTC39ミーティングで変更があったECMAScript Proposalのステータスまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-s-new-in-create-react-app-2-logrocket&quot;&gt;What’s new in Create React App 2 – LogRocket&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/whats-new-in-create-react-app-2-fe8f4f448c75&quot; title=&quot;What’s new in Create React App 2 – LogRocket&quot;&gt;blog.logrocket.com/whats-new-in-create-react-app-2-fe8f4f448c75&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Create React App 2.0での変更点について。&lt;br&gt;
TypeScript対応、Service Workerがオプトインに変更、Babel macrosの対応、&lt;code&gt;src/setupProxy.js&lt;/code&gt;の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-does-react-tell-a-class-from-a-function-overreacted&quot;&gt;How Does React Tell a Class from a Function? | Overreacted&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://overreacted.io/how-does-react-tell-a-class-from-a-function/&quot; title=&quot;How Does React Tell a Class from a Function? | Overreacted&quot;&gt;overreacted.io/how-does-react-tell-a-class-from-a-function/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactが関数とクラスで書かれたコンポーネントを呼び分ける必要があるため、内部でどのように判別しているかについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-and-network-performance-css-wizardry-css-architecture-web-performance-optimisation-and-more-by-harry-roberts&quot;&gt;CSS and Network Performance – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://csswizardry.com/2018/11/css-and-network-performance/&quot; title=&quot;CSS and Network Performance – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&quot;&gt;csswizardry.com/2018/11/css-and-network-performance/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのロードとパフォーマンスについての記事。&lt;br&gt;
非同期ロード、&lt;code&gt;@import&lt;/code&gt;を避ける、CSSとJSのロード順の問題などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scrimba&quot;&gt;Scrimba&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scrimba.com/&quot; title=&quot;Scrimba&quot;&gt;scrimba.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular、React、VueやTypeScriptなどのスクリーンキャストを公開しているサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-second-edition-of-refactoring&quot;&gt;The Second Edition of &amp;quot;Refactoring&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://martinfowler.com/articles/refactoring-2nd-ed.html&quot; title=&quot;The Second Edition of \&amp;quot;Refactoring\&amp;quot;&quot;&gt;martinfowler.com/articles/refactoring-2nd-ed.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Refactoring 第二版がリリースされた&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 Dec 2018 09:33:24 +0900</pubDate>
        <link>https://jser.info/2018/12/04/typescript-3.2react-16.xeslintjsdoc/</link>
        <guid isPermaLink="true">https://jser.info/2018/12/04/typescript-3.2react-16.xeslintjsdoc/</guid>
        
        <category>typescript</category>
        
        <category>react</category>
        
        <category>eslint</category>
        
        <category>JSDoc</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-11-27のJS: Web Components入門、React-Reduxの歴史と実装、 HTTP/3 explained</title>
        <description>&lt;p&gt;JSer.info #411 - &amp;quot;Lets Build Web Components!&amp;quot;というWeb Componentsについての連載記事が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-1-the-standards-3e85&quot; title=&quot;Lets Build Web Components! Part 1: The Standards - DEV Community 👩‍💻👨‍💻&quot;&gt;Lets Build Web Components! Part 1: The Standards - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-2-the-polyfills-dkh&quot; title=&quot;Lets Build Web Components! Part 2: The Polyfills - DEV Community 👩‍💻👨‍💻&quot;&gt;Lets Build Web Components! Part 2: The Polyfills - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-3-vanilla-components-4on3&quot; title=&quot;Lets Build Web Components! Part 3: Vanilla Components - DEV Community 👩‍💻👨‍💻&quot;&gt;Lets Build Web Components! Part 3: Vanilla Components - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-4-polymer-library-4dk2&quot; title=&quot;Lets Build Web Components! Part 4: Polymer Library - DEV Community 👩‍💻👨‍💻&quot;&gt;Lets Build Web Components! Part 4: Polymer Library - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-5-litelement-906&quot; title=&quot;Let&amp;#39;s Build Web Components! Part 5: LitElement - DEV Community 👩‍💻👨‍💻&quot;&gt;Let&amp;#39;s Build Web Components! Part 5: LitElement - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-6-gluon-27ll&quot; title=&quot;Let&amp;#39;s Build Web Components! Part 6: Gluon - DEV Community 👩‍💻👨‍💻&quot;&gt;Let&amp;#39;s Build Web Components! Part 6: Gluon - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Web Componentsの基本的な使い方、Polyfill、ライフサイクル、スタイルなどについて解説しています。&lt;br&gt;
また、&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt;や&lt;a href=&quot;https://github.com/ruphin/gluonjs&quot;&gt;Gluonjs&lt;/a&gt;といったフレームワークを使ったコンポーネント開発などについても書かれているためかなり幅広い内容になっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/&quot;&gt;Idiomatic Redux: The History and Implementation of React-Redux · Mark&amp;#39;s Dev Blog&lt;/a&gt;という記事では、Reduxのメンテナーの&lt;a href=&quot;https://github.com/markerikson&quot;&gt;Mark Erikson&lt;/a&gt;が&lt;a href=&quot;https://github.com/reduxjs/react-redux&quot;&gt;React Redux&lt;/a&gt;の歴史と実装について紹介しています。&lt;/p&gt;

&lt;p&gt;v5までのReact Reduxの実装とv6 β実装された&lt;a href=&quot;https://reactjs.org/docs/context.html&quot;&gt;Context API&lt;/a&gt;ベースの実装やパフォーマンスの問題についても書かれています。&lt;br&gt;
また今後の話として、Reactの&lt;a href=&quot;https://reactjs.org/docs/hooks-reference.html&quot;&gt;Hooks API&lt;/a&gt;を使った実装の提案などについても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://daniel.haxx.se/http2/&quot;&gt;HTTP/2 explained&lt;/a&gt;の著者でもある&lt;a href=&quot;https://daniel.haxx.se/&quot;&gt;Daniel Stenberg&lt;/a&gt;によるHTTP/3 explainedが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://daniel.haxx.se/http3-explained/&quot;&gt;HTTP/3 explained - The book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://daniel.haxx.se/blog/2018/11/26/http3-explained/&quot;&gt;HTTP/3 Explained | daniel.haxx.se&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この書籍ではHTTP/3について解説されています。&lt;br&gt;
HTTP/3自体がまだ策定中であるため、この書籍もまだ更新が予定されています。&lt;/p&gt;

&lt;p&gt;また、ソースコードもGitHubで公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bagder/http3-explained&quot;&gt;bagder/http3-explained: A document describing the HTTP/3 and QUIC protocols&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lets-build-web-components-part-1-the-standards-dev-community&quot;&gt;Lets Build Web Components! Part 1: The Standards - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/bennypowers/lets-build-web-components-part-1-the-standards-3e85&quot; title=&quot;Lets Build Web Components! Part 1: The Standards - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/bennypowers/lets-build-web-components-part-1-the-standards-3e85&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsについての連載。&lt;br&gt;
Web Componentsの構成要素、polyfill、読み込み方法、ライフサイクル、非同期ロード。&lt;br&gt;
また&lt;code&gt;:host&lt;/code&gt;や&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt;、スタイル、アクセシビリティ、Polymerなどのフレームワークについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;websockets-a-conceptual-deep-dive-ably-realtime&quot;&gt;WebSockets - A Conceptual Deep-Dive | Ably Realtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ably.io/concepts/websockets&quot; title=&quot;WebSockets - A Conceptual Deep-Dive | Ably Realtime&quot;&gt;www.ably.io/concepts/websockets&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebSocketについての記事。 Cometのようなポーリングによる通信、WebSocketによるハンドシェイクについて。 &lt;code&gt;WebSocket&lt;/code&gt;を使っての接続方法や著名なライブラリの紹介など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;idiomatic-redux-the-history-and-implementation-of-react-redux-marks-dev-blog&quot;&gt;Idiomatic Redux: The History and Implementation of React-Redux · Mark&amp;#39;s Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/&quot; title=&quot;Idiomatic Redux: The History and Implementation of React-Redux · Mark&amp;#39;s Dev Blog&quot;&gt;blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;react-reduxの歴史と今後について&lt;br&gt;
今までのreact-reduxの実装とv6 β実装されたContext APIベースの実装。&lt;br&gt;
また、React Hooksを使った実装のProposalについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-ncc-node-js-compiler-collection&quot;&gt;ZEIT – ncc: Node.js Compiler Collection&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zeit.co/blog/ncc&quot; title=&quot;ZEIT – ncc: Node.js Compiler Collection&quot;&gt;zeit.co/blog/ncc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのプログラムを依存含めて1つのファイルにするnccについて。&lt;br&gt;
ファイル1つにまとめることで配布性や実行時の起動時間のI/Oオーバヘッドの改善を目的としている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zeit/ncc&quot; title=&quot;zeit/ncc: Node.js Compiler Collection&quot;&gt;zeit/ncc: Node.js Compiler Collection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;malicious-code-found-in-npm-package-event-stream-downloaded-8-million-times-in-the-past-2-5-months-snyk&quot;&gt;Malicious code found in npm package event-stream downloaded 8 million times in the past 2.5 months | Snyk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snyk.io/blog/malicious-code-found-in-npm-package-event-stream&quot; title=&quot;Malicious code found in npm package event-stream downloaded 8 million times in the past 2.5 months | Snyk&quot;&gt;snyk.io/blog/malicious-code-found-in-npm-package-event-stream&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;event-stream@3.3.6&lt;/code&gt;と&lt;code&gt;flatmap-stream&lt;/code&gt;の問題について。&lt;br&gt;
&lt;code&gt;flatmap-stream&lt;/code&gt;にwalletsからbitcoinを盗むコードが含まれており、&lt;code&gt;event-stream@3.3.6&lt;/code&gt;がこのパッケージに依存していた問題について。&lt;br&gt;
現在&lt;code&gt;flatmap-stream&lt;/code&gt;はnpmからunpublishされている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dominictarr/event-stream/issues/116&quot; title=&quot;I don&amp;amp;#x27;t know what to say. · Issue #116 · dominictarr/event-stream&quot;&gt;I don&amp;#39;t know what to say. · Issue #116 · dominictarr/event-stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/dominictarr/9fd9c1024c94592bc7268d36b8d83b3a&quot; title=&quot;statement on event-stream compromise&quot;&gt;statement on event-stream compromise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-we-made-carousell-s-mobile-web-experience-3x-faster&quot;&gt;How we made Carousell’s mobile web experience 3x faster&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/carousell-insider/how-we-made-carousells-mobile-web-experience-3x-faster-bbb3be93e006&quot; title=&quot;How we made Carousell’s mobile web experience 3x faster&quot;&gt;medium.com/carousell-insider/how-we-made-carousells-mobile-web-experience-3x-faster-bbb3be93e006&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;carousellにおけるパフォーマンス改善について。&lt;br&gt;
PRPLパターン、Critical CSS、Lazy LOading、画像の圧縮とCDN、Service Workerの導入などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;validator-favalid-asterisc&quot;&gt;フロントエンド向けvalidator: favalidの紹介 - asterisc&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://akito0107.hatenablog.com/entry/2018/11/23/195538&quot; title=&quot;フロントエンド向けvalidator: favalidの紹介 - asterisc&quot;&gt;akito0107.hatenablog.com/entry/2018/11/23/195538&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;バリデーターを関数で書いてcombineできるライブラリのfavalidについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/akito0107/favalid&quot; title=&quot;akito0107/favalid: make your favorite validators.&quot;&gt;akito0107/favalid: make your favorite validators.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;seo_for_spa-pdf-speaker-deck&quot;&gt;seo_for_spa.pdf - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/kazuyaseki/seo-for-spa-cfb3706f-ae1d-4c6f-a83f-96dc2452f32b&quot; title=&quot;seo\_for\_spa.pdf - Speaker Deck&quot;&gt;speakerdeck.com/kazuyaseki/seo-for-spa-cfb3706f-ae1d-4c6f-a83f-96dc2452f32b&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SEO&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google botに適切に解釈されるようにするための手法についてのスライド。&lt;br&gt;
Google botがChrome 41相当であることによる制限、タイムアウトの検証、Dynamic Rendering(prerender)やSSRなどの対策についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-web-pdf-speaker-deck&quot;&gt;Angular Webアプリケーションの最新設計手法.pdf - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/koumatsumot0/angular-webahurikesiyonfalsezui-xin-she-ji-shou-fa&quot; title=&quot;Angular Webアプリケーションの最新設計手法.pdf - Speaker Deck&quot;&gt;speakerdeck.com/koumatsumot0/angular-webahurikesiyonfalsezui-xin-she-ji-shou-fa&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angularのコンポーネント設計やステート管理についてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pwa-nikkei-pwa-html5conf2018-speaker-deck&quot;&gt;PWA導入の成果と課題 / nikkei-pwa-html5conf2018 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/sisidovski/nikkei-pwa-html5conf2018&quot; title=&quot;PWA導入の成果と課題 / nikkei-pwa-html5conf2018 - Speaker Deck&quot;&gt;speakerdeck.com/sisidovski/nikkei-pwa-html5conf2018&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PWAの導入と運用しての課題についてのスライド。&lt;br&gt;
Service Workerによるパフォーマンスの改善、Add to HomeScreenのハンドリング、Performance Budgetの設定方法とパフォーマンス監視などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;http-and-5g-fixed1&quot;&gt;HTTP and 5G (fixed1)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/dynamis/httpp-and-5g-fixed1&quot; title=&quot;HTTP and 5G (fixed1)&quot;&gt;www.slideshare.net/dynamis/httpp-and-5g-fixed1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;QUIC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;5G環境での通信試験についてのスライド。&lt;br&gt;
5Gの試験環境における輻輳制御方法CUBICとBBRの比較、HTTP/1、HTTP/2、QUICの比較などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;class-features-in-nodefest-japan-google&quot;&gt;Class features in NodeFest Japan - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1nsR7QnPlyhlPj1ff4cYyARwcWrYM1j_fM7dpbFZM3K8/mobilepresent#slide=id.p&quot; title=&quot;Class features in NodeFest Japan - Google スライド&quot;&gt;docs.google.com/presentation/d/1nsR7QnPlyhlPj1ff4cYyARwcWrYM1j_fM7dpbFZM3K8/mobilepresent#slide&amp;#x3D;id.p&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript ProposalのPrivate fieldsについてのスライド。&lt;br&gt;
privateを実現するための構文として&lt;code&gt;#variable&lt;/code&gt;を使う理由や経緯、構文、現在のStageについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-js-green-licenses-javascript-package-json-license-checker&quot;&gt;google/js-green-licenses: JavaScript package.json License Checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/js-green-licenses&quot; title=&quot;google/js-green-licenses: JavaScript package.json License Checker&quot;&gt;github.com/google/js-green-licenses&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ライセンス&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;にかかれている依存ライブラリのライセンスチェックツール。&lt;br&gt;
Pull Reuqest対するチェックなども対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kidkarolis-jetpack-jetpack-a-more-convenient-webpack-dev-server&quot;&gt;KidkArolis/jetpack: 🚀 Jetpack – a more convenient webpack dev server.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/KidkArolis/jetpack&quot; title=&quot;KidkArolis/jetpack: 🚀 Jetpack – a more convenient webpack dev server.&quot;&gt;github.com/KidkArolis/jetpack&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackベースの開発サーバ、ビルドツール。&lt;br&gt;
Parcelのようにデフォルトの設定があり、設定なしで利用できることを目的としている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wasmerio-wasmer-high-performance-webassembly-jit-interpreter&quot;&gt;wasmerio/wasmer: High-Performance WebAssembly JIT interpreter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wasmerio/wasmer&quot; title=&quot;wasmerio/wasmer: High-Performance WebAssembly JIT interpreter&quot;&gt;github.com/wasmerio/wasmer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyファイル(&lt;code&gt;.wasm&lt;/code&gt;と&lt;code&gt;.wat&lt;/code&gt;)を実行できるスタンドアローンなツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-http-3-explained&quot;&gt;Introduction · HTTP/3 explained&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://http3-explained.haxx.se/en/&quot; title=&quot;Introduction · HTTP/3 explained&quot;&gt;http3-explained.haxx.se/en/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;http3&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP/3とQUICについての解説ドキュメント。&lt;br&gt;
TCPとUDP、HTTP/2との違い、QUICの仕組みなどについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://legacy.gitbook.com/book/bagder/http2-explained/details&quot; title=&quot;http2 explained · GitBook (Legacy)&quot;&gt;http2 explained · GitBook (Legacy)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developit-htm-hyperscript-tagged-markup-jsx-alternative-using-standard-tagged-templates-with-compiler-support&quot;&gt;developit/htm: Hyperscript Tagged Markup: JSX alternative using standard tagged templates, with compiler support.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/htm&quot; title=&quot;developit/htm: Hyperscript Tagged Markup: JSX alternative using standard tagged templates, with compiler support.&quot;&gt;github.com/developit/htm&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXライクなTagged Templatesライブラリ。babelプラグインでコンパイルも可能になっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;areknawo-rex-your-regex-companion&quot;&gt;areknawo/Rex: Your RegEx companion.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/areknawo/rex&quot; title=&quot;areknawo/Rex: Your RegEx companion.&quot;&gt;github.com/areknawo/rex&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;正規表現&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;メソッドチェーンで正規表現を作成したり、マッチング、置換するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;boneskull-create-yo-use-any-yeoman-generator-with-npm-init&quot;&gt;boneskull/create-yo: Use any Yeoman generator with &amp;quot;npm init&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/boneskull/create-yo&quot; title=&quot;boneskull/create-yo: Use any Yeoman generator with \&amp;quot;npm init\&amp;quot;&quot;&gt;github.com/boneskull/create-yo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm init yo &amp;lt;generator&amp;gt;&lt;/code&gt;できるYoeman向けのツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 27 Nov 2018 11:18:42 +0900</pubDate>
        <link>https://jser.info/2018/11/27/web-componentsreact-redux-http3-explained/</link>
        <guid isPermaLink="true">https://jser.info/2018/11/27/web-componentsreact-redux-http3-explained/</guid>
        
        <category>WebComponents</category>
        
        <category>react</category>
        
        <category>redux</category>
        
        <category>HTTP3</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-11-20のJS: TypeScript 3.2 RC、Chrome Dev Summit、The State of JavaScriptアンケート</title>
        <description>&lt;p&gt;JSer.info #410 - TypeScript 3.2 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/15/announcing-typescript-3-2-rc/&quot;&gt;Announcing TypeScript 3.2 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/79557e00cfe6d3c612cd&quot; title=&quot;TypeScript 3.2.0-RC 変更点 - Qiita&quot;&gt;TypeScript 3.2.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポートなどが行われています。&lt;br&gt;
またCLIに&lt;code&gt;--showConfig&lt;/code&gt;オプションの追加され&lt;code&gt;tsconfig.json&lt;/code&gt;で定義した設定をダンプできるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/devsummit/&quot;&gt;Chrome Dev Summit 2018&lt;/a&gt;が開催され、動画などが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDjlCx1PcphPpmf43aKOAdF&quot;&gt;Chrome Dev Summit 2018 - All Sessions - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;発表内容と関連する記事やリポジトリなどが次のページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mobile.twitter.com/i/moments/1062511192097214464&quot;&gt;What&amp;#39;s in the future of the web? / Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またあわせて&lt;a href=&quot;https://web.dev/&quot;&gt;web.dev&lt;/a&gt;というサイトが公開されています。&lt;br&gt;
このサイトでは&lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;Web Fundamentals&lt;/a&gt;のようにウェブパフォーマンス、セキュリティ、アクセシビリティ、SEOなどウェブ開発に関するドキュメントや&lt;a href=&quot;https://glitch.com/&quot;&gt;Glitch&lt;/a&gt;と連携したインタラクティブなサンプル、&lt;a href=&quot;https://web.dev/measure&quot;&gt;Measure&lt;/a&gt;といった計測ツールなどを公開しています。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/a6pLdPnDvb8&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://2018.stateofjs.com/&quot;&gt;The State of JavaScript 2018&lt;/a&gt;という毎年行われているアンケートの結果が公開されています。&lt;/p&gt;

&lt;p&gt;言語、フレームワーク、データレイヤー、バックエンド、テスト、モバイルなどについてのアンケート結果と過去のデータとの比較などが公開されているので興味がある人は見てみると良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-2-rc-typescript&quot;&gt;Announcing TypeScript 3.2 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/11/15/announcing-typescript-3-2-rc/&quot; title=&quot;Announcing TypeScript 3.2 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/11/15/announcing-typescript-3-2-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.2 RCリリース。&lt;br&gt;
&lt;code&gt;strictBindCallApply&lt;/code&gt;オプションが追加され&lt;code&gt;bind&lt;/code&gt;、&lt;code&gt;call&lt;/code&gt;、&lt;code&gt;apply&lt;/code&gt;の型付け改善、Object spread/restとGenericsの組み合わせを改善、BigIntサポート。&lt;br&gt;
CLIに&lt;code&gt;--showConfig&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/79557e00cfe6d3c612cd&quot; title=&quot;TypeScript 3.2.0-RC 変更点 - Qiita&quot;&gt;TypeScript 3.2.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-70-webkit&quot;&gt;Release Notes for Safari Technology Preview 70 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8496/release-notes-for-safari-technology-preview-70/&quot; title=&quot;Release Notes for Safari Technology Preview 70 | WebKit&quot;&gt;webkit.org/blog/8496/release-notes-for-safari-technology-preview-70/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 70リリース。&lt;br&gt;
HTTPなサイトに&amp;quot;Not Secure&amp;quot;表示が出るように変更。&lt;/p&gt;

&lt;p&gt;Web AnimationsとIntersection Observerの対応改善、IndexedDBのデフォルトの最大容量が500MBに制限など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/azu_re/status/1063247013905481728&quot; title=&quot;azu on Twitter: &amp;amp;amp;quot;Safari TP 70でHTTPなサイトに&amp;amp;amp;quot;Not Secure&amp;amp;amp;quot;表示が出るようになった… &amp;amp;amp;quot;&quot;&gt;azu on Twitter: &amp;quot;Safari TP 70でHTTPなサイトに&amp;quot;Not Secure&amp;quot;表示が出るようになった… &amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-26-0-webpack-webpack&quot;&gt;Release v4.26.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.26.0&quot; title=&quot;Release v4.26.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v4.26.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4.26.0リリース。&lt;br&gt;
デフォルトのminifierをuglify-esからterserに変更&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/terser-js/terser&quot; title=&quot;terser-js/terser: JavaScript parser, mangler, optimizer and beautifier toolkit for ES6+&quot;&gt;terser-js/terser: JavaScript parser, mangler, optimizer and beautifier toolkit for ES6+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-three-types-of-performance-testing-css-wizardry-css-architecture-web-performance-optimisation-and-more-by-harry-roberts&quot;&gt;The Three Types of Performance Testing – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://csswizardry.com/2018/10/three-types-of-performance-testing/&quot; title=&quot;The Three Types of Performance Testing – CSS Wizardry – CSS Architecture, Web Performance Optimisation, and more, by Harry Roberts&quot;&gt;csswizardry.com/2018/10/three-types-of-performance-testing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;3種類のパフォーマンステストについて。&lt;br&gt;
Proactive, Reactive, Passiveの3分類でパフォーマンステストについて説明されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-power-of-web-components-mozilla-hacks-the-web-developer-blog&quot;&gt;The Power of Web Components - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2018/11/the-power-of-web-components/&quot; title=&quot;The Power of Web Components - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2018/11/the-power-of-web-components/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsの概要的な記事。&lt;br&gt;
Web Componentsを構成する&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;、Custom Elements、Shadow DOMについて解説している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-errors-in-javascript-the-definite-guide-gitconnected-become-a-better-developer&quot;&gt;Handling Errors in JavaScript: the definite guide – gitconnected | Become a Better Developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://levelup.gitconnected.com/the-definite-guide-to-handling-errors-gracefully-in-javascript-58424d9c60e6&quot; title=&quot;Handling Errors in JavaScript: the definite guide – gitconnected | Become a Better Developer&quot;&gt;levelup.gitconnected.com/the-definite-guide-to-handling-errors-gracefully-in-javascript-58424d9c60e6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのエラーハンドリングについて。&lt;br&gt;
try...catch、非同期処理、async functionとtry...catch。&lt;br&gt;
カスタムErrorオブジェクト、ユーザーへのエラー表示、エラーコードについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-for-the-angular-dev-austin-medium&quot;&gt;React for the Angular Dev – Austin – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@amcdnl/react-for-the-angular-dev-be21a39a382&quot; title=&quot;React for the Angular Dev – Austin – Medium&quot;&gt;medium.com/@amcdnl/react-for-the-angular-dev-be21a39a382&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angularユーザー向けのReactエコシステム解説記事。&lt;br&gt;
機能的な対応関係となるライブラリやツールなどのエコシステムの例、Angularとは異なりスタイルガイドが公式にあるわけではないなどスタンスの違いなどについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-in-the-future-of-the-web-twitter&quot;&gt;What&amp;#39;s in the future of the web? / Twitter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mobile.twitter.com/i/moments/1062511192097214464&quot; title=&quot;What&amp;#39;s in the future of the web? / Twitter&quot;&gt;mobile.twitter.com/i/moments/1062511192097214464&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome Dev Summitで発表された内容に関する記事やリポジトリのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dom-black-everyday-company&quot;&gt;自作フレームワークをつくって学ぶ 仮想DOM実践入門 | Black Everyday Company&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kuroeveryday.blogspot.com/2018/11/how-to-create-virtual-dom-framework.html&quot; title=&quot;自作フレームワークをつくって学ぶ 仮想DOM実践入門 | Black Everyday Company&quot;&gt;kuroeveryday.blogspot.com/2018/11/how-to-create-virtual-dom-framework.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Virtual DOMの仕組みについてVirtual DOMを実装しながら学んでいくチュートリアル。&lt;br&gt;
Virtual DOMとして作ったオブジェクトを実際のDOMにどのように反映するか差分の変更検知などの実装。&lt;br&gt;
またHyperAppのようなActionの実行と表示更新のスケジュール管理のようなフレームワークとしての動きについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;micro-frontends-the-theory-and-practice-of-micro-frontends-speaker-deck&quot;&gt;Micro Frontends の理論と実践  -価値提供を高速化する真のマイクロサービスのあり方- / The Theory and Practice of Micro Frontends - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/nobuhikosawai/the-theory-and-practice-of-micro-frontends&quot; title=&quot;Micro Frontends の理論と実践  -価値提供を高速化する真のマイクロサービスのあり方- / The Theory and Practice of Micro Frontends - Speaker Deck&quot;&gt;speakerdeck.com/nobuhikosawai/the-theory-and-practice-of-micro-frontends&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Microservices&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;マイクロフロントエンドのメリット、デメリットについてのスライド。&lt;br&gt;
デプロイや技術の独立性、疎結合、組織論、パフォーマンスの問題など。&lt;br&gt;
マイクロフロントエンドの実装や実装例について。キャッシュ、グロールバルステート、サービス間の状態の連動方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-dev-summit-2018-all-sessions-youtube&quot;&gt;Chrome Dev Summit 2018 - All Sessions - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDjlCx1PcphPpmf43aKOAdF&quot; title=&quot;Chrome Dev Summit 2018 - All Sessions - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLNYkxOF6rcIDjlCx1PcphPpmf43aKOAdF&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome Dev Summit 2018の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-javascript-2018-introduction&quot;&gt;The State of JavaScript 2018: Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2018.stateofjs.com/introduction/&quot; title=&quot;The State of JavaScript 2018: Introduction&quot;&gt;2018.stateofjs.com/introduction/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptアンケートのState of JavaScript 2018の結果が公開された。&lt;br&gt;
言語、フレームワーク、データレイヤー、バックエンド、テスト、モバイルなどについてのアンケート結果と過去のデータからの推移についてが見られる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;measure-web-dev&quot;&gt;Measure  |  web.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/measure&quot; title=&quot;Measure  |  web.dev&quot;&gt;web.dev/measure&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;gool&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;指定したURLに対してLighthouseを動かしてパフォーマンスレポートを取得できるツール。&lt;br&gt;
Lighthouseのレポートをダウンロードできる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/11/pagespeed-insights-now-powered-by.html&quot; title=&quot;Chromium Blog: PageSpeed Insights, now powered by Lighthouse&quot;&gt;Chromium Blog: PageSpeed Insights, now powered by Lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;heydon-bruck-a-prototyping-system-built-with-web-components-and-the-houdini-paint-api&quot;&gt;Heydon/bruck: A prototyping system built with web components and the Houdini Paint API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Heydon/bruck&quot; title=&quot;Heydon/bruck: A prototyping system built with web components and the Houdini Paint API&quot;&gt;github.com/Heydon/bruck&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web ComponentsとCSS Paint APIを使ったワイヤーモックアップコンポーネントライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-accessibility-object-model-aom-aom&quot;&gt;The Accessibility Object Model (AOM) 日本語訳 | aom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://masup9.github.io/aom/&quot; title=&quot;The Accessibility Object Model (AOM) 日本語訳 | aom&quot;&gt;masup9.github.io/aom/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptからアクセシビリティツリーを操作するためのAccesiblity Object Modelドキュメントの日本語訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;home-web-dev&quot;&gt;Home  |  web.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/&quot; title=&quot;Home  |  web.dev&quot;&gt;web.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Googleのウェブパフォーマンス、セキュリティ、アクセシビリティ、SEOなどウェブ開発に関するドキュメントサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlewebcomponents-model-viewer-easily-display-interactive-3d-models-on-the-web-and-in-ar&quot;&gt;GoogleWebComponents/model-viewer: Easily display interactive 3D models on the web and in AR!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleWebComponents/model-viewer&quot; title=&quot;GoogleWebComponents/model-viewer: Easily display interactive 3D models on the web and in AR!&quot;&gt;github.com/GoogleWebComponents/model-viewer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;3D&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;glTF/GLB modelsを表示できるWeb Componentsライブラリ。&lt;br&gt;
Resize Observer、Web Components、WebXRなどいろいろなAPIを使って実装されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;heyscrumpy-tiptap-a-rich-text-editor-for-vue-js&quot;&gt;heyscrumpy/tiptap: A rich-text editor for Vue.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/heyscrumpy/tiptap&quot; title=&quot;heyscrumpy/tiptap: A rich-text editor for Vue.js&quot;&gt;github.com/heyscrumpy/tiptap&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ProsemirrorとVueベースのリッチエディタライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Nov 2018 11:18:50 +0900</pubDate>
        <link>https://jser.info/2018/11/20/typescript-3.2-rcchrome-dev-summitthe-state-of-javascript/</link>
        <guid isPermaLink="true">https://jser.info/2018/11/20/typescript-3.2-rcchrome-dev-summitthe-state-of-javascript/</guid>
        
        <category>typescript</category>
        
        <category>Chrome</category>
        
        <category>JavaScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-11-13のJS: Prettier 1.15のHTMLサポート、TypeScriptガイド、BigIntsのJavaScript実装</title>
        <description>&lt;p&gt;JSer.info #409 - コード整形ツールのPrettier 1.15がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/blog/2018/11/07/1.15.0.html&quot;&gt;Prettier 1.15: HTML, Vue, Angular and MDX Support · Prettier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prettier 1.15ではHTMLパーサを使い、HTML、Vue、Angularの整形をサポートしました。&lt;br&gt;
また、MarkdownにJSXを書ける&lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt;のサポートも行われています。&lt;br&gt;
その他のフォーマットの改善やエラーメッセージの改善なども行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2018/10/29/update-the-definitive-typescript-guide/&quot;&gt;The Definitive TypeScript Guide - Blog | SitePen&lt;/a&gt;という記事では、TypeScriptの主要な機能について紹介しています。&lt;/p&gt;

&lt;p&gt;TypeScriptのインストール方法から基本的な文法、基本的な型や応用的な型、型定義ファイルなどTypeScriptの概要を紹介しています。&lt;/p&gt;

&lt;p&gt;TypeScriptの公式ドキュメントと合わせて読むとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.typescriptlang.org/docs/home.html&quot;&gt;Documentation ·  TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/jsbi&quot;&gt;GoogleChromeLabs/jsbi: JSBI is a pure-JavaScript implementation of the official ECMAScript BigInt proposal.&lt;/a&gt;という、現在Stage 3のECMAScript Proposalである&lt;a href=&quot;https://github.com/tc39/proposal-bigint&quot;&gt;BigInt&lt;/a&gt;をJavaScriptで実装したライブラリが公開されています。&lt;/p&gt;

&lt;p&gt;BigIntは&lt;code&gt;1n + 1n&lt;/code&gt;のように構文としてのサポートも必要になるため、構文と同様の演算機能をもつクラスとして公開されています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;🔥 New: JSBI, a pure-JavaScript BigInt implementation 🔥&lt;br&gt; &lt;br&gt;JSBI makes it possible to use spec-compliant BigInt functionality *today*, in all browsers, without sacrificing compatibility.&lt;br&gt; &lt;a href=&quot;https://t.co/8kuiPBq9Hs&quot;&gt;https://t.co/8kuiPBq9Hs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Mathias Bynens (@mathias) &lt;a href=&quot;https://twitter.com/mathias/status/1060677466832818176?ref_src=twsrc%5Etfw&quot;&gt;November 8, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;BitIntは構文としてのサポートが必要となるため、ネイティブの実装が行われるまで利用できないという問題があります。&lt;a href=&quot;https://github.com/GoogleChromeLabs/jsbi&quot;&gt;JSBI&lt;/a&gt;では、同様の機能をもつ抽象レイヤーを提供することで、既存のブラウザなどでもBitInt相当の機能を使えるようにすることを目的としています。&lt;/p&gt;

&lt;p&gt;また、JSBIで書いたものをネイティブのBigIntに変換するBabel Pluginなどが今後予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/jsbi/issues/2&quot;&gt;Create a JSBI → BigInt transpiler · Issue #2 · GoogleChromeLabs/jsbi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1-15-html-vue-angular-and-mdx-support-prettier&quot;&gt;Prettier 1.15: HTML, Vue, Angular and MDX Support · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2018/11/07/1.15.0.html&quot; title=&quot;Prettier 1.15: HTML, Vue, Angular and MDX Support · Prettier&quot;&gt;prettier.io/blog/2018/11/07/1.15.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.15リリース。&lt;br&gt;
HTML/Vue/Angular/MDXのサポート。&lt;br&gt;
フォーマットの改善、エラーメッセージの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-beta-1-reduxjs-react-redux&quot;&gt;Release v6.0.0-beta.1 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v6.0.0-beta.1&quot; title=&quot;Release v6.0.0-beta.1 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v6.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;react-redux 6.0.0βリリース。&lt;br&gt;
React Context に対応した。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-69-webkit&quot;&gt;Release Notes for Safari Technology Preview 69 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8479/release-notes-for-safari-technology-preview-69/&quot; title=&quot;Release Notes for Safari Technology Preview 69 | WebKit&quot;&gt;webkit.org/blog/8479/release-notes-for-safari-technology-preview-69/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 69リリース。&lt;br&gt;
CSS Conic Gradientsがデフォルトで有効化、CSS Painting APIの対応改善、Web SQL利用時にコンソールへ警告メッセージを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-9-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.9.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/11/eslint-v5.9.0-released&quot; title=&quot;ESLint v5.9.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/11/eslint-v5.9.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.9.0リリース。&lt;br&gt;
&lt;code&gt;--fix-type&lt;/code&gt;オプションが追加され、&lt;code&gt;problem&lt;/code&gt;、&lt;code&gt;suggestion&lt;/code&gt;、&lt;code&gt;layout&lt;/code&gt;の種類を選択して修正を適応できるようになった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1-0-0-rc-2-avajs-ava&quot;&gt;Release 1.0.0-rc.2 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v1.0.0-rc.2&quot; title=&quot;Release 1.0.0-rc.2 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v1.0.0-rc.2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 1.0.0 RC2リリース。&lt;br&gt;
スナップショットテストの改善、TypeScriptの型チェック改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nystudio107-an-annotated-webpack-4-config-for-frontend-web&quot;&gt;nystudio107 | An Annotated webpack 4 Config for Frontend Web…&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nystudio107.com/blog/an-annotated-webpack-4-config-for-frontend-web-development&quot; title=&quot;nystudio107 | An Annotated webpack 4 Config for Frontend Web…&quot;&gt;nystudio107.com/blog/an-annotated-webpack-4-config-for-frontend-web-development&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4の設定についての解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fullstack-react-an-introduction-to-hooks-in-react&quot;&gt;Fullstack React: An Introduction to Hooks in React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fullstackreact.com/articles/an-introduction-to-hooks-in-react/&quot; title=&quot;Fullstack React: An Introduction to Hooks in React&quot;&gt;www.fullstackreact.com/articles/an-introduction-to-hooks-in-react/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;α公開されているReact Hooksの使い方やテスト方法についての解説記事。&lt;br&gt;
&lt;code&gt;useState&lt;/code&gt;などそれぞれのAPIについての挙動や使い方について解説している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-svg-patterns-as-backgrounds&quot;&gt;How to Use SVG Patterns as Backgrounds&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webdesign.tutsplus.com/tutorials/how-to-use-svg-patterns-as-backgrounds--cms-31507&quot; title=&quot;How to Use SVG Patterns as Backgrounds&quot;&gt;webdesign.tutsplus.com/tutorials/how-to-use-svg-patterns-as-backgrounds--cms-31507&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVGパターンを背景として使う方法についての解説記事。&lt;br&gt;
CSS TilingとSVG &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;要素でのやり方やサポートブラウザについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-test262-report-javascript-testing-web-standards-bocoup&quot;&gt;Announcing Test262 Report - javascript, testing, web standards - Bocoup&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bocoup.com/blog/announcing-test262-report&quot; title=&quot;Announcing Test262 Report - javascript, testing, web standards - Bocoup&quot;&gt;bocoup.com/blog/announcing-test262-report&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;各JavaScriptエンジンがECMAScriptの仕様テストであるTest262をどれだけパスしているかを一覧できるTest262 Reportというサイトについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://test262.report/&quot; title=&quot;Test262 Report&quot;&gt;Test262 Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-definitive-typescript-guide-blog-sitepen&quot;&gt;The Definitive TypeScript Guide - Blog | SitePen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2018/10/29/update-the-definitive-typescript-guide/&quot; title=&quot;The Definitive TypeScript Guide - Blog | SitePen&quot;&gt;www.sitepen.com/blog/2018/10/29/update-the-definitive-typescript-guide/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript初心者向けのガイド。&lt;br&gt;
コンパイル方法、TypeScriptの型の解説、Type Guards、型定義ファイルなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;leoafarias-neardb-simple-document-db-made-for-globally-distributed-reads&quot;&gt;leoafarias/neardb: Simple document db made for globally distributed reads.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leoafarias/neardb&quot; title=&quot;leoafarias/neardb: Simple document db made for globally distributed reads.&quot;&gt;github.com/leoafarias/neardb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS S3、Google Cloud Storageなどに対応したデータベースライブラリ。&lt;br&gt;
Cloudflare WorkerやLambda@Edgeなどで動かす目的のストレージライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sokra-rawact-poc-a-babel-plugin-which-compiles-react-js-components-into-native-dom-instructions-to-eliminate-the-need-for-the-react-library-at-runtime&quot;&gt;sokra/rawact: [POC] A babel plugin which compiles React.js components into native DOM instructions to eliminate the need for the react library at runtime.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sokra/rawact&quot; title=&quot;sokra/rawact: \[POC\] A babel plugin which compiles React.js components into native DOM instructions to eliminate the need for the react library at runtime.&quot;&gt;github.com/sokra/rawact&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactで書かれたコンポーネントをDOM APIで書かれたものへ変換するBabelプラグイン。&lt;br&gt;
ランタイムでReactを利用しなくても動くように変換する実験的なプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enquirer-enquirer-stylish-intuitive-and-user-friendly-prompt-system&quot;&gt;enquirer/enquirer: Stylish, intuitive and user-friendly prompt system.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/enquirer/enquirer&quot; title=&quot;enquirer/enquirer: Stylish, intuitive and user-friendly prompt system.&quot;&gt;github.com/enquirer/enquirer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ターミナルでの入力や選択などを補助するプロンプトライブラリ。&lt;br&gt;
値の種類別のプロンプトやアンケートの投票など高機能なCUIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-jsbi-jsbi-is-a-pure-javascript-implementation-of-the-official-ecmascript-bigint-proposal&quot;&gt;GoogleChromeLabs/jsbi: JSBI is a pure-JavaScript implementation of the official ECMAScript BigInt proposal.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/jsbi&quot; title=&quot;GoogleChromeLabs/jsbi: JSBI is a pure-JavaScript implementation of the official ECMAScript BigInt proposal.&quot;&gt;github.com/GoogleChromeLabs/jsbi&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BigIntをJavaScriptのオブジェクトとして実装したライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;evercoder-culori-a-general-purpose-color-library-for-javascript&quot;&gt;Evercoder/culori: 🌈 A general-purpose color library for JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Evercoder/culori&quot; title=&quot;Evercoder/culori: 🌈 A general-purpose color library for JavaScript.&quot;&gt;github.com/Evercoder/culori&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RGBやHSLなどの色空間の操作ライブラリ。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 13 Nov 2018 11:30:26 +0900</pubDate>
        <link>https://jser.info/2018/11/13/prettier-1.15htmltypescriptbigintsjavascript/</link>
        <guid isPermaLink="true">https://jser.info/2018/11/13/prettier-1.15htmltypescriptbigintsjavascript/</guid>
        
        <category>Prettier</category>
        
        <category>TypeScript</category>
        
        <category>BigInt</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-11-06のJS: Node.js 10.13.0(LTS)、React Hooks、Vueコンポーネントのテスト</title>
        <description>&lt;p&gt;JSer.info #408 - Node.js 10.13.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.13.0/&quot;&gt;Node v10.13.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このリリースでNode.js 10.xがLong Term Support (LTS)となりました。&lt;br&gt;
Node.js 10.xは2021年4月までサポートされます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Foundation Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを受けてApp Engineでは、Node.js 10をサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/application-development/announcing-nodejs-10-for-app-engine&quot;&gt;Node.js 10 available for App Engine, in lockstep with Long Term Support | Google Cloud Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889&quot;&gt;Making Sense of React Hooks – Dan Abramov – Medium&lt;/a&gt;という記事では、React v16.7.0-alphaで導入された&amp;quot;Hooks&amp;quot;のProposalについて書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot;&gt;Introducing Hooks – React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hooksが解決したい問題として巨大コンポーネント、重複ロジック、HOCなどの複雜なパターンをあげている。あわせてHooksの動作原理などについて書かれています。&lt;br&gt;
また、Hooksはまだ試験的なものであるため、RFCのIssueなどでフィードバックを求めています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/rfcs/pull/68&quot;&gt;RFC: React Hooks by sebmarkbage · Pull Request #68 · reactjs/rfcs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/tsuchikazu/vue-component-test&quot;&gt;1年間単体テストを書き続けた現場から送る Vue Component のテスト / Vue Component Test - Speaker Deck&lt;/a&gt;のスライドではVueコンポーネントのテストについて書かれています。&lt;/p&gt;

&lt;p&gt;ライフサイクル、Props/Vuex State、User Interactionの3種類に分けてテストの方法について紹介されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-1-0-facebook-create-react-app&quot;&gt;Release v2.1.0 · facebook/create-react-app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/releases/tag/v2.1.0&quot; title=&quot;Release v2.1.0 · facebook/create-react-app&quot;&gt;github.com/facebook/create-react-app/releases/tag/v2.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;create-react-app 2.1.0リリース。&lt;br&gt;
Babelを使ったTypeScriptサポート。&lt;br&gt;
&lt;code&gt;create-react-app my-app --typescript&lt;/code&gt;でTypeScriptプロジェクトとして作成できるようになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;video-js-7-3-responsive-layout-fill-mode-createlogger-video-js-blog&quot;&gt;Video.js 7.3: Responsive Layout, Fill Mode, createLogger | Video.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.videojs.com/video-js-7-3-responsive-layout-fill-mode-createlogger/&quot; title=&quot;Video.js 7.3: Responsive Layout, Fill Mode, createLogger | Video.js Blog&quot;&gt;blog.videojs.com/video-js-7-3-responsive-layout-fill-mode-createlogger/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;video.js 7.3リリース。&lt;br&gt;
Fill Modeをplayer modeに格上げ、&lt;code&gt;createLogger&lt;/code&gt;メソッドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v11-1-0-current-node-js&quot;&gt;Node v11.1.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.1.0/&quot; title=&quot;Node v11.1.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v11.1.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 11.1.0リリース。&lt;br&gt;
ICUのアップデート、REPLでトップレベル&lt;code&gt;await&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;read-me-squirrelly&quot;&gt;Read Me - Squirrelly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://squirrelly.js.org/&quot; title=&quot;Read Me - Squirrelly&quot;&gt;squirrelly.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ファイルサイズの小さなテンプレートエンジン。Handlebarsのようなカスタムヘルパー、delimiterの指定、フィルター、プリコンパイル、HTML以外への出力などに対応している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hackernoon.com/introducing-squirrelly-a-fast-lightweight-and-simple-js-template-engine-70a873d765c9&quot; title=&quot;Introducing Squirrelly: a fast, lightweight, and simple JS template engine&quot;&gt;Introducing Squirrelly: a fast, lightweight, and simple JS template engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-13-0-lts-node-js&quot;&gt;Node v10.13.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.13.0/&quot; title=&quot;Node v10.13.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.13.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.13.0リリース。 Node.js 10.xがLong Term Support (LTS)となり、2021年4月までメンテンスされる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v7-1-v8&quot;&gt;V8 release v7.1 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-71&quot; title=&quot;V8 release v7.1 · V8&quot;&gt;v8.dev/blog/v8-release-71&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v7.1リリース。&lt;br&gt;
パフォーマンスの最適化、Wasmで&lt;code&gt;postMessage&lt;/code&gt;をサポート。&lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt;のサポート、&lt;code&gt;globalThis&lt;/code&gt; Proposalをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-sense-of-react-hooks-dan-abramov-medium&quot;&gt;Making Sense of React Hooks – Dan Abramov – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889&quot; title=&quot;Making Sense of React Hooks – Dan Abramov – Medium&quot;&gt;medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React v16.7.0-alphaで導入された&amp;quot;Hooks&amp;quot;のProposalについて。&lt;/p&gt;

&lt;p&gt;Hooksが解決したい問題として巨大コンポーネント、重複ロジック、HOCなどの複雜なパターンをあげている。あわせてHooksの動作原理などについて書かれている。&lt;br&gt;
また、Hooksはまだ試験的なものであるためフィードバックなどを求めている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot; title=&quot;Introducing Hooks – React&quot;&gt;Introducing Hooks – React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/rfcs/pull/68&quot; title=&quot;RFC: React Hooks by sebmarkbage · Pull Request #68 · reactjs/rfcs&quot;&gt;RFC: React Hooks by sebmarkbage · Pull Request #68 · reactjs/rfcs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1hWb-lQW4NSG9yRpyyiAA_9Ktytd5lypLnVLhPX9vamE/edit#heading=h.83axxx51uiaq&quot; title=&quot;Array destructuring for multi-value returns (in light of React hooks) - Google ドキュメント&quot;&gt;Array destructuring for multi-value returns (in light of React hooks) - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cybozu.io/entry/2018/11/02/113000&quot; title=&quot;React Conf 2018のKeynoteで発表されたHooks、Concurrent Reactのまとめ - Cybozu Inside Out | サイボウズエンジニアのブログ&quot;&gt;React Conf 2018のKeynoteで発表されたHooks、Concurrent Reactのまとめ - Cybozu Inside Out | サイボウズエンジニアのブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-prototype-sst&quot;&gt;Node.jsにおけるprototype汚染攻撃への対策 - SSTエンジニアブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.securesky-tech.com/entry/2018/10/31/&quot; title=&quot;Node.jsにおけるprototype汚染攻撃への対策 - SSTエンジニアブログ&quot;&gt;techblog.securesky-tech.com/entry/2018/10/31/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prototype pollution攻撃への対応方法について。&lt;br&gt;
Mapや&lt;code&gt;Object.create(null)&lt;/code&gt;で&lt;code&gt;__proto__&lt;/code&gt;の上書きを防ぐ方法、ネイティブの実装を上書きしてしまう方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;build-a-bucket-list-travel-app-with-react-and-material-ui-part-0-appendto&quot;&gt;Build a Bucket List Travel App with React and Material-UI (part 0) | appendTo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://appendto.com/2018/10/build-a-bucket-listing-travel-app-with-react-and-material-ui/&quot; title=&quot;Build a Bucket List Travel App with React and Material-UI (part 0) | appendTo&quot;&gt;appendto.com/2018/10/build-a-bucket-listing-travel-app-with-react-and-material-ui/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactとMaterial UIを使ってトラベルウェブアプリを作る連載。&lt;br&gt;
スクレイピングしての候補データの取得、Pixabayを使っての画像取得、WikiVoyageを使ってので情報取得。&lt;br&gt;
それらの情報を表示するウェブアプリを作成するチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-kitchhike-tech-blog&quot;&gt;Reactで開発するチームが共通認識しておきたい重要な概念 - KitchHike Tech Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.kitchhike.com/entry/2018/10/31/233000&quot; title=&quot;Reactで開発するチームが共通認識しておきたい重要な概念 - KitchHike Tech Blog&quot;&gt;tech.kitchhike.com/entry/2018/10/31/233000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったチーム開発において認識を合わせてておくとスムーズな概念について。&lt;br&gt;
SFC、Flux/Redux、Context API、Renderパターン、SuspenseとHooksなどのトピックごとに解説とどのような方針をもって進めたかについて書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;japanese-why-vue-cli-needed-a-ui-and-what-you-can-do-with-it&quot;&gt;[JAPANESE] Why vue-cli needed a UI and what you can do with it&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://slides.com/akryum/vue-cli-18-3-jp#/&quot; title=&quot;\[JAPANESE\] Why vue-cli needed a UI and what you can do with it&quot;&gt;slides.com/akryum/vue-cli-18-3-jp#/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue CLIについてのスライド。&lt;br&gt;
Vue CLIは&amp;quot;Ease of Access&amp;quot;のために様々な機能をもっている。&lt;br&gt;
ビルドツールチェイン、&lt;code&gt;vue ui&lt;/code&gt;、プラグインシステムについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://slides.com/akryum/vue-cli-18-3#/&quot; title=&quot;Why vue-cli needed a UI and what you can do with it&quot;&gt;Why vue-cli needed a UI and what you can do with it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;1-vue-component-vue-component-test-speaker-deck&quot;&gt;1年間単体テストを書き続けた現場から送る Vue Component のテスト / Vue Component Test - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/tsuchikazu/vue-component-test&quot; title=&quot;1年間単体テストを書き続けた現場から送る Vue Component のテスト / Vue Component Test - Speaker Deck&quot;&gt;speakerdeck.com/tsuchikazu/vue-component-test&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueコンポーネントのテストについてのスライド。&lt;br&gt;
ライフサイクル、Props/Vuex State、User Interactionのテスト方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-performance-101-js-css-http-images-fonts-perfperfperf&quot;&gt;Web Performance 101: JS, CSS, HTTP, images &amp;amp; fonts | PerfPerfPerf&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://3perf.com/talks/web-perf-101/&quot; title=&quot;Web Performance 101: JS, CSS, HTTP, images &amp;amp; fonts | PerfPerfPerf&quot;&gt;3perf.com/talks/web-perf-101/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブパフォーマンスについてのスライドを文字起こししたもの。&lt;br&gt;
JavaScript、CSS、HTTP、Images、Fonts、Toolsについてそれぞれパフォーマンスの最適化についてのトピックが紹介されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gruns-irondb-a-relentless-key-value-store-for-the-browser&quot;&gt;gruns/irondb: A relentless key-value store for the browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gruns/irondb&quot; title=&quot;gruns/irondb: A relentless key-value store for the browser.&quot;&gt;github.com/gruns/irondb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cookie、IndexedDB、LocalStorageなどを重複して保存できるKey Valueストアライブラリ。&lt;br&gt;
Evercookieのように複数のストレージに保存することで、どれが消えても他のデータから復元できるようにしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;frontarm-async-javascript-cheatsheet-cheatsheet-for-promises-and-async-await&quot;&gt;frontarm/async-javascript-cheatsheet: Cheatsheet for promises and async/await&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/frontarm/async-javascript-cheatsheet&quot; title=&quot;frontarm/async-javascript-cheatsheet: Cheatsheet for promises and async/await&quot;&gt;github.com/frontarm/async-javascript-cheatsheet&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;チートシート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Async/Await、Promiseについてのチートシート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stencil&quot;&gt;Stencil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stenciljs.com/&quot; title=&quot;Stencil&quot;&gt;stenciljs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsフレームワークとコンパイラー。フレームワークに則ったコンポーネント&lt;br&gt;
を書きWeb Components(Custom Elements)へコンパイルするツール。&lt;br&gt;
TypeScriptやJSXをサポートし、ランタイムでコンポーネントのライフサイクル、非同期レンダリングなどをサポートしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chunqiuyiyu-ervy-bring-charts-to-terminal&quot;&gt;chunqiuyiyu/ervy: Bring charts to terminal.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chunqiuyiyu/ervy&quot; title=&quot;chunqiuyiyu/ervy: Bring charts to terminal.&quot;&gt;github.com/chunqiuyiyu/ervy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ターミナルにグラフを描画できるライブラリ。&lt;br&gt;
Bar, Pie, Bullet,  Donut, Gauge, Scatterなどのグラフを描画できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-carlo-web-rendering-surface-for-node-applications&quot;&gt;GoogleChromeLabs/carlo: Web rendering surface for Node applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/carlo&quot; title=&quot;GoogleChromeLabs/carlo: Web rendering surface for Node applications&quot;&gt;github.com/GoogleChromeLabs/carlo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ユーザー環境にインストール済みのChromeとPuppeteer経由で通信してNodeとBrowserを連携できる開発ツール。&lt;br&gt;
ElectronのようなChromeをWebViewとしたアプリ開発ができる。Nodeからデータを送るといったことができ、Node向けのGUIフレームワークとして利用できる。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 06 Nov 2018 11:10:18 +0900</pubDate>
        <link>https://jser.info/2018/11/06/node.js-10.13.0ltsreact-hooksvue/</link>
        <guid isPermaLink="true">https://jser.info/2018/11/06/node.js-10.13.0ltsreact-hooksvue/</guid>
        
        <category>node</category>
        
        <category>react</category>
        
        <category>vue</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
