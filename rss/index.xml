<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 05 Jun 2019 12:52:07 +0900</pubDate>
    <lastBuildDate>Wed, 05 Jun 2019 12:52:07 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>2019-06-04のJS: async.js 3.0.0(async/await対応)、AVA 2.0.0、Verdaccio 4(npm registry)</title>
        <description>&lt;p&gt;JSer.info #438 - 非同期処理のフローを扱うライブラリである&lt;a href=&quot;https://github.com/caolan/async&quot;&gt;Async&lt;/a&gt; 3がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/caolan/async/blob/master/CHANGELOG.md#v300&quot;&gt;https://github.com/caolan/async/blob/master/CHANGELOG.md#v300&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Async 3.0.0では&lt;code&gt;async.mapLimit&lt;/code&gt;などのAsyncのメソッドがPromiseを返すように変更されています。&lt;br&gt;
これにより、&lt;code&gt;async.mapLimit&lt;/code&gt;などのメソッドが&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;と組み合わせて利用できるようになっています。&lt;br&gt;
&lt;a href=&quot;https://github.com/caolan/async/blob/master/CHANGELOG.md#v230&quot;&gt;2.3.0&lt;/a&gt;で&lt;a href=&quot;https://github.com/caolan/async/pull/1390&quot;&gt;引数にAsync Functionを渡せる&lt;/a&gt;ようになっていました。さらに今回のリリースで&lt;code&gt;async.*&lt;/code&gt;のメソッドにコールバック関数を渡さなかった場合は、Promiseを返すようになっています。&lt;/p&gt;

&lt;p&gt;比較してみると次のようになると思います。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// DUMMY CODES&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;async&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://example.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2.3.0 &amp;lt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;asyncify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 2.3.0 &amp;gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 3.0.0 &amp;gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapLimit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また3.0でコードベースもES2015ベースとなったため、ES2015をサポートしていない実行環境はサポート外となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Node.jsのテストフレームワークである&lt;a href=&quot;https://github.com/avajs/ava&quot;&gt;AVA&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v2.0.0&quot;&gt;Release 2.0.0 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 8.9.4以降のサポートのみとなっています。&lt;br&gt;
破壊的な変更としては、snapshotが作られていない場合はCIで失敗するように、assertionメッセージが文字列ではない場合は例外を投げるようになるといった変更が含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;OSSなnpm package registry serverの実装である&lt;a href=&quot;https://verdaccio.org/&quot;&gt;Verdaccio&lt;/a&gt; 4がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://verdaccio.org/blog/2019/05/19/15-verdaccio-4-release.html&quot;&gt;Verdaccio 4 released !!! · Verdaccio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://verdaccio.org/&quot;&gt;Verdaccio&lt;/a&gt;はもともと&lt;a href=&quot;https://github.com/rlidwka/sinopia&quot;&gt;sinopia&lt;/a&gt;というnpm registry serverをforkしたもので、&lt;br&gt;
今回のリリースでsinopia時代の実装やウェブUIを刷新しています。&lt;br&gt;
検索UI、Register情報、パッケージの詳細画面などのUIが変更されています。&lt;/p&gt;

&lt;p&gt;同じくnpm package registryの話題として、&lt;a href=&quot;https://www.npmjs.com/about&quot;&gt;npm inc&lt;/a&gt;の元CTOである@&lt;a href=&quot;https://github.com/ceejbot&quot;&gt;ceejbot&lt;/a&gt;が&lt;a href=&quot;https://github.com/entropic-dev/entropic&quot;&gt;Entropic&lt;/a&gt;というFederatedなnpm package registryを作成するという発表が&lt;a href=&quot;https://2019.jsconf.eu/&quot;&gt;JSConf EU 2019&lt;/a&gt;でありました。&lt;br&gt;
なぜ新しいnpm package registryを作ろうとしているかについてはJSConf EUの動画とスライドが上がっているので見てみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MO8hZlgK5zc&amp;list=PL37ZVnwpeshHwJPVBqEnZild7QHWhdufu&amp;index=3&amp;t=0s&quot;&gt;The economics of open source by C J Silverio | JSConf EU 2019 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ceejbot/economics-of-package-management&quot;&gt;ceejbot/economics-of-package-management: ceejbot&amp;#39;s talk from JSConfEU 2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async-changelog-md-at-master-caolan-async&quot;&gt;async/CHANGELOG.md at master · caolan/async&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/caolan/async/blob/master/CHANGELOG.md#v300&quot; title=&quot;async/CHANGELOG.md at master · caolan/async&quot;&gt;github.com/caolan/async/blob/master/CHANGELOG.md#v300&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;async 3.0.0リリース。&lt;br&gt;
&lt;code&gt;async&lt;/code&gt;モジュールのメソッドがcallbackを指定していない場合に、Promiseを返すように、コレクションメソッドでAsync Generatorのサポート、&lt;code&gt;cargoQueue&lt;/code&gt;の追加など。&lt;br&gt;
また、ES2015のコードベースになったため、古いブラウザやNode 4以下のサポート終了。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-16-0-lts-node-js&quot;&gt;Node v10.16.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.16.0/&quot; title=&quot;Node v10.16.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.16.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v10.16.0(LTS)リリース。&lt;br&gt;
npm 6.9.0への更新、&lt;code&gt;zlib&lt;/code&gt;モジュールのbrotliサポートのバックポート、&lt;code&gt;events&lt;/code&gt;モジュールの&lt;code&gt;once&lt;/code&gt;メソッドのバックポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;w3c-and-whatwg-to-work-together-to-advance-the-open-web-platform-w3c-blog&quot;&gt;W3C and WHATWG to work together to advance the open Web platform | W3C Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/2019/05/w3c-and-whatwg-to-work-together-to-advance-the-open-web-platform/&quot; title=&quot;W3C and WHATWG to work together to advance the open Web platform | W3C Blog&quot;&gt;www.w3.org/blog/2019/05/w3c-and-whatwg-to-work-together-to-advance-the-open-web-platform/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;W3CはHTMLとDOMに関する標準策定をやめ、WHATWGが策定しているLiving Standardを共同で策定していくことに合意した。&lt;br&gt;
また、WHATWGはレビュードラフトと呼ばれる定期的なスナップショットをだし、これをW3Cプロセスに従う形で勧告まで進めるなどのプロセスの変更について書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;version-8-of-angular-smaller-bundles-cli-apis-and-alignment-with-the-ecosystem&quot;&gt;Version 8 of Angular — Smaller bundles, CLI APIs, and alignment with the ecosystem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/version-8-of-angular-smaller-bundles-cli-apis-and-alignment-with-the-ecosystem-af0261112a27&quot; title=&quot;Version 8 of Angular — Smaller bundles, CLI APIs, and alignment with the ecosystem&quot;&gt;blog.angular.io/version-8-of-angular-smaller-bundles-cli-apis-and-alignment-with-the-ecosystem-af0261112a27&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 8.0.0リリース。&lt;br&gt;
modern build(es2015)とlegacy build(es5)を出し分けロードするDifferential Loadingの有効化。&lt;br&gt;
Route ConfigでDynamic Importsを使うように、CLI向けにBuilders APIの追加。&lt;br&gt;
Ivyを&lt;code&gt;enableIvy&lt;/code&gt;で試せるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/introducing-cli-builders-d012d4489f1b&quot; title=&quot;Introducing CLI Builders – Angular Blog&quot;&gt;Introducing CLI Builders – Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#800-2019-05-28&quot; title=&quot;angular/CHANGELOG.md at master · angular/angular&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-83-webkit&quot;&gt;Release Notes for Safari Technology Preview 83 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8967/release-notes-for-safari-technology-preview-83/&quot; title=&quot;Release Notes for Safari Technology Preview 83 | WebKit&quot;&gt;webkit.org/blog/8967/release-notes-for-safari-technology-preview-83/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 83リリース。&lt;br&gt;
WebAuthNのデフォルト有効化、CSSの&lt;code&gt;line-break: anywhere&lt;/code&gt;、&lt;code&gt;display: flow-root&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-19-0-axios-axios&quot;&gt;Release v0.19.0 · axios/axios&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/axios/axios/releases/tag/v0.19.0&quot; title=&quot;Release v0.19.0 · axios/axios&quot;&gt;github.com/axios/axios/releases/tag/v0.19.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;axios 0.19.0リリース。&lt;br&gt;
Node.jsでレスポンスがgzipなどでかつ204の場合に例外が発生する問題を修正、&lt;code&gt;maxContentLength&lt;/code&gt;の設定を無視してリクエストを継続するDosにつながる問題を修正など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/releases/tag/v0.18.1&quot; title=&quot;Release v0.18.1 · axios/axios&quot;&gt;Release v0.18.1 · axios/axios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/axios/axios/pull/1485&quot; title=&quot;Destroy stream on exceeding maxContentLength (fixes #1098) by resure · Pull Request #1485 · axios/axios&quot;&gt;Destroy stream on exceeding maxContentLength (fixes #1098) by resure · Pull Request #1485 · axios/axios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-5-typescript&quot;&gt;Announcing TypeScript 3.5 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-5/&quot; title=&quot;Announcing TypeScript 3.5 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-3-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.5リリース。&lt;br&gt;
型チェックのパフォーマンス改善、&lt;code&gt;--incremental&lt;/code&gt;ビルドのパフォーマンス改善、&lt;code&gt;Omit&lt;/code&gt;ヘルパー型の追加など。&lt;br&gt;
破壊的な変更として型パラメータの型が不明な場合の型が&lt;code&gt;{}&lt;/code&gt;から&lt;code&gt;unknown&lt;/code&gt;へ変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What&amp;#x27;s-new-in-TypeScript#typescript-35&quot; title=&quot;What&amp;amp;#x27;s new in TypeScript · microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-35&quot; title=&quot;Breaking Changes · microsoft/TypeScript Wiki&quot;&gt;Breaking Changes · microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/e7bbaff54db8fbf986bb&quot; title=&quot;TypeScript v3.5.1 変更点 - Qiita&quot;&gt;TypeScript v3.5.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-8-0-nuxt-nuxt-js&quot;&gt;Release v2.8.0 · nuxt/nuxt.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.8.0&quot; title=&quot;Release v2.8.0 · nuxt/nuxt.js&quot;&gt;github.com/nuxt/nuxt.js/releases/tag/v2.8.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt.js 2.8.0リリース。&lt;br&gt;
SSRログの表示を改善、ビルド中のインジケータ表示の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2-0-0-avajs-ava&quot;&gt;Release 2.0.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v2.0.0&quot; title=&quot;Release 2.0.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 2.0.0リリース。&lt;br&gt;
Node.js 8.9.4以降のサポート、snapshotが作られていない場合はCIで失敗するように、assertionメッセージが文字列ではない場合は例外を投げるようになるなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;verdaccio-4-released-verdaccio&quot;&gt;Verdaccio 4 released !!! · Verdaccio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://verdaccio.org/blog/2019/05/19/15-verdaccio-4-release.html&quot; title=&quot;Verdaccio 4 released !!! · Verdaccio&quot;&gt;verdaccio.org/blog/2019/05/19/15-verdaccio-4-release.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm registry serverのOSS実装であるVerdaccio 4リリース。&lt;br&gt;
UIの刷新、&lt;code&gt;npm star&lt;/code&gt;/&lt;code&gt;npm profile&lt;/code&gt;のサポート、JWTサポート、Pluginsサポートの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-76-web-google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 76)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/05/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 76)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2019/05/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 76の開発者ツールの変更点について。&lt;br&gt;
ネットワークパネル設定のUIの変更、WebSocketメッセージをHARファイルとしてエクスポートできるように、合計メモリ消費量のリアルタイム表示、Background Fetchのデバッグ機能など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript&quot;&gt;イメージで伝われ！図解JavaScriptの非同期処理 - メモを揉め&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://memowomome.hatenablog.com/entry/js_async_viz&quot; title=&quot;イメージで伝われ！図解JavaScriptの非同期処理 - メモを揉め&quot;&gt;memowomome.hatenablog.com/entry/js_async_viz&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの同期処理と非同期処理の動作の違い、非同期処理の実装方法や考え方について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconf-eu-2019-youtube&quot;&gt;JSConf EU 2019 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL37ZVnwpeshHwJPVBqEnZild7QHWhdufu&quot; title=&quot;JSConf EU 2019 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL37ZVnwpeshHwJPVBqEnZild7QHWhdufu&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSConf EU 2019の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2019.jsconf.eu/&quot; title=&quot;JSConf EU 2019&quot;&gt;JSConf EU 2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zdog-round-flat-designer-friendly-pseudo-3d-engine-for-canvas-and-svg&quot;&gt;Zdog · Round, flat, designer-friendly pseudo-3D engine for canvas and SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zzz.dog/&quot; title=&quot;Zdog · Round, flat, designer-friendly pseudo-3D engine for canvas and SVG&quot;&gt;zzz.dog/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;擬似的な3D描画を行うCanvas、SVGライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;atomicojs-atomico-small-library-for-the-creation-of-interfaces-based-on-web-components-only-using-functions-and-hooks&quot;&gt;atomicojs/atomico: Small library for the creation of interfaces based on web-components, only using functions and hooks.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/atomicojs/atomico&quot; title=&quot;atomicojs/atomico: Small library for the creation of interfaces based on web-components, only using functions and hooks.&quot;&gt;github.com/atomicojs/atomico&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web ComponentsベースのJSXでのDOM定義とReact HooksライクなAPIを提供するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mholt-papaparse-fast-and-powerful-csv-delimited-text-parser-that-gracefully-handles-large-files-and-malformed-input&quot;&gt;mholt/PapaParse: Fast and powerful CSV (delimited text) parser that gracefully handles large files and malformed input&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mholt/PapaParse&quot; title=&quot;mholt/PapaParse: Fast and powerful CSV (delimited text) parser that gracefully handles large files and malformed input&quot;&gt;github.com/mholt/PapaParse&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSVパーサライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 Jun 2019 09:22:44 +0900</pubDate>
        <link>https://jser.info/2019/06/04/async.js-3.0.0asyncawaitava-2.0.0verdaccio-4npm-registry/</link>
        <guid isPermaLink="true">https://jser.info/2019/06/04/async.js-3.0.0asyncawaitava-2.0.0verdaccio-4npm-registry/</guid>
        
        <category>node.js</category>
        
        <category>testing</category>
        
        <category>npm</category>
        
        <category>registry</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-05-28のJS: express 4.17.0、Firefox 67.0、TypeScriptのstrictNullCheckを有効化するステップ</title>
        <description>&lt;p&gt;JSer.info #437 - Node.jsサーバフレームワークのexpress 4.17.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expressjs/express/releases/tag/4.17.0&quot;&gt;Release 4.17.0 · expressjs/express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ビルトインmiddlewareとしてBodyをBufferへパースする&lt;code&gt;express.raw&lt;/code&gt;、Bodyをテキストにパースする&lt;code&gt;express.text&lt;/code&gt;の追加されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これはもともとbodyParserにあったものがexposeされてた形になっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expressjs/express/pull/3455&quot;&gt;expose text middleware of bodyparser by ilyapx · Pull Request #3455 · expressjs/express&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expressjs/express/pull/3708&quot;&gt;Expose bodyParser.raw on express by amitzur · Pull Request #3708 · expressjs/express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ただし、これらのmiddlewareは現在開発中の5.0では別の場所に移動する可能もありそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expressjs/discussions/issues/78&quot;&gt;Export location of express built-in middlewares · Issue #78 · expressjs/discussions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expressjs/express/milestone/11&quot;&gt;5.0 Milestone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 67.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/67.0/releasenotes/&quot;&gt;Firefox 67.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Mozilla/Firefox/Releases/67&quot;&gt;Firefox 67 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/67/&quot;&gt;Firefox 67 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;開発者ツールやブラウザのパフォーマンスが改善されています。&lt;br&gt;
開発者ツールについては次のページで詳しく解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/05/faster-smarter-javascript-debugging-in-firefox/&quot;&gt;Faster smarter JavaScript debugging in Firefox DevTools - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、あまり利用されていなかったことを理由に開発者ツールからCanvas debugger、Web Audio Editor、Shader editorが削除されています。&lt;br&gt;
代替ツールについても紹介されているので、詳しくは次のページをみてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Tools/Deprecated_tools&quot;&gt;Deprecated tools - Firefox Developer Tools | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他にもCSSの&lt;code&gt;prefers-color-scheme&lt;/code&gt;のサポート、&lt;code&gt;Cross-Origin-Opener-Policy&lt;/code&gt; HTTPヘッダのサポート、private modeでlocalStorageへのアクセス時に例外が発生しなくするといった変更が含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2019/window-localstorage-no-longer-throws-securityerror-when-blocked-due-to-privacy-settings/&quot;&gt;window.localStorage がプライバシー設定によってブロックされた場合に SecurityError を投げなくなりました | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v12-3-0-current-node-js&quot;&gt;Node v12.3.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.3.0/&quot; title=&quot;Node v12.3.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v12.3.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js v12.3.0リリース。&lt;br&gt;
&lt;code&gt;wasm&lt;/code&gt;ファイルをimportできる&lt;code&gt;--experimental-wasm-modules&lt;/code&gt;オプションの追加、&lt;code&gt;Readable.from&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-10-released&quot;&gt;Ember.js - Ember 3.10 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.emberjs.com/2019/05/21/ember-3-10-released.html&quot; title=&quot;Ember.js - Ember 3.10 Released&quot;&gt;blog.emberjs.com/2019/05/21/ember-3-10-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.10リリース。&lt;br&gt;
ネストしたコンポーネントやビルトインコンポーネントを&lt;code&gt;&amp;lt;Input /&amp;gt;&lt;/code&gt;のようにAngle bracketで記述できるように、Decoratorのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4-17-0-expressjs-express&quot;&gt;Release 4.17.0 · expressjs/express&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/expressjs/express/releases/tag/4.17.0&quot; title=&quot;Release 4.17.0 · expressjs/express&quot;&gt;github.com/expressjs/express/releases/tag/4.17.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;express 4.17.0リリース。 middlewareとしてBodyをBufferへパースする&lt;code&gt;express.raw&lt;/code&gt;、Bodyをテキストにパースする&lt;code&gt;express.text&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;X-Forwarded-Host&lt;/code&gt;でカンマ区切りの複数Hostに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-67-0-see-all-new-features-updates-and-fixes&quot;&gt;Firefox 67.0, See All New Features, Updates and Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/67.0/releasenotes/&quot; title=&quot;Firefox 67.0, See All New Features, Updates and Fixes&quot;&gt;www.mozilla.org/en-US/firefox/67.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 67.0リリース。&lt;br&gt;
パフォーマンスや開発者ツールの改善、&lt;code&gt;Cross-Origin-Opener-Policy&lt;/code&gt;の実装。&lt;br&gt;
開発者ツールからCanvas debugger、Web Audio Editor、Shader editorを削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Mozilla/Firefox/Releases/67&quot; title=&quot;Firefox 67 for developers - Mozilla | MDN&quot;&gt;Firefox 67 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Tools/Deprecated_tools&quot; title=&quot;Deprecated tools - Firefox Developer Tools | MDN&quot;&gt;Deprecated tools - Firefox Developer Tools | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/67/&quot; title=&quot;Firefox 67 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 67 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;folding-the-dom-josh-w-comeaus-blog&quot;&gt;Folding the DOM - Josh W. Comeau&amp;#39;s Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.joshwcomeau.com/posts/folding-the-dom/&quot; title=&quot;Folding the DOM - Josh W. Comeau&amp;#39;s Blog&quot;&gt;www.joshwcomeau.com/posts/folding-the-dom/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを使って画像の折りたたみ表現を実装していくチュートリアル。&lt;br&gt;
Position、Transform、Perspectiveを組み合わせて折りたたみのアニメーションを実装していく話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strict-null-checking-the-visual-studio-code-codebase&quot;&gt;Strict null checking the Visual Studio Code codebase&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/blogs/2019/05/23/strict-null&quot; title=&quot;Strict null checking the Visual Studio Code codebase&quot;&gt;code.visualstudio.com/blogs/2019/05/23/strict-null&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;VSCodeのコードベースでTypeScriptのstrict null checkを有効化した話。&lt;br&gt;
&lt;code&gt;strictNullCheck&lt;/code&gt;が&lt;code&gt;false&lt;/code&gt;のときによく起きていた問題と1800ファイルあるコードをどのように修正していったかについて。&lt;br&gt;
&lt;code&gt;strictNullCheck&lt;/code&gt;を有効化した&lt;code&gt;tsconfig.json&lt;/code&gt;を作り、&lt;code&gt;files&lt;/code&gt;に追加しながら修正していった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;graphics-team-ships-webrender-mvp-mozilla-gfx-team-blog&quot;&gt;Graphics Team ships WebRender MVP! – Mozilla Gfx Team Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mozillagfx.wordpress.com/2019/05/21/graphics-team-ships-webrender-mvp/&quot; title=&quot;Graphics Team ships WebRender MVP! – Mozilla Gfx Team Blog&quot;&gt;mozillagfx.wordpress.com/2019/05/21/graphics-team-ships-webrender-mvp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 67でNVIDIAのグラフィックカードを利用してるユーザー(4%)向けて、GPUベースのレンダラであるWebRenderをロールアウトしていくリリーススケジュールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-errors-in-vue-js&quot;&gt;Handling Errors in Vue.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.raymondcamden.com/2019/05/01/handling-errors-in-vuejs&quot; title=&quot;Handling Errors in Vue.js&quot;&gt;www.raymondcamden.com/2019/05/01/handling-errors-in-vuejs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueでのエラーハンドリングについての記事。&lt;br&gt;
&lt;code&gt;Vue.config.errorHandler&lt;/code&gt;、&lt;code&gt;Vue.config.warnHandler&lt;/code&gt;、&lt;code&gt;renderError&lt;/code&gt;、&lt;code&gt;errorCaptured&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;paint-holding-reducing-the-flash-of-white-on-same-origin-navigations-web-google-developers&quot;&gt;Paint Holding - reducing the flash of white on same-origin navigations  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/05/paint-holding&quot; title=&quot;Paint Holding - reducing the flash of white on same-origin navigations  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2019/05/paint-holding&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;dart&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 76でページ遷移時にページを真っ白にするのではなく、最後の描画を維持した状態で切り替わるようにするPaint Holdingという仕組みが入るという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spa-hub-web&quot;&gt;SPAにおける状態管理: 関数型のアプローチも取り入れるフロントエンド系アーキテクチャの変遷 - エンジニアHub｜若手Webエンジニアのキャリアを考える！&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://employment.en-japan.com/engineerhub/entry/2019/05/23/103000&quot; title=&quot;SPAにおける状態管理: 関数型のアプローチも取り入れるフロントエンド系アーキテクチャの変遷 - エンジニアHub｜若手Webエンジニアのキャリアを考える！&quot;&gt;employment.en-japan.com/engineerhub/entry/2019/05/23/103000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SPAにおける状態管理の変化について。&lt;br&gt;
Backbone.jsでのModel/View/Controller、Two Way Data-Binding、Fluxなどの状態管理の問題と解決したことについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassembly-at-ebay-a-real-world-use-case&quot;&gt;WebAssembly at eBay: A Real-World Use Case&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ebayinc.com/stories/blogs/tech/webassembly-at-ebay-a-real-world-use-case/&quot; title=&quot;WebAssembly at eBay: A Real-World Use Case&quot;&gt;www.ebayinc.com/stories/blogs/tech/webassembly-at-ebay-a-real-world-use-case/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのユースケースとしてバーコードリーダを実装した話。&lt;br&gt;
C++からemscriptenでコンパイルしたwasmを使うことで、JavaScriptの実装よりもFPSが上がった。&lt;br&gt;
しかし、カメラの特性により認識率がいまいち上がらず、C++の実装2つとJavaScriptの実装を組み合わせて利用した話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wagerfield-parallax-parallax-engine-that-reacts-to-the-orientation-of-a-smart-device&quot;&gt;wagerfield/parallax: Parallax Engine that reacts to the orientation of a smart device&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wagerfield/parallax&quot; title=&quot;wagerfield/parallax: Parallax Engine that reacts to the orientation of a smart device&quot;&gt;github.com/wagerfield/parallax&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザのViewportのサイズやスクロール、マウスの動きなどの変化を監視できるライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;projectfluent-fluent-js-javascript-implementation-of-project-fluent&quot;&gt;projectfluent/fluent.js: JavaScript implementation of Project Fluent&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/projectfluent/fluent.js&quot; title=&quot;projectfluent/fluent.js: JavaScript implementation of Project Fluent&quot;&gt;github.com/projectfluent/fluent.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ローカライズフレームワーク。&lt;br&gt;
FTLという構文で記述し、&lt;code&gt;Intl&lt;/code&gt;オブジェクトをベースにしたローカライズを行う。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yankouskia-hurried-javascript-library-for-parallel-code-execution&quot;&gt;yankouskia/hurried: ⚡️ JavaScript library for parallel code execution&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yankouskia/hurried&quot; title=&quot;yankouskia/hurried: ⚡️ JavaScript library for parallel code execution&quot;&gt;github.com/yankouskia/hurried&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;worker_thread&lt;/code&gt;モジュールを使ったNode.js向けのThreadライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu-exponential-backoff-generator-exponential-backoff-generator-provide-robust-retry-function&quot;&gt;azu/exponential-backoff-generator: Exponential backoff generator. Provide robust retry function.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/exponential-backoff-generator&quot; title=&quot;azu/exponential-backoff-generator: Exponential backoff generator. Provide robust retry function.&quot;&gt;github.com/azu/exponential-backoff-generator&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Generatorを使ったExponential backoffライブラリ。&lt;br&gt;
async/awaitと組み合わせて非同期処理のリトライを&lt;code&gt;for...of&lt;/code&gt;で記述できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sghall-react-vertex-react-vertex-hooks-based-webgl-library-for-react&quot;&gt;sghall/react-vertex: React Vertex | Hooks-based WebGL library for React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sghall/react-vertex&quot; title=&quot;sghall/react-vertex: React Vertex | Hooks-based WebGL library for React&quot;&gt;github.com/sghall/react-vertex&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HooksベースなWebGLを扱うReactコンポーネント&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rocketseat-unform-reactjs-form-library-to-create-uncontrolled-form-structures-with-nested-fields-validations-and-much-more&quot;&gt;Rocketseat/unform: ReactJS form library to create uncontrolled form structures with nested fields, validations and much more!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Rocketseat/unform&quot; title=&quot;Rocketseat/unform: ReactJS form library to create uncontrolled form structures with nested fields, validations and much more!&quot;&gt;github.com/Rocketseat/unform&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Uncontrolledなフォームを扱うReactコンポーネント。&lt;br&gt;
バリデーション、構造的なデータ、リセットなどの機能を提供している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vitalets-await-timeout-a-promise-based-api-for-settimeout-cleartimeout&quot;&gt;vitalets/await-timeout: A Promise-based API for setTimeout / clearTimeout&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitalets/await-timeout&quot; title=&quot;vitalets/await-timeout: A Promise-based API for setTimeout / clearTimeout&quot;&gt;github.com/vitalets/await-timeout&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Promiseベースの&lt;code&gt;setTimeout&lt;/code&gt;、&lt;code&gt;clearTimeout&lt;/code&gt;のラッパーライブラリ。&lt;br&gt;
既存のPromiseオブジェクトてもタイムアウトを設定できる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 28 May 2019 10:02:25 +0900</pubDate>
        <link>https://jser.info/2019/05/28/express-4.17.0firefox-67.0typescriptstrictnullcheck/</link>
        <guid isPermaLink="true">https://jser.info/2019/05/28/express-4.17.0firefox-67.0typescriptstrictnullcheck/</guid>
        
        <category>express</category>
        
        <category>node.js</category>
        
        <category>firefox</category>
        
        <category>TypeScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-05-21のJS: TypeScript 3.5 RC、Firefox DevTools改善、Accessibility Insights(アクセシビリティテスト) </title>
        <description>&lt;p&gt;JSer.info #436 - TypeScript 3.5 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-5-rc/&quot;&gt;Announcing TypeScript 3.5 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/30555&quot;&gt;TypeScript 3.5 Iteration Plan · Issue #30555 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-35&quot;&gt;Breaking Changes · microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;型チェックと&lt;code&gt;--incremental&lt;/code&gt;オプションを使ったビルドのパフォーマンス改善がされています。&lt;br&gt;
また、&lt;code&gt;Omit&lt;/code&gt;ヘルパー型が&lt;code&gt;lib.d.ts&lt;/code&gt;に追加、Union型におけるプロパティチェックの改善なども行われています。&lt;/p&gt;

&lt;p&gt;破壊的な変更としてGeneric type parameterのデフォルトが&lt;code&gt;{}&lt;/code&gt;から&lt;code&gt;unknown&lt;/code&gt;へと変更されています。&lt;/p&gt;

&lt;p&gt;3.4までは次のようなコードにおける&lt;code&gt;T&lt;/code&gt;は何も&lt;code&gt;extends&lt;/code&gt;していない場合は&lt;code&gt;{}&lt;/code&gt;として解決されていました。&lt;br&gt;
3.5からは&lt;code&gt;T&lt;/code&gt;が&lt;code&gt;unknown&lt;/code&gt;型として解決されるようになります。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//           ~~~~~~~~ error! Property 'toString' does not exist on type 'T'.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;簡単なワークアラウンドとしては明示的に&lt;code&gt;T&lt;/code&gt;のデフォルトを&lt;code&gt;{}&lt;/code&gt;型にすることです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、&lt;code&gt;tsconfig.json&lt;/code&gt;で&lt;code&gt;target:es5&lt;/code&gt;の場合に&lt;code&gt;Object.keys&lt;/code&gt;がプリミティブ型を受け入れないように修正されました。&lt;br&gt;
これは、ES5までは&lt;code&gt;Object.keys(10)&lt;/code&gt;のようなコードは例外が発生するのがECMAScriptの仕様だったため、それに合わせる修正です。&lt;br&gt;
一方で、ES2015からは&lt;code&gt;Object.keys(10)&lt;/code&gt;は例外が発生しないのがECMAScriptの仕様なので、TypeScriptもそれに合わせています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/teppeis/c50743a60832560aa1df&quot;&gt;Break the Web: Object staticメソッドがES6で仕様変更になった件について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それ以外にも細かい破壊的な変更があるので詳しくは&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-35&quot;&gt;Breaking Changes&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://accessibilityinsights.io/&quot;&gt;Accessibility Insights&lt;/a&gt;というウェブサイトやWindowsアプリケーションのアクセシビリティテストツールが公開されています。&lt;br&gt;
ウェブ向けではChromeや&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/05/20/microsoft-edge-macos-canary-preview/&quot;&gt;macOS版も公開された&lt;/a&gt;MSEdgeのInside Preview向けのブラウザ拡張が公開されています。&lt;/p&gt;

&lt;p&gt;FastPassとAssessmentの2つのシナリオでのアクセシビリティのテストをサポートしていて、自動チェックとシナリオ元にした手動チェックを行えます。&lt;br&gt;
また、Tabキーのフォーカス移動の可視化、カラーテスト、WAI-ARIAのLandmarks表示などアクセシビリティテストの補助機能も用意されています。&lt;/p&gt;

&lt;p&gt;次のページで使い方などが解説されているので、興味がある人は見てみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://accessibilityinsights.io/docs/en/web/overview&quot;&gt;Accessibility Insights for Web · Accessibility Insights&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-14-0-lerna-lerna&quot;&gt;Release v3.14.0 · lerna/lerna&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lerna/lerna/releases/tag/v3.14.0&quot; title=&quot;Release v3.14.0 · lerna/lerna&quot;&gt;github.com/lerna/lerna/releases/tag/v3.14.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;monorepo管理ツールのlerna 3.14.0リリース。&lt;br&gt;
npm publish時の2要素認証(OTP)のサポート、&lt;code&gt;--conventional-prerelease&lt;/code&gt;と&lt;code&gt;--conventional-graduate&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-7-0-nuxt-nuxt-js&quot;&gt;Release v2.7.0 · nuxt/nuxt.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.7.0&quot; title=&quot;Release v2.7.0 · nuxt/nuxt.js&quot;&gt;github.com/nuxt/nuxt.js/releases/tag/v2.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt.js 2.7.0リリース。&lt;br&gt;
サーバサイドのログもブラウザコンソールに表示されるように、&lt;code&gt;store/&lt;/code&gt;ディレクトリのファイル監視の改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/potato4d/items/43b4f17c73aebc7a2154&quot; title=&quot;Nuxt.js v2.7.0 の変更点と注目のポイントまとめ - Qiita&quot;&gt;Nuxt.js v2.7.0 の変更点と注目のポイントまとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-5-rc-typescript&quot;&gt;Announcing TypeScript 3.5 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-5-rc/&quot; title=&quot;Announcing TypeScript 3.5 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-3-5-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.5 RCリリース。&lt;br&gt;
型チェックとビルドのパフォーマンス改善、&lt;code&gt;Omit&lt;/code&gt;ヘルパー型を追加、Union型の改善など。&lt;br&gt;
破壊的な変更としてGeneric type parameterのデフォルトが&lt;code&gt;{}&lt;/code&gt;から&lt;code&gt;unknown&lt;/code&gt;へと変更、&lt;code&gt;target:es5&lt;/code&gt;時に&lt;code&gt;Object.keys&lt;/code&gt;がプリミティブ型を受け取らないように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v7-5-v8&quot;&gt;V8 release v7.5 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-75&quot; title=&quot;V8 release v7.5 · V8&quot;&gt;v8.dev/blog/v8-release-75&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v7.5リリース。&lt;br&gt;
WebAssemblyのコンパイル結果を暗黙的にキャッシュする変更、ECMAScript ProposalのNumeric separatorsを実装。&lt;br&gt;
ネットワークからスクリプトを読み込みながらパースする際に、メインスレッドによってブロックされる問題を解消など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-82-webkit&quot;&gt;Release Notes for Safari Technology Preview 82 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8921/release-notes-for-safari-technology-preview-82/&quot; title=&quot;Release Notes for Safari Technology Preview 82 | WebKit&quot;&gt;webkit.org/blog/8921/release-notes-for-safari-technology-preview-82/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 82リリース。&lt;br&gt;
Fetch APIの&lt;code&gt;keepAlive&lt;/code&gt;オプションのサポート、Web GPU APIを&lt;code&gt;navigator.gpu&lt;/code&gt;に移動など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-first-microsoft-edge-preview-builds-for-macos-microsoft-edge-blog&quot;&gt;Introducing the first Microsoft Edge preview builds for macOS - Microsoft Edge Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/05/20/microsoft-edge-macos-canary-preview/&quot; title=&quot;Introducing the first Microsoft Edge preview builds for macOS - Microsoft Edge Blog&quot;&gt;blogs.windows.com/msedgedev/2019/05/20/microsoft-edge-macos-canary-preview/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mac &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのmacOS対応版がInsider Previewでリリースされた&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-3-0-the-unknown-type-marius-schulz&quot;&gt;TypeScript 3.0: The unknown Type — Marius Schulz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mariusschulz.com/blog/typescript-3-0-the-unknown-type&quot; title=&quot;TypeScript 3.0: The unknown Type — Marius Schulz&quot;&gt;mariusschulz.com/blog/typescript-3-0-the-unknown-type&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.0で導入された&lt;code&gt;unknown&lt;/code&gt; typeについての解説。&lt;br&gt;
&lt;code&gt;any&lt;/code&gt; typeとの違い、&lt;code&gt;unknown&lt;/code&gt; typeに対して任意の操作ができない点、&lt;code&gt;unknown&lt;/code&gt; typeは型を絞り込んでから使う点について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;faster-smarter-javascript-debugging-in-firefox-devtools-mozilla-hacks-the-web-developer-blog&quot;&gt;Faster smarter JavaScript debugging in Firefox DevTools - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/05/faster-smarter-javascript-debugging-in-firefox/&quot; title=&quot;Faster smarter JavaScript debugging in Firefox DevTools - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2019/05/faster-smarter-javascript-debugging-in-firefox/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 67の開発者ツールの改善点について。&lt;br&gt;
ロードパフォーマンスの改善、Break Pointの改善やLog Pointの対応、Web Workerスクリプトとの切り替えを改善、Source Mapを使った細かい表示の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;const-assertions-are-the-killer-new-typescript-feature&quot;&gt;const assertions are the killer new TypeScript feature&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/const-assertions-are-the-killer-new-typescript-feature-b73451f35802&quot; title=&quot;const assertions are the killer new TypeScript feature&quot;&gt;blog.logrocket.com/const-assertions-are-the-killer-new-typescript-feature-b73451f35802&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.4で導入されたconst assertionについて。&lt;br&gt;
リテラルの型拡大を防いだり、オブジェクトのプロパティを&lt;code&gt;readonly&lt;/code&gt;にできるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-fonts-is-adding-font-display-zachleat-com&quot;&gt;Google Fonts is Adding font-display 🎉—zachleat.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zachleat.com/web/google-fonts-display/&quot; title=&quot;Google Fonts is Adding font-display 🎉—zachleat.com&quot;&gt;www.zachleat.com/web/google-fonts-display/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google Fontsが&lt;code&gt;display&lt;/code&gt;パラメータで&lt;code&gt;font-display&lt;/code&gt;プロパティの指定をサポートしたことについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://t32k.me/mol/log/font-display-swap/&quot; title=&quot;display&amp;amp;#x3D;swapとはなにか - MOL&quot;&gt;display=swapとはなにか - MOL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-kabuku-developers-blog&quot;&gt;[Web フロントエンド] 状態更新ロジックをフレームワークから独立させる | Kabuku Developers Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kabuku.co.jp/developers/framework-agnostic-state-modification&quot; title=&quot;\[Web フロントエンド\] 状態更新ロジックをフレームワークから独立させる | Kabuku Developers Blog&quot;&gt;www.kabuku.co.jp/developers/framework-agnostic-state-modification&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;immerを使ったステート更新ロジックに分け、Angular、Vue、Reactなどのフレームワーク内に組み込む方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-dos-shibuya-xss-techtalk-11-speaker-deck&quot;&gt;JSでDoSる/ Shibuya.XSS techtalk #11 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/masatokinugawa/shibuya-dot-xss-techtalk-number-11&quot; title=&quot;JSでDoSる/ Shibuya.XSS techtalk #11 - Speaker Deck&quot;&gt;speakerdeck.com/masatokinugawa/shibuya-dot-xss-techtalk-number-11&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで例外が発生するパターンやNode.jsでクラッシュするケーススタディについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dassur-ma-raw-webassembly&quot;&gt;DasSur.ma – Raw WebAssembly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dassur.ma/things/raw-wasm/&quot; title=&quot;DasSur.ma – Raw WebAssembly&quot;&gt;dassur.ma/things/raw-wasm/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyがstack-based VMであるとはどういうことかを見ていく記事。&lt;br&gt;
WebAssembly text形式であるwatを手書きして、WebAssemblyでのモジュールの定義、関数の定義と呼び出し、メモリの確保、wasmの読み込みについて。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format&quot; title=&quot;Understanding WebAssembly text format - WebAssembly | MDN&quot;&gt;Understanding WebAssembly text format - WebAssembly | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;accessibility-insights&quot;&gt;Accessibility Insights&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://accessibilityinsights.io/&quot; title=&quot;Accessibility Insights&quot;&gt;accessibilityinsights.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;windows&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティのチェックを補助するブラウザ拡張。&lt;br&gt;
アクセシビリティのチェック項目を可視化したり、FastPassとAssessmentの2つのシナリオでのテストをサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/accessibility-insights-web&quot; title=&quot;microsoft/accessibility-insights-web: Accessibility Insights for Web&quot;&gt;microsoft/accessibility-insights-web: Accessibility Insights for Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U6NY8Cxym5g&quot; title=&quot;Introduction to Accessibility Insights for Web - YouTube&quot;&gt;Introduction to Accessibility Insights for Web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;inside-microsoft-s-surprise-decision-to-work-with-google-on-its-edge-browser-the-verge&quot;&gt;Inside Microsoft’s surprise decision to work with Google on its Edge browser - The Verge&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.theverge.com/2019/5/6/18527550/microsoft-chromium-edge-google-history-collaboration&quot; title=&quot;Inside Microsoft’s surprise decision to work with Google on its Edge browser - The Verge&quot;&gt;www.theverge.com/2019/5/6/18527550/microsoft-chromium-edge-google-history-collaboration&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;インタビュー&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeがChromiumベースになった背景について。&lt;br&gt;
最初はEdgeの利用率、最新の機能の実装遅れなどの問題を解決する選択肢の一つだったが、組織改編、Septagonというプロトタイプ、切り替えの公表から実際の作業に入った話など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reakit&quot;&gt;Reakit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reakit.io/&quot; title=&quot;Reakit&quot;&gt;reakit.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティを考慮したReactコンポーネントライブラリ。&lt;br&gt;
React Hooksへの対応や基礎的なコンポーネントを提供し、コンポーネントを組み合わせ利用できるようにすることを目的にしている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;esxjs-esx-like-jsx-but-native-and-fast&quot;&gt;esxjs/esx: Like JSX, but native and fast&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/esxjs/esx&quot; title=&quot;esxjs/esx: Like JSX, but native and fast&quot;&gt;github.com/esxjs/esx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXライクな構文をサポートしたTagged Templateライブラリ。&lt;br&gt;
またReactをesxの構文に変換するBabelプラグインもあり、ReactのSSRテンプレートエンジンとしても利用できる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 21 May 2019 11:19:30 +0900</pubDate>
        <link>https://jser.info/2019/05/21/typescript-3.5-rcfirefox-devtoolsaccessibility-insights/</link>
        <guid isPermaLink="true">https://jser.info/2019/05/21/typescript-3.5-rcfirefox-devtoolsaccessibility-insights/</guid>
        
        <category>TypeScript</category>
        
        <category>Firefox</category>
        
        <category>Accessibility</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-05-14のJS: Google I/O 2019、GitHub Package Registry(npm, Docker, etc)</title>
        <description>&lt;p&gt;JSer.info #435 - &lt;a href=&quot;https://events.google.com/io/&quot;&gt;Google I/O 2019&lt;/a&gt;が開催されイベントの動画や関連するアップデートが多数公開されています。&lt;/p&gt;

&lt;p&gt;Google I/Oのウェブ関連のセッションの動画は次のページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=rUUazNIZW7I&amp;list=PLNYkxOF6rcIATmAmz7HcCzongGvQEtx8i&quot;&gt;Web at Google I/O 2019 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Google検索のクロールに使われているレンダリングエンジンがChrome 41相当から、最新版(現時点では74)のChromiumをベースとなるようにアップデートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2019/05/the-new-evergreen-googlebot.html&quot;&gt;Official Google Webmaster Central Blog: The new evergreen Googlebot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;lighthouse 5.0.0がリリースされ、Wordpressなど特定のスタックに対するレポートを表示するStack Packsの追加、Performance budgetsの対応、Lighthouse pluginsの仕組みが追加されています。また、Performance budgetsの定義ファイルを生成する&lt;a href=&quot;https://perf-budget-calculator.firebaseapp.com/&quot;&gt;Performance Budget Calculator&lt;/a&gt;というツールも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v5.0.0&quot;&gt;Release v5.0.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Googleが運営する&lt;a href=&quot;https://web.dev/&quot;&gt;web.dev&lt;/a&gt;も更新され&lt;a href=&quot;https://web.dev/blog&quot;&gt;Blog&lt;/a&gt;や&lt;a href=&quot;https://web.dev/react&quot;&gt;React&lt;/a&gt;アプリケーションの最適化についてのチュートリアルなどが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;GitHubが&lt;a href=&quot;https://github.com/features/package-registry&quot;&gt;GitHub Package Registry&lt;/a&gt;というパッケージレジストリサービスのベータ公開を発表しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2019-05-10-introducing-github-package-registry/&quot;&gt;Introducing GitHub Package Registry - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/features/package-registry&quot;&gt;GitHub Package Registry: Your packages, at home with their code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub Package RegistryはnpmやRubyGems、Dockerなどに対応したpublic/private registryサービスです。&lt;br&gt;
現在はベータなので、&lt;a href=&quot;https://github.com/features/package-registry/signup&quot;&gt;GitHub Package Registryのsignup&lt;/a&gt;から登録した人にプレリリースしている状態です。&lt;br&gt;
詳細は次のドキュメントに書かれていますが、npmパッケージをGitHubのUserまたはOrgnization名に紐づいたscoped moduleとして公開できるようになるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/about-github-package-registry&quot;&gt;About GitHub Package Registry - GitHub Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.github.com/en/articles/configuring-npm-for-use-with-github-package-registry&quot;&gt;Configuring NPM for use with GitHub Package Registry - GitHub Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;次の動画でGitHub Package Registryへpublishするデモなども行っているので、興味がある人は見てみると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Video: &lt;a href=&quot;https://www.pscp.tv/w/1jMKgvMEggwxL&quot;&gt;GitHub: &amp;quot;Introducing GitHub Package Registry&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-googlechrome-lighthouse&quot;&gt;Release v5.0.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 5.0.0リリース。&lt;br&gt;
Wordpressなど特定のスタックに対するレポートを表示するStack Packsの追加、Performance budgetsの対応、Lighthouse plugins&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse-stack-packs&quot; title=&quot;GoogleChrome/lighthouse-stack-packs: Lighthouse Stack Packs&quot;&gt;GoogleChrome/lighthouse-stack-packs: Lighthouse Stack Packs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/budgets&quot; title=&quot;Performance Budgets (Keep Request Counts Low And File Sizes Small)  |  Tools for Web Developers  |  Google Developers&quot;&gt;Performance Budgets (Keep Request Counts Low And File Sizes Small)  |  Tools for Web Developers  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/master/docs/plugins.md#plugin-config&quot; title=&quot;lighthouse/plugins.md at master · GoogleChrome/lighthouse&quot;&gt;lighthouse/plugins.md at master · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;official-google-webmaster-central-blog-the-new-evergreen-googlebot&quot;&gt;Official Google Webmaster Central Blog: The new evergreen Googlebot&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2019/05/the-new-evergreen-googlebot.html&quot; title=&quot;Official Google Webmaster Central Blog: The new evergreen Googlebot&quot;&gt;webmasters.googleblog.com/2019/05/the-new-evergreen-googlebot.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google検索botが最新版のChromiumレンダリングエンジンを使うように変更された&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/docs/guides/fix-search-javascript&quot; title=&quot;Fix Search-related JavaScript problems  |  Search  |  Google Developers&quot;&gt;Fix Search-related JavaScript problems  |  Search  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v12-2-0-current-node-js&quot;&gt;Node v12.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.2.0/&quot; title=&quot;Node v12.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v12.2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12.2.0リリース。&lt;br&gt;
&lt;code&gt;--trace-tls&lt;/code&gt;オプションの追加、&lt;code&gt;Module.createRequireFromPath()&lt;/code&gt;を非推奨化し、&lt;code&gt;URL&lt;/code&gt;でのパスも受け取れるようにした&lt;code&gt;module.createRequire&lt;/code&gt;を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comlink-changelog-md-at-master-googlechromelabs-comlink&quot;&gt;comlink/CHANGELOG.md at master · GoogleChromeLabs/comlink&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/comlink/blob/master/CHANGELOG.md#v3---v4&quot; title=&quot;comlink/CHANGELOG.md at master · GoogleChromeLabs/comlink&quot;&gt;github.com/GoogleChromeLabs/comlink/blob/master/CHANGELOG.md#v3---v4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Proxyを使ったWorkerライブラリのComlink 4.0.0リリース。&lt;br&gt;
Node.jsの&lt;code&gt;worker_thread&lt;/code&gt;をサポート、APIのリネーム、パフォーマンスの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/DasSurma/status/1127266398185484288&quot; title=&quot;Surma on Twitter: &amp;amp;amp;quot;I sneakily released Comlink v4 just before #io19! ➡️Smaller than v3 (~1.1kb) 🗜 ➡️10x faster on low-end devices (we needed that for https://t.co/TQBh7GNv2g!) 🏎💨 ➡️Better API naming 💫 ➡️Better folder structure 🙏 ➡️Support for workers in Node 11+ 🤯 https://t.co/v4PNytvkfq… https://t.co/mksFf7uxPu&amp;amp;amp;quot;&quot;&gt;Surma on Twitter: &amp;quot;I sneakily released Comlink v4 just before #io19! ➡️Smaller than v3 (~1.1kb) 🗜 ➡️10x faster on low-end devices (we needed that for https://t.co/TQBh7GNv2g!) 🏎💨 ➡️Better API naming 💫 ➡️Better folder structure 🙏 ➡️Support for workers in Node 11+ 🤯 https://t.co/v4PNytvkfq… https://t.co/mksFf7uxPu&amp;quot;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-16-0-googlechrome-puppeteer&quot;&gt;Release v1.16.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.16.0&quot; title=&quot;Release v1.16.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.16.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer 1.16.0リリース。&lt;br&gt;
&lt;code&gt;browser.isConnected()&lt;/code&gt;、&lt;code&gt;target.worker()&lt;/code&gt;のサポート。&lt;br&gt;
&lt;code&gt;accessibility.snapshot()&lt;/code&gt;が&lt;code&gt;root&lt;/code&gt;オプションをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-github-package-registry-the-github-blog&quot;&gt;Introducing GitHub Package Registry - The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2019-05-10-introducing-github-package-registry/&quot; title=&quot;Introducing GitHub Package Registry - The GitHub Blog&quot;&gt;github.blog/2019-05-10-introducing-github-package-registry/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubのパッケージレジストリサービスのベータ公開がされた。&lt;br&gt;
npm、gem、dockerなどに対応していて、GitHubのTeamパーミッションに紐付いて管理できるprivate registry。&lt;br&gt;
GitHubのReleaseや検索にも表示されるようになる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/features/package-registry&quot; title=&quot;GitHub Package Registry: Your packages, at home with their code&quot;&gt;GitHub Package Registry: Your packages, at home with their code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aws-lambda-adds-support-for-node-js-v10&quot;&gt;AWS Lambda adds support for Node.js v10&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/jp/about-aws/whats-new/2019/05/aws_lambda_adds_support_for_node_js_v10/&quot; title=&quot;AWS Lambda adds support for Node.js v10&quot;&gt;aws.amazon.com/jp/about-aws/whats-new/2019/05/aws_lambda_adds_support_for_node_js_v10/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS LambdaがNode.js 10をサポート。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;samesite-cookies-explained-web-dev&quot;&gt;SameSite cookies explained  |  web.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/samesite-cookies-explained/&quot; title=&quot;SameSite cookies explained  |  web.dev&quot;&gt;web.dev/samesite-cookies-explained/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SameSite&lt;/code&gt; Cookieについての解説。&lt;code&gt;SameSite&lt;/code&gt;の設定値である&lt;code&gt;Strict&lt;/code&gt;、&lt;code&gt;Lax&lt;/code&gt;、&lt;code&gt;None&lt;/code&gt;の動作の解説。&lt;br&gt;
Chrome 76で&lt;code&gt;SameSite&lt;/code&gt;が未指定の場合に&lt;code&gt;SameSite=Lax&lt;/code&gt;をデフォルトとする試験的フラグが追加されるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://laboradian.com/same-site-cookies/&quot; title=&quot;HTTP クッキーをより安全にする SameSite 属性について (Same-site Cookies) | ラボラジアン&quot;&gt;HTTP クッキーをより安全にする SameSite 属性について (Same-site Cookies) | ラボラジアン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-web-dev&quot;&gt;React  |  web.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/react&quot; title=&quot;React  |  web.dev&quot;&gt;web.dev/react&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;web.dev のReactウェブアプリの最適化についてのチュートリアル。&lt;br&gt;
Bundle size、無限リスト、Service Worker、プリレンダリング、アクセシビリティについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-guide-to-node-js-logging-twilio&quot;&gt;A Guide to Node.js Logging - Twilio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.twilio.com/blog/guide-node-js-logging&quot; title=&quot;A Guide to Node.js Logging - Twilio&quot;&gt;www.twilio.com/blog/guide-node-js-logging&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでログ出力についての記事。&lt;br&gt;
Console API、pinoを使ったログ出力、ライブラリのログ、chalkなどで装飾されているログをプレーンな出力にする方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-at-google-i-o-2019-youtube&quot;&gt;Web at Google I/O 2019 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIATmAmz7HcCzongGvQEtx8i&quot; title=&quot;Web at Google I/O 2019 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLNYkxOF6rcIATmAmz7HcCzongGvQEtx8i&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Google I/O 2019のウェブセッションの動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ng-conf-2019-youtube&quot;&gt;ng-conf 2019 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLOETEcp3DkCpimylVKTDe968yNmNIajlR&quot; title=&quot;ng-conf 2019 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLOETEcp3DkCpimylVKTDe968yNmNIajlR&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angularのカンファレンスであるng-confg 2019の動画一覧。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nitayneeman.com/posts/all-talks-from-ng-conf-2019/&quot; title=&quot;Angular - All Talks from ng-conf 2019&quot;&gt;Angular - All Talks from ng-conf 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.notion.so/ng-conf-2019-Note-10b9443262a54fb9bd8586cc25a449c7&quot; title=&quot;ng-conf 2019 Note&quot;&gt;ng-conf 2019 Note&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-v12-kng6-speaker-deck&quot;&gt;Node.js v12の気になる変更点 / #kng6 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/masashi/number-kng6&quot; title=&quot;Node.js v12の気になる変更点 / #kng6 - Speaker Deck&quot;&gt;speakerdeck.com/masashi/number-kng6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12の変更点についてまとめたスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wapm-webassembly-package-manager&quot;&gt;wapm | WebAssembly Package Manager&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wapm.io/&quot; title=&quot;wapm | WebAssembly Package Manager&quot;&gt;wapm.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのパッケージマネージャとレジストリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-frontend-bootcamp-frontend-workshop-from-html-css-js-to-typescript-react-redux&quot;&gt;microsoft/frontend-bootcamp: Frontend Workshop from HTML/CSS/JS to TypeScript/React/Redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/frontend-bootcamp&quot; title=&quot;microsoft/frontend-bootcamp: Frontend Workshop from HTML/CSS/JS to TypeScript/React/Redux&quot;&gt;github.com/Microsoft/frontend-bootcamp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Microsoftのフロントエンドワークショップ教材。&lt;br&gt;
HTML、CSS、JavaScript、TypeScriptについて扱う2日分のコンテンツ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data-third-party-web&quot;&gt;Data | Third-Party Web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thirdpartyweb.today/&quot; title=&quot;Data | Third-Party Web&quot;&gt;www.thirdpartyweb.today/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP Archiveのクロールデータを元にした、サードパーティスクリプトの影響度を可視化したサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manzinello-mailgo-mailgo-a-different-mailto-wip&quot;&gt;manzinello/mailgo: 💌 mailgo, a different mailto (WIP)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/manzinello/mailgo&quot; title=&quot;manzinello/mailgo: 💌 mailgo, a different mailto (WIP)&quot;&gt;github.com/manzinello/mailgo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mailto:&lt;/code&gt;なリンクをクリックした時にメニューを表示してくれるライブラリ。&lt;br&gt;
GmailやOutlookで開くやコピーなどを選択できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;victorvoid-dinoql-a-customizable-graphql-style-query-language-for-interacting-with-javascript-objects&quot;&gt;victorvoid/dinoql: A customizable GraphQL style query language for interacting with JavaScript objects.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/victorvoid/dinoql&quot; title=&quot;victorvoid/dinoql: A customizable GraphQL style query language for interacting with JavaScript objects.&quot;&gt;github.com/victorvoid/dinoql&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQL構文でオブジェクトからデータを取得できるクエリライブラリ。&lt;br&gt;
Alias、Cache、Fragmentsなどをサポートしている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;msgpack-msgpack-javascript-messagepack-for-javascript-ecma-262&quot;&gt;msgpack/msgpack-javascript: MessagePack for JavaScript/ECMA-262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/msgpack/msgpack-javascript&quot; title=&quot;msgpack/msgpack-javascript: MessagePack for JavaScript/ECMA-262&quot;&gt;github.com/msgpack/msgpack-javascript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MessagePackのJavaScript実装。&lt;br&gt;
ブラウザとNode.jsどちらでも動作し、Async Iteratorを使いストリーム処理ができるようになっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gfx.hatenablog.com/entry/2019/05/07/102341&quot; title=&quot;TypeScriptで MessagePack encoder/decoder を実装した - Islands in the byte stream&quot;&gt;TypeScriptで MessagePack encoder/decoder を実装した - Islands in the byte stream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 May 2019 10:14:26 +0900</pubDate>
        <link>https://jser.info/2019/05/14/google-io-2019github-package-registrynpm-docker-etc/</link>
        <guid isPermaLink="true">https://jser.info/2019/05/14/google-io-2019github-package-registrynpm-docker-etc/</guid>
        
        <category>Google</category>
        
        <category>Chrome</category>
        
        <category>GitHub</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-05-07のJS: Chrome 75 Beta(Low Latency Canvas)、Babylon.js 4.0(WebGL)</title>
        <description>&lt;p&gt;JSer.info #434 - Chrome 75のベータ版がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2019/05/chrome-75-beta-low-latency-canvas.html&quot;&gt;Chromium Blog: Chrome 75 Beta: low latency canvas contexts, sharing files, and numeric separators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#milestone%3D75&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Canvas Contextに低遅延レンダリングのための&lt;code&gt;desynchronized&lt;/code&gt;オプションを追加されています。&lt;br&gt;
&lt;code&gt;desynchronized&lt;/code&gt;オプションについては次の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/05/desynchronized&quot;&gt;Low-latency rendering with the desynchronized hint  |  Web  |  Google Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/html/issues/2659&quot;&gt;Add a low latency mode for OffscreenCanvas · Issue #2659 · whatwg/html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Web Share APIでファイルをサポート、ES Proposalの&lt;a href=&quot;https://github.com/tc39/proposal-numeric-separator&quot;&gt;Numeric separators&lt;/a&gt;をサポートしています。&lt;br&gt;
また、CSPの &lt;code&gt;script-src-attr&lt;/code&gt;, &lt;code&gt;script-src-elem&lt;/code&gt;, &lt;code&gt;style-src-attr&lt;/code&gt;, &lt;code&gt;style-src-elem&lt;/code&gt;ディレクティブのサポートが追加され、&lt;br&gt;
&lt;a href=&quot;https://www.chromestatus.com/feature/Discussion%20to%20add%20it%20to%20spec:%20https://github.com/whatwg/html/issues/1237&quot;&gt;HTMLVideoElement.playsInline&lt;/a&gt;やCache-Controlの&lt;code&gt;stale-while-revalidate&lt;/code&gt;のサポートなども含まれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;stale-while-revalidate&lt;/code&gt;については次の記事がわかりやすいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://csswizardry.com/2019/03/cache-control-for-civilians/&quot;&gt;What stale-while-revalidate provides is a grace period (defined by us) in which the browser is permitted to use an out of date (stale) asset while we’re checking for a newer version.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;WebGLベースの3D games向けフレームワークであるBabylon.js 4.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@babylonjs/babylon-js-4-0-is-here-d725b5b02e9b&quot;&gt;Babylon.js 4.0 Is Here! – Babylon.js – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BabylonJS/Babylon.js/releases/tag/v4.0.0&quot;&gt;Release 4.0.0 · BabylonJS/Babylon.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Visual Scene Inspectorが追加され&lt;a href=&quot;https://doc.babylonjs.com/features/playground_debuglayer&quot;&gt;inspector&lt;/a&gt;のデバッグ機能が強化されています。&lt;br&gt;
また、不要なモジュールなどをbundle時にeliminateできるようにファイルサイズが改善されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://doc.babylonjs.com/features/es6_support&quot;&gt;ES6 - Babylon.js Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またパフォーマンスの改善や物理エンジンとして&lt;a href=&quot;https://github.com/kripken/ammo.js/&quot;&gt;ammo.js&lt;/a&gt;をサポートなどが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://doc.babylonjs.com/how_to/using_the_physics_engine&quot;&gt;Use a Physics Engine - Babylon.js Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3-4-1-triggering-focus-events-in-ie-and-finding-root-elements-in-ios-10-official-jquery-blog&quot;&gt;jQuery 3.4.1: triggering focus events in IE and finding root elements in iOS 10 | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2019/05/01/jquery-3-4-1-triggering-focus-events-in-ie-and-finding-root-elements-in-ios-10/&quot; title=&quot;jQuery 3.4.1: triggering focus events in IE and finding root elements in iOS 10 | Official jQuery Blog&quot;&gt;blog.jquery.com/2019/05/01/jquery-3-4-1-triggering-focus-events-in-ie-and-finding-root-elements-in-ios-10/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.4.1リリース。&lt;br&gt;
IE10-IE11で&lt;code&gt;trigger&lt;/code&gt;の問題を修正、iOS 10.0-10.2でのclickの問題を修正、AMDとしてロードしたときの問題を修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-81-webkit&quot;&gt;Release Notes for Safari Technology Preview 81 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8834/release-notes-for-safari-technology-preview-81/&quot; title=&quot;Release Notes for Safari Technology Preview 81 | WebKit&quot;&gt;webkit.org/blog/8834/release-notes-for-safari-technology-preview-81/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 81リリース。&lt;br&gt;
印刷時のスタイルで&lt;code&gt;@page&lt;/code&gt;によるmarginのサポート、&lt;code&gt;frame-ancestors&lt;/code&gt; CSPを&lt;code&gt;X-Frame-Options&lt;/code&gt;ヘッダより優先するように。&lt;br&gt;
&lt;code&gt;requestAnimationFrame&lt;/code&gt;の実行タイミングの問題を修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=177484&quot; title=&quot;177484 – requestAnimationFrame should execute before the next frame&quot;&gt;177484 – requestAnimationFrame should execute before the next frame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-75-beta-low-latency-canvas-contexts-sharing-files-and-numeric-separators&quot;&gt;Chromium Blog: Chrome 75 Beta: low latency canvas contexts, sharing files, and numeric separators&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2019/05/chrome-75-beta-low-latency-canvas.html&quot; title=&quot;Chromium Blog: Chrome 75 Beta: low latency canvas contexts, sharing files, and numeric separators&quot;&gt;blog.chromium.org/2019/05/chrome-75-beta-low-latency-canvas.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 75 Betaリリース。&lt;br&gt;
Canvasに低遅延レンダリングのための&lt;code&gt;desynchronized&lt;/code&gt;オプションを追加、Web Shareでファイルをサポート、ES ProposalのNumeric separatorsをサポート。&lt;br&gt;
CSPの&lt;code&gt;script-src-attr&lt;/code&gt;ディレクティブのサポート、Cache-Controlの&lt;code&gt;stale-while-revalidate&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#milestone%3D75&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/05/desynchronized&quot; title=&quot;Low-latency rendering with the desynchronized hint  |  Web  |  Google Developers&quot;&gt;Low-latency rendering with the desynchronized hint  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-7-0-0-websockets-ws&quot;&gt;Release 7.0.0 · websockets/ws&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/websockets/ws/releases/tag/7.0.0&quot; title=&quot;Release 7.0.0 · websockets/ws&quot;&gt;github.com/websockets/ws/releases/tag/7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebSocketクライアント &amp;amp; サーバの&lt;code&gt;ws&lt;/code&gt; 7.0.0リリース。&lt;br&gt;
Node.js 6のサポート終了、コンストラクタでNode.jsの&lt;code&gt;url&lt;/code&gt;オブジェクトではなく&lt;code&gt;URL&lt;/code&gt;オブジェクトを受け取るように変更。&lt;br&gt;
&lt;code&gt;readyState&lt;/code&gt;が&lt;code&gt;OPEN&lt;/code&gt;ではないときの&lt;code&gt;ping&lt;/code&gt;、&lt;code&gt;pong&lt;/code&gt;の挙動変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-facebook-relay&quot;&gt;Release v4.0.0 · facebook/relay&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/relay/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · facebook/relay&quot;&gt;github.com/facebook/relay/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLとReact向けのフレームワークであるRelay 4.0.0リリース。&lt;br&gt;
Containerの引数に&lt;code&gt;graphql&lt;/code&gt; tagを渡すのではなくオブジェクトを受け付けるように変更、client schema extensionsのフルサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.facebook.com/videos/2019/building-the-new-facebookcom-with-react-graphql-and-relay/&quot; title=&quot;Building the New facebook.com with React, GraphQL and Relay&quot;&gt;Building the New facebook.com with React, GraphQL and Relay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-all-the-news-from-build-2019-microsoft-edge-blog&quot;&gt;Microsoft Edge – All the news from Build 2019 - Microsoft Edge Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/05/06/edge-chromium-build-2019-pwa-ie-mode-devtools/&quot; title=&quot;Microsoft Edge – All the news from Build 2019 - Microsoft Edge Blog&quot;&gt;blogs.windows.com/msedgedev/2019/05/06/edge-chromium-build-2019-pwa-ie-mode-devtools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ChromiumベースのMSEdgeにはサードパーティトラッキングのブロックができるPrivacy Tools、表示しているサイトをIE互換するIE modeが搭載される予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babylon-js-4-0-is-here-babylon-js-medium&quot;&gt;Babylon.js 4.0 Is Here! – Babylon.js – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@babylonjs/babylon-js-4-0-is-here-d725b5b02e9b&quot; title=&quot;Babylon.js 4.0 Is Here! – Babylon.js – Medium&quot;&gt;medium.com/@babylonjs/babylon-js-4-0-is-here-d725b5b02e9b&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebGLベースの3Dゲーム向けフレームワークのBabylon.js 4.0.0リリース。 Visual Scene Inspectorの導入、ファイルサイズやパフォーマンスの改善、物理エンジンとしてAmmo.jsをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyper-blog&quot;&gt;Hyper Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hyper.is/blog&quot; title=&quot;Hyper Blog&quot;&gt;hyper.is/blog&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron製のターミナルであるHyper 3リリース。 &lt;code&gt;hterm&lt;/code&gt;から&lt;code&gt;xterm.js&lt;/code&gt;に変更してWebGL Rendererを使うように、IPCのバッチ処理でパフォーマンス改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stub-navigator-api-in-end-to-end-tests-better-world-by-better-software&quot;&gt;Stub navigator API in end-to-end tests | Better world by better software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/stub-navigator-api/&quot; title=&quot;Stub navigator API in end-to-end tests | Better world by better software&quot;&gt;glebbahmutov.com/blog/stub-navigator-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cypressを使いBattery status APIのStubをしながらテストをするチュートリアル。&lt;br&gt;
&lt;code&gt;navigator&lt;/code&gt;をどのようにstubしてテストするかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-css-handbook-a-handy-guide-to-css-for-developers&quot;&gt;The CSS Handbook: a handy guide to CSS for developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.org/the-css-handbook-a-handy-guide-to-css-for-developers-b56695917d11&quot; title=&quot;The CSS Handbook: a handy guide to CSS for developers&quot;&gt;medium.freecodecamp.org/the-css-handbook-a-handy-guide-to-css-for-developers-b56695917d11&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSについてのガイド。&lt;br&gt;
基本的なCSSのプロパティの解説からunit、レイアウト、アニメーションなど幅広く書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;revisiting-prefers-reduced-motion-the-reduced-motion-media-query-css-tricks&quot;&gt;Revisiting prefers-reduced-motion, the reduced motion media query | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/revisiting-prefers-reduced-motion-the-reduced-motion-media-query/&quot; title=&quot;Revisiting prefers-reduced-motion, the reduced motion media query | CSS-Tricks&quot;&gt;css-tricks.com/revisiting-prefers-reduced-motion-the-reduced-motion-media-query/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;prefers-reduced-motion&lt;/code&gt;の解説と使い方についての記事。&lt;br&gt;
アクセシビリティ、プログレッシブ・エンハンスメントの考え、CSS Variablesと組み合わせた実装について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimizing-performance-with-resource-hints-smashing-magazine&quot;&gt;Optimizing Performance With Resource Hints — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2019/04/optimization-performance-resource-hints/&quot; title=&quot;Optimizing Performance With Resource Hints — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2019/04/optimization-performance-resource-hints/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Resource Hintsについての記事。&lt;br&gt;
&lt;code&gt;dns-prefetch&lt;/code&gt;、&lt;code&gt;preconnect&lt;/code&gt;、&lt;code&gt;prefetch&lt;/code&gt;、&lt;code&gt;prerender&lt;/code&gt;をそれぞれどのような場合に利用するかについて。&lt;code&gt;as&lt;/code&gt;属性についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gulp4-gulpfile-node-qiita&quot;&gt;gulp4再入門 gulpfileの分割とnodeモジュールの利用 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/masato_makino/items/ad11058e1a8a009abbdf&quot; title=&quot;gulp4再入門 gulpfileの分割とnodeモジュールの利用 - Qiita&quot;&gt;qiita.com/masato_makino/items/ad11058e1a8a009abbdf&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;gulp4ベースの入門記事。&lt;br&gt;
gulp taskの定義方法、タスクファイルの分割、gulpプラグインとNodeモジュールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oclif-cli-ux-cli-io-utilities&quot;&gt;oclif/cli-ux: CLI IO utilities&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oclif/cli-ux&quot; title=&quot;oclif/cli-ux: CLI IO utilities&quot;&gt;github.com/oclif/cli-ux&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ターミナルのCLIを提供するNode.jsライブラリ。&lt;br&gt;
promptやconfirmなどの対話操作、URLのリンク表示、spinner、アノテーション、table表示など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;laconia-create-well-crafted-serverless-applications-effortlessly&quot;&gt;Laconia · Create well-crafted serverless applications, effortlessly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://laconiajs.io/&quot; title=&quot;Laconia · Create well-crafted serverless applications, effortlessly&quot;&gt;laconiajs.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのserverlsssフレームワーク。Hexagonal Architectureで依存を外から渡せるような構造にしてテストしやすくしている。&lt;br&gt;
Long Task向けのbatch処理を行うモジュールも提供されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-react-native-windows-a-framework-for-building-native-windows-apps-with-react&quot;&gt;microsoft/react-native-windows: A framework for building native Windows apps with React.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/react-native-windows&quot; title=&quot;microsoft/react-native-windows: A framework for building native Windows apps with React.&quot;&gt;github.com/Microsoft/react-native-windows&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;windows&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native for Windows。&lt;br&gt;
React NativeでネイティブなWindowsアプリ(UWP)を作成するフレームワーク。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 May 2019 10:19:40 +0900</pubDate>
        <link>https://jser.info/2019/05/07/chrome-75-betalow-latency-canvasbabylon.js-4.0webgl/</link>
        <guid isPermaLink="true">https://jser.info/2019/05/07/chrome-75-betalow-latency-canvasbabylon.js-4.0webgl/</guid>
        
        <category>Chrome</category>
        
        <category>WebGL</category>
        
        <category>gulp</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-04-30のJS: Node.js 12.0.0(Node.js 6.xはEOL)、Electron 5.0.0、Pixi.js 5.0.0(WebGL by default)</title>
        <description>&lt;p&gt;JSer.info #433 - Node.jsの新しいメジャーバージョンである12.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.0.0/&quot;&gt;Node v12.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/introducing-node-js-12-76c41a1b3f3f&quot; title=&quot;Introducing Node.js 12 – Node.js Foundation – Medium&quot;&gt;Introducing Node.js 12 – Node.js Foundation – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8 7.4へアップデート、TLS 1.3のサポート、http parserが&lt;code&gt;llhttp&lt;/code&gt;に変更、&lt;code&gt;os.type()&lt;/code&gt;の追加などが行われています。&lt;br&gt;
また、Node.js 11.xで追加された試験的な機能としてWorker Threads、Diagnostic Reports、Heap Dumps、ES Modulesのサポート、&lt;code&gt;fs.promises&lt;/code&gt;のStable化なども含まれています。&lt;/p&gt;

&lt;p&gt;Experimentalな機能については次の記事を参照してみると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodesource.com/blog/experimental-features-in-node.js&quot;&gt;Update on Experimental Features in Node.js - NodeSource&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;12.0.0で見つかった&lt;code&gt;new Date().toLocaleString()&lt;/code&gt;の問題と令和をサポートしたNode v12.1.0も既にリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.1.0/&quot;&gt;Node v12.1.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/27379&quot;&gt;Node.js crash with a fatal error on Date#toLocaleString · Issue #27379 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 12.xがLTS(Long Term Support)となるのは2019-10-22からの予定です。&lt;br&gt;
また、Node.js 6.xは2019-04-30でEOL(End-of-life)となったため、現在のLTSはNode.js 8.xと10.xとなります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Foundation Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Electron 5.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v5.0.0&quot;&gt;Release electron v5.0.0 · electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://electronjs.org/blog/electron-5-0&quot;&gt;Electron 5.0.0 | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chromium 73、Node 12.0.0にアップデートされています。&lt;br&gt;
Cookies APIなどさまざまなAPIがPromise対応、BrowserWindowで複数のBrowserViewをサポート、iframeに対してnode integrationの設定ができるようになるといった変更が含まれています。&lt;/p&gt;

&lt;p&gt;また破壊的な変更として、パッケージアプリはデフォルトでアプリケーションメニューが作成され&lt;code&gt;window-all-closed&lt;/code&gt;のハンドリングが行われるようになっています。&lt;br&gt;
また、セキュリティ的な理由から&lt;code&gt;nodeIntegration&lt;/code&gt;や&lt;code&gt;webViewTag&lt;/code&gt;はデフォルトで&lt;code&gt;false&lt;/code&gt;に変更されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;2DグラフィックライブラリであるPixiJS 5.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/releases/tag/v5.0.0&quot;&gt;Release v5.0.0 · pixijs/pixi.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/goodboy-digital/pixijs-v5-lands-5e112d84e510&quot;&gt;PixiJS v5 lands – Goodboy Digital – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今まではCanvasを使った&lt;code&gt;CanvasRender&lt;/code&gt;がデフォルトでしたが、5.0.0からはWebGLがデフォルトのレンダーに変更されています。&lt;br&gt;
これにあわせて&lt;code&gt;CanvasRender&lt;/code&gt;は&lt;code&gt;pixi.js&lt;/code&gt;パッケージからは外され、&lt;code&gt;CanvasRender&lt;/code&gt;を利用する場合は&lt;code&gt;pixi.js-legacy&lt;/code&gt;パッケージを利用するように変更されています。&lt;/p&gt;

&lt;p&gt;また、今まではglobalに&lt;code&gt;PIXI&lt;/code&gt;オブジェクトを自動で作成していましたが、5.0.0から自動的には作らないように修正されました。&lt;br&gt;
その他にもRendererのシグネチャの変更、&lt;code&gt;PIXI.Mesh&lt;/code&gt;の追加、Graphics Holesの対応改善などが行われています。&lt;/p&gt;

&lt;p&gt;マイグレーションガイドも次のページに公開されているので合わせて読むとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/wiki/v5-Migration-Guide&quot;&gt;v5 Migration Guide · pixijs/pixi.js Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3-0-0-facebook-create-react-app&quot;&gt;Release v3.0.0 · facebook/create-react-app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/create-react-app/releases/tag/v3.0.0&quot; title=&quot;Release v3.0.0 · facebook/create-react-app&quot;&gt;github.com/facebook/create-react-app/releases/tag/v3.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;create-react-app v3.0.0リリース。&lt;br&gt;
Jest 24、React Hooks、ESLintでTypeScriptをLintするように、&lt;code&gt;tsconfig.json&lt;/code&gt;の&lt;code&gt;baseUrl&lt;/code&gt;をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-electron-v5-0-0-electron-electron&quot;&gt;Release electron v5.0.0 · electron/electron&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v5.0.0&quot; title=&quot;Release electron v5.0.0 · electron/electron&quot;&gt;github.com/electron/electron/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron v5.0.0リリース。&lt;br&gt;
Chromium 73、Node 12.0.0にアップデート。&lt;br&gt;
&lt;code&gt;ELECTRON_DISABLE_SANDBOX&lt;/code&gt;でsandboxの無効化に対応。&lt;br&gt;
Cookies APIのPromise対応、BrowserWindowで複数のBrowserViewをサポート、iframeに対してnode integrationの設定ができるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-74-web-google-developers&quot;&gt;New in Chrome 74  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2019/04/nic74&quot; title=&quot;New in Chrome 74  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2019/04/nic74&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 74の変更点について。&lt;br&gt;
private class fieldsの対応、&lt;code&gt;prefers-reduced-motion&lt;/code&gt;のサポート、feature policy apiのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v12-0-0-current-node-js&quot;&gt;Node v12.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.0.0/&quot; title=&quot;Node v12.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v12.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12.0.0リリース。&lt;br&gt;
V8 7.4へアップデート、TLS 1.3のサポート、http parserが&lt;code&gt;llhttp&lt;/code&gt;に変更、&lt;code&gt;os.type()&lt;/code&gt;の追加など。&lt;br&gt;
試験的な機能としてWorker Threads、Diagnostic Reports、Heap Dumps、ES Modulesのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/introducing-node-js-12-76c41a1b3f3f&quot; title=&quot;Introducing Node.js 12 – Node.js Foundation – Medium&quot;&gt;Introducing Node.js 12 – Node.js Foundation – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://2ality.com/2019/04/nodejs-esm-impl.html&quot; title=&quot;The new ECMAScript module support in Node.js 12&quot;&gt;The new ECMAScript module support in Node.js 12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-15-0-googlechrome-puppeteer&quot;&gt;Release v1.15.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.15.0&quot; title=&quot;Release v1.15.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.15.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer 1.15.0リリース。&lt;br&gt;
Chromium 75.0.3765.0へアップデート、&lt;code&gt;puppeteer.devices&lt;/code&gt;と&lt;code&gt;puppeteer.errors&lt;/code&gt;の追加、リクエストInterceptionの問題を修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;documentation-changelog-md-at-master-documentationjs-documentation&quot;&gt;documentation/CHANGELOG.md at master · documentationjs/documentation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/documentationjs/documentation/blob/master/CHANGELOG.md#1010-2019-04-25&quot; title=&quot;documentation/CHANGELOG.md at master · documentationjs/documentation&quot;&gt;github.com/documentationjs/documentation/blob/master/CHANGELOG.md#1010-2019-04-25&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コードからドキュメントを生成するツールであるdocumentationjs 10.1.0リリース。&lt;br&gt;
TypeScriptをサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;color-accessibility-tools-and-resources-to-help-you-design-inclusive-products-by-st-phanie-walter-ux-designer-mobile-expert&quot;&gt;Color accessibility: tools and resources to help you design inclusive products, by Stéphanie Walter - UX designer &amp;amp; Mobile Expert.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stephaniewalter.design/blog/color-accessibility-tools-resources-to-design-inclusive-products/&quot; title=&quot;Color accessibility: tools and resources to help you design inclusive products, by Stéphanie Walter - UX designer &amp;amp; Mobile Expert.&quot;&gt;stephaniewalter.design/blog/color-accessibility-tools-resources-to-design-inclusive-products/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティとカラー、コントラスト関係のツールやリソースのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comparing-jvm-alternatives-to-javascript&quot;&gt;Comparing JVM alternatives to JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://renato.athaydes.com/posts/comparing-jvm-alternatives-to-js.html&quot; title=&quot;Comparing JVM alternatives to JavaScript&quot;&gt;renato.athaydes.com/posts/comparing-jvm-alternatives-to-js.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaからJavaScriptに変換するツールの比較記事。&lt;br&gt;
パフォーマンス、コードファイルサイズ、コード行数について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;addyosmani-com-native-image-lazy-loading-for-the-web&quot;&gt;AddyOsmani.com - Native image lazy-loading for the web!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://addyosmani.com/blog/lazy-loading/&quot; title=&quot;AddyOsmani.com - Native image lazy-loading for the web!&quot;&gt;addyosmani.com/blog/lazy-loading/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;画像やiframeの遅延ロードなどを行う&lt;code&gt;loading&lt;/code&gt;属性について。&lt;br&gt;
属性値として&lt;code&gt;lazy&lt;/code&gt;、&lt;code&gt;eager&lt;/code&gt;、&lt;code&gt;auto&lt;/code&gt;が設定できることやFeature Detection、Fallbackの書き方についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;faast-js-serverless-batch-computing-made-simple&quot;&gt;faast.js · Serverless batch computing made simple&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://faastjs.org/&quot; title=&quot;faast.js · Serverless batch computing made simple&quot;&gt;faastjs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;serverlessを使ったバッチ処理を行うフレームワーク。&lt;br&gt;
バッチの各処理を関数としてローカル、AWS lambda、Google Cloud Functionsで実行できる。またデプロイやクリーンアップのワークフローを管理できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://faastjs.org/docs/comparison&quot; title=&quot;faast.js vs other · faast.js&quot;&gt;faast.js vs other · faast.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pixijs-v5-lands-goodboy-digital-medium&quot;&gt;PixiJS v5 lands – Goodboy Digital – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/goodboy-digital/pixijs-v5-lands-5e112d84e510&quot; title=&quot;PixiJS v5 lands – Goodboy Digital – Medium&quot;&gt;medium.com/goodboy-digital/pixijs-v5-lands-5e112d84e510&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PixiJS 5.0.0リリース。&lt;br&gt;
WebGLがデフォルトとなり、Cnavas版は&lt;code&gt;pixi.js-legacy&lt;/code&gt;として提供されるように。&lt;br&gt;
globalに&lt;code&gt;PIXI&lt;/code&gt;オブジェクトを追加しないでimportできるように。&lt;br&gt;
Rendererのシグネチャの変更、&lt;code&gt;PIXI.Mesh&lt;/code&gt;の追加、Graphics Holesの対応改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · pixijs/pixi.js&quot;&gt;Release v5.0.0 · pixijs/pixi.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/wiki/v5-Migration-Guide&quot; title=&quot;v5 Migration Guide · pixijs/pixi.js Wiki&quot;&gt;v5 Migration Guide · pixijs/pixi.js Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-ast-viewer&quot;&gt;TypeScript AST Viewer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ts-ast-viewer.com/&quot; title=&quot;TypeScript AST Viewer&quot;&gt;ts-ast-viewer.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのコードのASTビューアツール。&lt;br&gt;
コードを生成するASTのコードも出力される&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;infinitered-gluegun-a-delightful-toolkit-for-building-node-powered-clis&quot;&gt;infinitered/gluegun: A delightful toolkit for building Node-powered CLIs.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/infinitered/gluegun&quot; title=&quot;infinitered/gluegun: A delightful toolkit for building Node-powered CLIs.&quot;&gt;github.com/infinitered/gluegun&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのコマンドラインツール向けのフレームワーク。&lt;br&gt;
コマンドのテンプレート、コマンドライン引数のパースやハンドリング、Util処理などを含んでいる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gkozlenko-node-video-lib-node-js-video-library-mp4-flv-parser-hls-muxer&quot;&gt;gkozlenko/node-video-lib: Node.js Video Library / MP4 &amp;amp; FLV parser / HLS muxer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gkozlenko/node-video-lib&quot; title=&quot;gkozlenko/node-video-lib: Node.js Video Library / MP4 &amp;amp; FLV parser / HLS muxer&quot;&gt;github.com/gkozlenko/node-video-lib&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HLS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存がないMP4とFLVのパーサ、HLS muxerライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oreilly-japan-node-js-2&quot;&gt;O&amp;#39;Reilly Japan - Node.jsデザインパターン 第2版&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.oreilly.co.jp/books/9784873118734/&quot; title=&quot;O&amp;#39;Reilly Japan - Node.jsデザインパターン 第2版&quot;&gt;www.oreilly.co.jp/books/9784873118734/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2019年05月18日発売&lt;br&gt;
Node.jsのデザインパターンについての書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.marlin-arms.com/support/nodejs-design-patterns/&quot; title=&quot;Node.jsデザインパターン 第2版 サポートページ — マーリンアームズ株式会社&quot;&gt;Node.jsデザインパターン 第2版 サポートページ — マーリンアームズ株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;programming-typescript-oreilly-media&quot;&gt;Programming TypeScript - O&amp;#39;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920158059.do&quot; title=&quot;Programming TypeScript - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920158059.do&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptについての入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 30 Apr 2019 12:33:48 +0900</pubDate>
        <link>https://jser.info/2019/04/30/node.js-12.0.0node.js-6.xeolelectron-5.0.0pixi.js-5.0.0webgl-by-default/</link>
        <guid isPermaLink="true">https://jser.info/2019/04/30/node.js-12.0.0node.js-6.xeolelectron-5.0.0pixi.js-5.0.0webgl-by-default/</guid>
        
        <category>Node.js</category>
        
        <category>Electron</category>
        
        <category>Canvas</category>
        
        <category>WebGL</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-04-23のJS: Svelte 3(Change Everything)、GoogleでのCSP(Content Security Policy)導入ステップ</title>
        <description>&lt;p&gt;JSer.info #432 - コンパイル前提のUIコンポーネントフレームワークであるSvelte 3リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://svelte.dev/blog/svelte-3-rethinking-reactivity&quot;&gt;Svelte 3: Rethinking reactivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3.0.0の&lt;a href=&quot;https://github.com/sveltejs/svelte/blob/master/CHANGELOG.md#300&quot;&gt;CHANGELOGには&amp;quot;Everything&amp;quot;&lt;/a&gt;としか書かれていませんが、&lt;br&gt;
今までの仕組みを大幅に書き換えたバージョンとなっています。&lt;/p&gt;

&lt;p&gt;テンプレートの構文、コンポーネントで利用できるAPI、ステートを変更したときにUIを更新するために変更検知の仕組み(Reactiveな仕組み)が変更されています。&lt;br&gt;
今までは、コンポーネントのステートを &lt;code&gt;set&lt;/code&gt; APIなどを使ってUIに反映していました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{count} doubled is {double}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on:click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;set({ count: count + 1 })&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;+1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;computed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;doubled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Svelte 3からは、次のように変更を検知したい文を&lt;code&gt;$&lt;/code&gt;ラベル(&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;JavaScriptのラベル&lt;/a&gt;)でアノテーションします。このラベルで指定した変数などの値が変更されるとUIが更新されるコードがコンパイル時に生成されます。&lt;br&gt;
(&lt;code&gt;$$invalidate&lt;/code&gt;という更新を通知する処理が生成コードには含まれるようになります。)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{count} doubled is {doubled}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on:click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{() =&amp;gt; count += 1}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;+1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doubled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handleClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;この宣言的なReactivityについては次のドキュメントやRFCを見るのが良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://svelte.dev/tutorial/reactive-declarations&quot;&gt;Reactivity / Declarations • Svelte Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/rfcs/blob/master/text/0003-reactive-declarations.md&quot;&gt;rfcs/0003-reactive-declarations.md at master · sveltejs/rfcs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ものすごく簡単にまとめると、&lt;code&gt;@observable&lt;/code&gt;のような&lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;​まだ策定中のDecorator構文&lt;/a&gt;ではなく、既にある&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label&quot;&gt;label文&lt;/a&gt;と&lt;code&gt;$&lt;/code&gt;というラベルを使って、コンパイル時に変数などをObservableを作り出すという手法のようです。&lt;/p&gt;

&lt;p&gt;この他にも&lt;a href=&quot;https://svelte.dev/blog/write-less-code&quot;&gt;Write less code&lt;/a&gt;に寄せた変更などが多く含まれているため詳細は公式サイトを読むのがよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://svelte.dev/&quot;&gt;Svelte • Cybernetically enhanced web apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/mikispag/content-security-policy-a-successful-mess-between-hardening-and-mitigation&quot;&gt;Content Security Policy: A successful mess between hardening and mitigation - Speaker Deck&lt;/a&gt;というスライドでは、Googleの主要なドメインにおけるCSP(Content Security Policy)の導入状態などについて書かれています。&lt;/p&gt;

&lt;p&gt;Google domainでCSPがどの程度導入されているかのカバレッジや60%以上のXSSはCSPでブロックできている点について。&lt;br&gt;
また、CSP導入の4つのLevelと導入ステップ、ホワイリストの問題とnonce-based CSP、CSPとデプロイのトレードオフについてなど。&lt;br&gt;
CSPのディレクティブ(設定)によってはevalやinline codeなどが利用できないため、CSP対応のリファクタリング手法やステップについて書かれています。&lt;/p&gt;

&lt;p&gt;このスライドでも紹介されているホワイリストの問題とnonce-based CSPについては次の記事も参照するとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://inside.pixiv.blog/kobo/5137&quot; title=&quot;Content Security Policy Level 3におけるXSS対策 - pixiv inside&quot;&gt;Content Security Policy Level 3におけるXSS対策 - pixiv inside&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alibaba-rax-v1-0-released-the-fastest-way-to-build-universal-application&quot;&gt;alibaba/rax: [ v1.0 released] The fastest way to build universal application.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alibaba/rax&quot; title=&quot;alibaba/rax: \[ v1.0 released\] The fastest way to build universal application.&quot;&gt;github.com/alibaba/rax&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactライクなAPIを持つUniversalなViewライブラリであるRax 1.0.0リリース。&lt;br&gt;
Hooks APIにも対応している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-sindresorhus-np&quot;&gt;Release v5.0.0 · sindresorhus/np&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/np/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · sindresorhus/np&quot;&gt;github.com/sindresorhus/np/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm publishするnp 5.0.0リリース。&lt;br&gt;
2要素認証を新しく公開するパッケージに関しては自動で有効化、公開に失敗したときのロールバック処理の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-80-webkit&quot;&gt;Release Notes for Safari Technology Preview 80 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8825/release-notes-for-safari-technology-preview-80/&quot; title=&quot;Release Notes for Safari Technology Preview 80 | WebKit&quot;&gt;webkit.org/blog/8825/release-notes-for-safari-technology-preview-80/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 80リリース。&lt;br&gt;
ResizeObserverのサポート、&lt;code&gt;window.open&lt;/code&gt;の第二引数で&lt;code&gt;noreferrer&lt;/code&gt;のサポート、&lt;code&gt;contentWindow&lt;/code&gt;のサポートなど。&lt;br&gt;
またLegacy Safari Extensionsのサポート終了など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blog-next-js-8-1-next-js&quot;&gt;Blog - Next.js 8.1 | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/blog/next-8-1&quot; title=&quot;Blog - Next.js 8.1 | Next.js&quot;&gt;nextjs.org/blog/next-8-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AMP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 8.1リリース。&lt;br&gt;
AMPサポートが追加された。&lt;br&gt;
コンポーネント内でAMPとの処理分岐でのhybrid対応、&lt;code&gt;next export&lt;/code&gt;でAMPでの出力とバリデーション&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-10-0-0-beta-0-reconcilertron-developit-preact&quot;&gt;Release 10.0.0-beta.0 Reconcilertron · developit/preact&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact/releases/tag/10.0.0-beta.0&quot; title=&quot;Release 10.0.0-beta.0 Reconcilertron · developit/preact&quot;&gt;github.com/developit/preact/releases/tag/10.0.0-beta.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Preact 10.0.0-beta.0リリース。&lt;br&gt;
&lt;code&gt;Fragments&lt;/code&gt;の安定化、条件分岐を含む描画のパフォーマンス改善、コンポーネントの上下関係を考慮した更新処理を行うように修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelte-3-rethinking-reactivity&quot;&gt;Svelte 3: Rethinking reactivity&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://svelte.dev/blog/svelte-3-rethinking-reactivity&quot; title=&quot;Svelte 3: Rethinking reactivity&quot;&gt;svelte.dev/blog/svelte-3-rethinking-reactivity&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コンパイル前提のUIフレームワークであるSvelte 3リリース。&lt;br&gt;
今までの仕組みを書き直したため、テンプレート構文、API、ウェブサイトが変更されている。&lt;br&gt;
変更検知の仕組みが大きく変わり、&lt;code&gt;set&lt;/code&gt; APIではなく、reactiveな変数を&lt;code&gt;$:&lt;/code&gt;で宣言しコンパイル時に変更を追跡するコードを生成する方法に変更された&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-typescript-javascript-gfx-hub-web&quot;&gt;TypeScript再入門「がんばらないTypeScript」で、JavaScriptを“柔らかい”静的型付き言語に（gfx執筆） - エンジニアHub｜若手Webエンジニアのキャリアを考える！&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://employment.en-japan.com/engineerhub/entry/2019/04/16/103000&quot; title=&quot;TypeScript再入門「がんばらないTypeScript」で、JavaScriptを“柔らかい”静的型付き言語に（gfx執筆） - エンジニアHub｜若手Webエンジニアのキャリアを考える！&quot;&gt;employment.en-japan.com/engineerhub/entry/2019/04/16/103000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ゆるい型付けの設定で始めるTypeScriptについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-horrifying-globalthis-polyfill-in-universal-javascript-mathias-bynens&quot;&gt;A horrifying globalThis polyfill in universal JavaScript · Mathias Bynens&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/globalthis&quot; title=&quot;A horrifying globalThis polyfill in universal JavaScript · Mathias Bynens&quot;&gt;mathiasbynens.be/notes/globalthis&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;globalThis&lt;/code&gt;のpolyfillとその動作原理についての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;experimental-node-js-testing-the-new-performance-hooks&quot;&gt;Experimental Node.js: testing the new performance hooks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/experimental-node-js-testing-the-new-performance-hooks-31fcdd2a747e&quot; title=&quot;Experimental Node.js: testing the new performance hooks&quot;&gt;blog.logrocket.com/experimental-node-js-testing-the-new-performance-hooks-31fcdd2a747e&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;perf_hooks&lt;/code&gt;の使い方についての記事。&lt;br&gt;
モジュールのロード時間やURLへのリクエスト時間を計測を例に紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-perfect-unit-test&quot;&gt;The perfect unit test&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://javascriptplayground.com/the-perfect-javascript-unit-test/&quot; title=&quot;The perfect unit test&quot;&gt;javascriptplayground.com/the-perfect-javascript-unit-test/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Unit Testの書き方について。&lt;br&gt;
テストケース名の書き方、テストをSetup、コード実行、Assertの3つのステップに分解して書くことについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update&quot;&gt;A RealWorld Comparison of Front-End Frameworks with Benchmarks (2019 update)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.org/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075&quot; title=&quot;A RealWorld Comparison of Front-End Frameworks with Benchmarks (2019 update)&quot;&gt;medium.freecodecamp.org/a-realworld-comparison-of-front-end-frameworks-with-benchmarks-2019-update-4be0d3c78075&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&amp;quot;RealWorld&amp;quot;というベンチマークアプリの各JavaScriptフレームワークなどの実装を比較した記事。&lt;br&gt;
パフォーマンス、出力されたコードのファイルサイズ、Line of Code(LOC)でそれぞれを比較した結果をまとめている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gothinkster/realworld&quot; title=&quot;gothinkster/realworld: &amp;amp;amp;quot;The mother of all demo apps&amp;amp;amp;quot; — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more 🏅&quot;&gt;gothinkster/realworld: &amp;quot;The mother of all demo apps&amp;quot; — Exemplary fullstack Medium.com clone powered by React, Angular, Node, Django, and many more 🏅&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;content-security-policy-a-successful-mess-between-hardening-and-mitigation-speaker-deck&quot;&gt;Content Security Policy: A successful mess between hardening and mitigation - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/mikispag/content-security-policy-a-successful-mess-between-hardening-and-mitigation&quot; title=&quot;Content Security Policy: A successful mess between hardening and mitigation - Speaker Deck&quot;&gt;speakerdeck.com/mikispag/content-security-policy-a-successful-mess-between-hardening-and-mitigation&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GoogleにおけるCSPについてのスライド。Google domainのCSPのカバレッジや60%以上のXSSはCSPでブロックできている。&lt;br&gt;
CSP導入の4つのLevelと導入ステップ、ホワイリストの問題とnonce-based CSP、CSPとデプロイのトレードオフについてなど。&lt;br&gt;
CSP対応のリファクタリング手法などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://inside.pixiv.blog/kobo/5137&quot; title=&quot;Content Security Policy Level 3におけるXSS対策 - pixiv inside&quot;&gt;Content Security Policy Level 3におけるXSS対策 - pixiv inside&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;isinputpending-facebooks-first-browser-api-contribution-facebook-code&quot;&gt;isInputPending: Facebook&amp;#39;s first browser API contribution - Facebook Code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code.fb.com/developer-tools/isinputpending-api/&quot; title=&quot;isInputPending: Facebook&amp;#39;s first browser API contribution - Facebook Code&quot;&gt;code.fb.com/developer-tools/isinputpending-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;navigator.scheduling.isInputPending()&lt;/code&gt;を使いユーザーの操作中は、キューにためた処理を実行しないように制御する方法について。&lt;br&gt;
ロード処理が完了するまでユーザーが操作できない時間であるFirst Input Delay (FID) を軽減する手法について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/05/first-input-delay&quot; title=&quot;First Input Delay  |  Web  |  Google Developers&quot;&gt;First Input Delay  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;do-you-really-know-how-a-lockfile-works-for-yarn-and-npm-packages-snyk&quot;&gt;Do you really know how a lockfile works for yarn and npm packages? | Snyk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snyk.io/blog/making-sense-of-package-lock-files-in-the-npm-ecosystem/&quot; title=&quot;Do you really know how a lockfile works for yarn and npm packages? | Snyk&quot;&gt;snyk.io/blog/making-sense-of-package-lock-files-in-the-npm-ecosystem/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;yarnの&lt;code&gt;yarn.lock&lt;/code&gt;、npmの&lt;code&gt;package-lock.json&lt;/code&gt;が実際にどのように動いているのかについて。&lt;br&gt;
アプリケーションとライブラリのロックファイルについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stryker-mutator-stryker-mutation-testing-for-javascript-and-friends&quot;&gt;stryker-mutator/stryker: Mutation testing for JavaScript and friends&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stryker-mutator/stryker&quot; title=&quot;stryker-mutator/stryker: Mutation testing for JavaScript and friends&quot;&gt;github.com/stryker-mutator/stryker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C#&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;scala&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mutation testingライブラリ。&lt;br&gt;
テストコードをテストするためのフレームワーク。&lt;br&gt;
mochaやjestなど各種テストフレームワークと連携して動作する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stryker-mutator/stryker-handbook#readme&quot; title=&quot;stryker-mutator/stryker-handbook: A comprehensive guide to the stryker ecosystem&quot;&gt;stryker-mutator/stryker-handbook: A comprehensive guide to the stryker ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stryker-mutator/stryker/tree/master/packages/core#readme&quot; title=&quot;stryker/packages/core at master · stryker-mutator/stryker&quot;&gt;stryker/packages/core at master · stryker-mutator/stryker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://stryker-mutator.io/blog/2017-01-17/introduction-to-mutation-testing&quot; title=&quot;Blog - Stryker Mutator&quot;&gt;Blog - Stryker Mutator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lancedikson-bowser-a-browser-detector&quot;&gt;lancedikson/bowser: a browser detector&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lancedikson/bowser&quot; title=&quot;lancedikson/bowser: a browser detector&quot;&gt;github.com/lancedikson/bowser&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;User-Agentを元にブラウザ名やバージョンなどを構造的なデータとして取得できるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sindresorhus-file-type-detect-the-file-type-of-a-buffer-uint8array-arraybuffer&quot;&gt;sindresorhus/file-type: Detect the file type of a Buffer/Uint8Array/ArrayBuffer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/file-type&quot; title=&quot;sindresorhus/file-type: Detect the file type of a Buffer/Uint8Array/ArrayBuffer&quot;&gt;github.com/sindresorhus/file-type&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Content sniffingをしてファイルの種類を判定するNode.jsライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-developer-handbook-2019-learn-the-entire-javascript-css-and-html-development-practice&quot;&gt;Front-end Developer Handbook 2019 - Learn the entire JavaScript, CSS and HTML development practice!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://frontendmasters.com/books/front-end-handbook/2019/&quot; title=&quot;Front-end Developer Handbook 2019 - Learn the entire JavaScript, CSS and HTML development practice!&quot;&gt;frontendmasters.com/books/front-end-handbook/2019/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;links&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンド開発についての概要や技術項目ごとのリソースをまとめた電子書籍の2019年版&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Apr 2019 10:35:41 +0900</pubDate>
        <link>https://jser.info/2019/04/23/svelte-3change-everythinggooglecspcontent-security-policy/</link>
        <guid isPermaLink="true">https://jser.info/2019/04/23/svelte-3change-everythinggooglecspcontent-security-policy/</guid>
        
        <category>Svelte</category>
        
        <category>CSP</category>
        
        <category>security</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-04-15のJS: jQuery 3.4.0(Sizzle)、ESLint 6.0.0 α、react-redux 7.0(Hooks)</title>
        <description>&lt;p&gt;JSer.info #431 - jQuery 3.4.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2019/04/10/jquery-3-4-0-released/&quot;&gt;jQuery 3.4.0 Released | Official jQuery Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQuery経由で&lt;code&gt;script&lt;/code&gt;タグを作成すると&lt;code&gt;nonce&lt;/code&gt;属性や&lt;code&gt;nomodule&lt;/code&gt;属性が無視されていましたが、3.4.0ではこれが修正されています。&lt;br&gt;
同時に&lt;code&gt;jQuery.extend&lt;/code&gt;にPrototype Pollutionの脆弱性があったのが修正されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jovi0608.hatenablog.com/entry/2018/10/19/083725&quot;&gt;Node.jsにおけるプロトタイプ汚染攻撃とは何か - ぼちぼち日記&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、3.4.0ではjQueryのCSSセレクタエンジンである&lt;a href=&quot;https://github.com/jquery/sizzle&quot;&gt;Sizzle&lt;/a&gt;特有のセレクタが一部非推奨化されています。&lt;br&gt;
&lt;code&gt;:first&lt;/code&gt;, &lt;code&gt;:last&lt;/code&gt;, &lt;code&gt;:eq&lt;/code&gt;, &lt;code&gt;:even&lt;/code&gt;, &lt;code&gt;:odd&lt;/code&gt;, &lt;code&gt;:lt&lt;/code&gt;, &lt;code&gt;:gt&lt;/code&gt;, &lt;code&gt;:nth&lt;/code&gt;が非推奨となります。&lt;br&gt;
jQuery 4.0.0ではSizzleを削除する予定で、これらのセレクタは&lt;code&gt;querySelectorAll&lt;/code&gt;からは利用できない(標準化されていない)ため非推奨化されました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ESLint 6.0.0 αがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2019/04/eslint-v6.0.0-alpha.0-released&quot;&gt;ESLint v6.0.0-alpha.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/6.0.0/user-guide/migrating-to-6.0.0&quot;&gt;Migrating to v6.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/274347ff9473b26b575a&quot;&gt;ESLint v6.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;インストールしたプラグインの読み込み方法の変更されたため、globalにESLintをインストールしていた場合の挙動が変わりました。&lt;br&gt;
&lt;code&gt;eslint:recommended&lt;/code&gt;の更新、ルールのデフォルトの挙動を一部変更、設定ファイルのチェックがより厳密になるなどの変更が含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React-Redux 7.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v7.0.1&quot;&gt;Release v7.0.1 · reduxjs/react-redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;connect&lt;/code&gt;が内部的に&lt;code&gt;React.memo&lt;/code&gt;とHooks APIを使って実装されなおされました。&lt;br&gt;
これにより、React-Redux 7はReact 16.8.4以上に依存する形になっています。&lt;br&gt;
また、Hooks APIを使った&lt;code&gt;useRedux()&lt;/code&gt;も今後実装していく予定のようです。&lt;/p&gt;

&lt;p&gt;その他の変更として、Subscriptionの動作を変更、&lt;code&gt;batch&lt;/code&gt;APIの追加、&lt;code&gt;store&lt;/code&gt;をPropsとして渡せる機能をテストのために再実装などがおこなわれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3-4-0-released-official-jquery-blog&quot;&gt;jQuery 3.4.0 Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2019/04/10/jquery-3-4-0-released/&quot; title=&quot;jQuery 3.4.0 Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2019/04/10/jquery-3-4-0-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.4.0リリース。&lt;br&gt;
scriptタグの&lt;code&gt;nomodule&lt;/code&gt;と&lt;code&gt;nonce&lt;/code&gt;をサポート、&lt;code&gt;Object.prototype&lt;/code&gt; pollutionの脆弱性を修正、Sizzleが提供するCSSセレクタを非推奨に。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-9-released&quot;&gt;Ember.js - Ember 3.9 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.emberjs.com/2019/04/10/ember-3-9-released.html&quot; title=&quot;Ember.js - Ember 3.9 Released&quot;&gt;blog.emberjs.com/2019/04/10/ember-3-9-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.9リリース。&lt;br&gt;
jQueryをデフォルトで外すために&lt;code&gt;Ember.$()&lt;/code&gt;など非推奨化、&lt;code&gt;.volatile()&lt;/code&gt;と&lt;code&gt;.property()&lt;/code&gt;ではなくネイティブのgetter/setterを利用を推奨するようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/releases/tag/v3.9.0&quot; title=&quot;Release v3.9.0 · emberjs/ember.js&quot;&gt;Release v3.9.0 · emberjs/ember.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://deprecations.emberjs.com/v3.x/&quot; title=&quot;Ember.js - Deprecations&quot;&gt;Ember.js - Deprecations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v6-0-0-alpha-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v6.0.0-alpha.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2019/04/eslint-v6.0.0-alpha.0-released&quot; title=&quot;ESLint v6.0.0-alpha.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2019/04/eslint-v6.0.0-alpha.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 6.0.0アルファリリース。&lt;br&gt;
インストールしたプラグインの読み込み方法の変更、&lt;code&gt;eslint:recommended&lt;/code&gt;の更新、ルールのデフォルトの挙動を一部変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/274347ff9473b26b575a&quot; title=&quot;ESLint v6.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v6.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v11-14-0-current-node-js&quot;&gt;Node v11.14.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.14.0/&quot; title=&quot;Node v11.14.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v11.14.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 11.14.0リリース。&lt;br&gt;
&lt;code&gt;fs.promises&lt;/code&gt;がStableに、&lt;code&gt;readline&lt;/code&gt;の&lt;code&gt;Symbol.asyncIterator&lt;/code&gt;対応がStableになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-0-1-reduxjs-react-redux&quot;&gt;Release v7.0.1 · reduxjs/react-redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/react-redux/releases/tag/v7.0.1&quot; title=&quot;Release v7.0.1 · reduxjs/react-redux&quot;&gt;github.com/reduxjs/react-redux/releases/tag/v7.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React-Redux 7.0リリース。 &lt;code&gt;connect&lt;/code&gt;が&lt;code&gt;React.memo&lt;/code&gt;とHooks　APIを使うように、Subscriptionの動作を変更、&lt;code&gt;batch&lt;/code&gt;APIの追加、&lt;code&gt;store&lt;/code&gt;をPropsとして渡せる機能をテストのために再実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1-17-more-quotes-options-and-support-for-shared-configs-prettier&quot;&gt;Prettier 1.17: More quotes options and support for shared configs · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2019/04/12/1.17.0.html&quot; title=&quot;Prettier 1.17: More quotes options and support for shared configs · Prettier&quot;&gt;prettier.io/blog/2019/04/12/1.17.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.17リリース。&lt;br&gt;
オブジェクトのquote設定をする&lt;code&gt;--quote-props&lt;/code&gt;の追加、shared configのサポート、TypeScript 3.4の&lt;code&gt;readonly&lt;/code&gt;修飾子をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;form-validation-in-under-an-hour-with-vuelidate-css-tricks&quot;&gt;Form Validation in Under an Hour with Vuelidate | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/form-validation-in-under-an-hour-with-vuelidate/&quot; title=&quot;Form Validation in Under an Hour with Vuelidate | CSS-Tricks&quot;&gt;css-tricks.com/form-validation-in-under-an-hour-with-vuelidate/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;VueのフォームバリデーターライブラリのVuelidateについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;catsnake11-webpack-ops-webpack-bundle-visualization-optimization-config-tool&quot;&gt;CatSnake11/Webpack-Ops: 📁 Webpack bundle visualization // optimization // config tool&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CatSnake11/Webpack-Ops&quot; title=&quot;CatSnake11/Webpack-Ops: 📁 Webpack bundle visualization // optimization // config tool&quot;&gt;github.com/CatSnake11/Webpack-Ops&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackダッシュボードツール。&lt;br&gt;
bundle結果のビジュアライズ、最適化設定をテストして設定ファイルの生成などを行える&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;commenthol-date-holidays-worldwide-holidays&quot;&gt;commenthol/date-holidays: worldwide holidays&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/commenthol/date-holidays&quot; title=&quot;commenthol/date-holidays: worldwide holidays&quot;&gt;github.com/commenthol/date-holidays&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;祝日判定ライブラリ。&lt;br&gt;
各国ごとの祝日の定義を持っている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;niklasvh-html2canvas-screenshots-with-javascript&quot;&gt;niklasvh/html2canvas: Screenshots with JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/niklasvh/html2canvas&quot; title=&quot;niklasvh/html2canvas: Screenshots with JavaScript&quot;&gt;github.com/niklasvh/html2canvas&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLをCanvasに描画してHTMLのスクリーンショットを撮るJavaScriptライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;seek-oss-playroom-design-with-jsx-powered-by-your-own-component-library&quot;&gt;seek-oss/playroom: Design with JSX, powered by your own component library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/seek-oss/playroom&quot; title=&quot;seek-oss/playroom: Design with JSX, powered by your own component library.&quot;&gt;github.com/seek-oss/playroom&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSX/Reactのコンポーネントプレイグラウンドツール。&lt;br&gt;
さまざまなViewportでプレビューしながらコンポーネントのプロトタイピングができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;packem-packem-a-precompiled-javascript-module-bundler&quot;&gt;packem/packem: 📦⚡ A precompiled JavaScript module bundler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/packem/packem&quot; title=&quot;packem/packem: 📦⚡ A precompiled JavaScript module bundler&quot;&gt;github.com/packem/packem&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rust製のJavaScriptモジュールBundler。&lt;br&gt;
JavaScriptプラグインを書いて拡張もできる。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 15 Apr 2019 09:37:33 +0900</pubDate>
        <link>https://jser.info/2019/04/15/jquery-3.4.0sizzleeslint-6.0.0-areact-redux-7.0hooks/</link>
        <guid isPermaLink="true">https://jser.info/2019/04/15/jquery-3.4.0sizzleeslint-6.0.0-areact-redux-7.0hooks/</guid>
        
        <category>jquery</category>
        
        <category>ESLint</category>
        
        <category>redux</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-04-09のJS: ChromiumベースのMicrosoft Edge プレビュー版公開、`request`モジュールがメンテンスモードに移行の予定</title>
        <description>&lt;p&gt;JSer.info #430 - &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/&quot;&gt;2018年12月にアナウンス&lt;/a&gt;されていたように、Chromiumを利用したMicrosoft Edge(MSEdge)のプレビュー版が公開されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2019/04/08/microsoft-edge-preview-builds-the-next-step-in-our-oss-journey/&quot; title=&quot;Microsoft Edge preview builds: The next step in our OSS journey | Windows Experience Blog&quot;&gt;Microsoft Edge preview builds: The next step in our OSS journey | Windows Experience Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/04/08/microsoft-edge-preview-channel-details/&quot;&gt;What to expect in the new Microsoft Edge Insider Channels - Microsoft Edge Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在はWindows 10 PC向けのみですが、今後はWindows 7、Windows 8.1、macOSなども対応していく予定とのことです。&lt;br&gt;
&lt;a href=&quot;https://www.microsoftedgeinsider.com/en-us/download/&quot;&gt;Microsoft Edge Insider&lt;/a&gt;ではBeta、Dev、Canaryビルドを公開していくようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdge/blob/master/README.md&quot;&gt;Microsoft Edge and Chromium Open Source: Our Intent&lt;/a&gt;のドキュメントや&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/04/08/microsoft-edge-preview-channel-details/&quot;&gt;What to expect in the new Microsoft Edge Insider Channels - Microsoft Edge Blog&lt;/a&gt;ではChromiumのどこへコントリビュートしていくかについても書かれています。&lt;br&gt;
また、ウェブ標準へのコントリビュートについては&lt;a href=&quot;https://github.com/MicrosoftEdge/MSEdgeExplainers&quot;&gt;MSEdgeExplainers&lt;/a&gt;で公開されているドキュメントに予定が書かれていたり、HTML Modules周りで既にコミットされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/html/pull/4505&quot;&gt;[WIP] Introduce HTML Modules by dandclark · Pull Request #4505 · whatwg/html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/ewfRSdqcOd8/w_Fr6rJ3DQAJ&quot;&gt;Intent to Implement: HTML Modules - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、リリース記事では新しいEdgeのUser Agentについても書かれていて、ウェブ互換性の観点から&lt;code&gt;Edg&lt;/code&gt;(Edgeではない)の文字列を使うようです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.48 Safari/537.36 Edg/74.1.96.24
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Node.jsのHTTPライブラリとして著名な&lt;a href=&quot;https://github.com/request/request&quot;&gt;request&lt;/a&gt;モジュールがメンテンスモードとなる方針がアナウンスされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/request/request/issues/3142&quot;&gt;Request’s Past, Present and Future · Issue #3142 · request/request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新しい機能の受け入れや破壊的な変更の受け入れはせずに、修正リリースのみを行う方針について書かれています。&lt;br&gt;
まだ、非推奨にするかや別のライブラリへのマイグレーション方法については、さきほどのIssueで話し合われている段階です。&lt;/p&gt;

&lt;p&gt;代替ライブラリについては、次のIssueで話し合われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/request/request/issues/3143&quot;&gt;Alternative libraries to request · Issue #3143 · request/request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;request&lt;/code&gt;モジュールに関心がある人は読んでおくと良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-6-0-nuxt-nuxt-js&quot;&gt;Release v2.6.0 · nuxt/nuxt.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.6.0&quot; title=&quot;Release v2.6.0 · nuxt/nuxt.js&quot;&gt;github.com/nuxt/nuxt.js/releases/tag/v2.6.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxt.js v2.6.0リリース。&lt;br&gt;
core-js 2と3の両方をサポート、2.5で入った&lt;code&gt;ready()&lt;/code&gt;に関するBreaking Changeをrevertなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-13-1-nodeca-js-yaml&quot;&gt;Release 3.13.1 · nodeca/js-yaml&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/releases/tag/3.13.1&quot; title=&quot;Release 3.13.1 · nodeca/js-yaml&quot;&gt;github.com/nodeca/js-yaml/releases/tag/3.13.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;js-yaml 3.13.1リリース。&lt;br&gt;
&lt;code&gt;load()&lt;/code&gt;で悪意のあるyamlファイルを読むと任意のコードを実行できる脆弱性の修正。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://snyk.io/vuln/SNYK-JS-JSYAML-174129&quot; title=&quot;Arbitrary Code Execution in js-yaml | Snyk&quot;&gt;Arbitrary Code Execution in js-yaml | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/pull/480&quot; title=&quot;Fix possible code execution in (already unsafe) load() by rlidwka · Pull Request #480 · nodeca/js-yaml&quot;&gt;Fix possible code execution in (already unsafe) load() by rlidwka · Pull Request #480 · nodeca/js-yaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;request-s-past-present-and-future-issue-3142-request-request&quot;&gt;Request’s Past, Present and Future · Issue #3142 · request/request&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/request/request/issues/3142&quot; title=&quot;Request’s Past, Present and Future · Issue #3142 · request/request&quot;&gt;github.com/request/request/issues/3142&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのHTTPライブラリである&lt;code&gt;request&lt;/code&gt;モジュールがメンテンスモードとなる。&lt;br&gt;
新しい機能追加やBreaking Changesを入れないメンテンスモードとなる予定について書かれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/request/request/issues/3143&quot; title=&quot;Alternative libraries to request · Issue #3143 · request/request&quot;&gt;Alternative libraries to request · Issue #3143 · request/request&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-preview-builds-the-next-step-in-our-oss-journey-windows-experience-blog&quot;&gt;Microsoft Edge preview builds: The next step in our OSS journey | Windows Experience Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2019/04/08/microsoft-edge-preview-builds-the-next-step-in-our-oss-journey/&quot; title=&quot;Microsoft Edge preview builds: The next step in our OSS journey | Windows Experience Blog&quot;&gt;blogs.windows.com/windowsexperience/2019/04/08/microsoft-edge-preview-builds-the-next-step-in-our-oss-journey/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromiumを使ったMicrosoft Edgeのプレビュー版がリリースされた。 Beta、Dev、Canaryビルドを用意し、今後はmacOSの対応なども行う。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2019/04/08/microsoft-edge-preview-channel-details/#veEezTt4cKDiSZ0P.97&quot; title=&quot;What to expect in the new Microsoft Edge Insider Channels - Microsoft Edge Blog&quot;&gt;What to expect in the new Microsoft Edge Insider Channels - Microsoft Edge Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2019-pwa&quot;&gt;アメブロ2019: こえのブログでのPWA&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.cyberagent.co.jp/blog/archives/20506/&quot; title=&quot;アメブロ2019: こえのブログでのPWA&quot;&gt;developers.cyberagent.co.jp/blog/archives/20506/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;こえのブログでのフロント周りの設計について。&lt;br&gt;
Fastly CDN前提のURL構造、Cloud Speech-to-Textを使った文字起こし、vmsgを使ったクライアントでエンコードしてからのアップロード、Web Componentsの利用。&lt;br&gt;
初回訪問と再訪問の最適化、performance budgetの設定など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-webkit-features-in-safari-12-1-webkit&quot;&gt;New WebKit Features in Safari 12.1 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8718/new-webkit-features-in-safari-12-1/&quot; title=&quot;New WebKit Features in Safari 12.1 | WebKit&quot;&gt;webkit.org/blog/8718/new-webkit-features-in-safari-12-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 12.1のWebKit周りの変更点について。&lt;br&gt;
ダークモードの対応、ITP 2.1へのアップデート、Payment Request API、WebRTCの改善、EME API/MSEの対応。&lt;br&gt;
Intersection Observer、Web Share APIの対応、Web Inspectorの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scroll-anchoring-in-firefox-66-mozilla-hacks-the-web-developer-blog&quot;&gt;Scroll Anchoring in Firefox 66 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/03/scroll-anchoring-in-firefox-66/&quot; title=&quot;Scroll Anchoring in Firefox 66 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2019/03/scroll-anchoring-in-firefox-66/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Scroll Anchoringについて。&lt;br&gt;
どのように動作するかの解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;managing-z-index-in-a-component-based-web-application-smashing-magazine&quot;&gt;Managing Z-Index In A Component-Based Web Application — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2019/04/z-index-component-based-web-application/&quot; title=&quot;Managing Z-Index In A Component-Based Web Application — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2019/04/z-index-component-based-web-application/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コンポーネントベースにおけるz-indexの管理方法について。&lt;br&gt;
Stacking Context、z-indexの管理、オーバーレイについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;docker-node-bestpractices-md-at-master-nodejs-docker-node&quot;&gt;docker-node/BestPractices.md at master · nodejs/docker-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md&quot; title=&quot;docker-node/BestPractices.md at master · nodejs/docker-node&quot;&gt;github.com/nodejs/docker-node/blob/master/docs/BestPractices.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Docker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DockerにおけるNode.jsのベストプラクティスについて書かれたドキュメント。&lt;br&gt;
環境変数、Ctrl + Cのシグナルが送れない問題、yarnのアップデート、root周りの設定、&lt;code&gt;CMD&lt;/code&gt;でnpm run-script経由ではなく直接実行することについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jeffijoe-typesync-install-missing-typescript-typings-for-dependencies-in-your-package-json&quot;&gt;jeffijoe/typesync: Install missing TypeScript typings for dependencies in your package.json.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeffijoe/typesync&quot; title=&quot;jeffijoe/typesync: Install missing TypeScript typings for dependencies in your package.json.&quot;&gt;github.com/jeffijoe/typesync&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;toll&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;から関連する@typesのパッケージをインストールしてくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typeless-js-typeless-a-complete-toolkit-for-building-scalable-react-apps-with-typescript&quot;&gt;typeless-js/typeless: A complete toolkit for building scalable React apps with Typescript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typeless-js/typeless&quot; title=&quot;typeless-js/typeless: A complete toolkit for building scalable React apps with Typescript.&quot;&gt;github.com/typeless-js/typeless&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reduxの典型的なケースをビルトインで持つ、React+Redux+Rxjsを前提としたステート管理ライブラリ。&lt;br&gt;
React Hooksに対応し、Reactに合わせたライフサイクルアクションをもつ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;codex-team-editor-js-a-block-styled-editor-with-clean-json-output&quot;&gt;codex-team/editor.js: A block-styled editor with clean JSON output&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/codex-team/editor.js&quot; title=&quot;codex-team/editor.js: A block-styled editor with clean JSON output&quot;&gt;github.com/codex-team/editor.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブロックスタイルのエディタライブラリ。&lt;br&gt;
ブロックごとの記述をJSONとして出力できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mgechev-codelyzer-static-analysis-for-angular-projects&quot;&gt;mgechev/codelyzer: Static analysis for Angular projects.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mgechev/codelyzer&quot; title=&quot;mgechev/codelyzer: Static analysis for Angular projects.&quot;&gt;github.com/mgechev/codelyzer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TSLintを使ったAngularコンポーネント向けのLintルールセット&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;home-prevue&quot;&gt;Home | PreVue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prevue.io/&quot; title=&quot;Home | PreVue&quot;&gt;prevue.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;design&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsを使ったUIプロトタイピングツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kognise-water-css-a-just-add-css-collection-of-styles-to-make-simple-websites-just-a-little-nicer&quot;&gt;kognise/water.css: A just-add-css collection of styles to make simple websites just a little nicer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kognise/water.css&quot; title=&quot;kognise/water.css: A just-add-css collection of styles to make simple websites just a little nicer&quot;&gt;github.com/kognise/water.css&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML要素のベーススタイルを定義したライブラリ。&lt;br&gt;
要素に対するスタイルを提供するため、特別なクラスを提供していない。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;leebyron-react-loops-react-loops-works-with-react-hooks-as-part-of-the-react-velcro-architecture&quot;&gt;leebyron/react-loops: React Loops works with React Hooks as part of the React Velcro Architecture&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leebyron/react-loops&quot; title=&quot;leebyron/react-loops: React Loops works with React Hooks as part of the React Velcro Architecture&quot;&gt;github.com/leebyron/react-loops&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;forループするReactコンポーネントライブラリ。&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Apr 2019 09:14:01 +0900</pubDate>
        <link>https://jser.info/2019/04/09/chromiummicrosoft-edge-request/</link>
        <guid isPermaLink="true">https://jser.info/2019/04/09/chromiummicrosoft-edge-request/</guid>
        
        <category>Chrome</category>
        
        <category>MSEdge</category>
        
        <category>Node.js</category>
        
        <category>HTTP</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2019-04-02のJS: Node.js 11.13.0(once)、WebAssembly System Interface(WASI)</title>
        <description>&lt;p&gt;JSer.info #429 - Node.js 11.13.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.13.0/&quot;&gt;Node v11.13.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;events&lt;/code&gt;モジュールにPromiseを返す&lt;code&gt;once&lt;/code&gt;が追加されました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'events'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myevent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、&lt;a href=&quot;https://www.npmjs.com/package/heapdump&quot;&gt;node-heapdump&lt;/a&gt;モジュールをベースに&lt;code&gt;v8.heapdump.getHeapdump()&lt;/code&gt;と&lt;code&gt;v8.heapdump.triggerHeapdump(filename)&lt;/code&gt;が追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/&quot;&gt;Standardizing WASI: A system interface to run WebAssembly outside the web - Mozilla Hacks - the Web developer blog&lt;/a&gt;では、WebAssemblyのファイルシステムやネットワークなどへのアクセスを標準化するWebAssembly System Interface(WASI)について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wasi.dev/&quot;&gt;WASI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WASIはWebAssemblyからファイルやネットワークなどアクセスをするためのシステムインターフェースに関する標準化を行うのが目的です。&lt;br&gt;
WASIは各プラットフォームでも動くポータブルなバイナリとプラグラムごとのサンドボックスセキュリティを原則にしています。&lt;br&gt;
記事では、POSIXでは不足していたセキュリティのアクセス制御のアプローチやWASIではどのようなアプローチを取るかについて書かれています。&lt;/p&gt;

&lt;p&gt;また、合わせてWASIに対応したWebAssembly compiler(.wasm -&amp;gt; .so)やRuntimeのプロジェクトが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime&quot; title=&quot;Announcing Lucet: Fastly’s native WebAssembly compiler and runtime&quot;&gt;Announcing Lucet: Fastly’s native WebAssembly compiler and runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CraneStation/wasmtime&quot; title=&quot;CraneStation/wasmtime: Standalone JIT-style runtime for WebAsssembly, using Cranelift&quot;&gt;CraneStation/wasmtime: Standalone JIT-style runtime for WebAsssembly, using Cranelift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在は&lt;code&gt;wasi-core&lt;/code&gt;というファイルやネットワークなどの基本的な機能の標準化から進め、他の機能に関しても今後進めていくようです。&lt;br&gt;
詳細なアーキテクチャなどは実装のリポジトリを読むのが良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fastly/lucet/blob/master/SECURITY.md&quot;&gt;lucet/SECURITY.md at master · fastly/lucet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CraneStation/wasmtime/tree/master/docs&quot;&gt;wasmtime/docs at master · CraneStation/wasmtime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v11-13-0-current-node-js&quot;&gt;Node v11.13.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v11.13.0/&quot; title=&quot;Node v11.13.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v11.13.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 11.13.0リリース。&lt;br&gt;
&lt;code&gt;events&lt;/code&gt;モジュールにPromiseを返す&lt;code&gt;once&lt;/code&gt;を追加、&lt;code&gt;node-heapdump&lt;/code&gt;モジュールを&lt;code&gt;v8.heapdump&lt;/code&gt; APIとしてコアに統合。&lt;br&gt;
&lt;code&gt;worker.moveMessagePortToContext&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-4-typescript&quot;&gt;Announcing TypeScript 3.4 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/&quot; title=&quot;Announcing TypeScript 3.4 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-3-4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.4リリース。&lt;br&gt;
ビルドの情報をファイルに保存して、次回の起動時にその情報で続けてビルドできる&lt;code&gt;--incremental&lt;/code&gt;フラグの追加。&lt;br&gt;
readonly修飾子を配列とtupleに対して適応できるように、const assertionの追加、高階関数の型推論改善。&lt;br&gt;
&lt;code&gt;globalThis&lt;/code&gt;のサポートとTop-level &lt;code&gt;this&lt;/code&gt;の型のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-vuejs-vue-devtools&quot;&gt;Release v5.0.0 · vuejs/vue-devtools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · vuejs/vue-devtools&quot;&gt;github.com/vuejs/vue-devtools/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;vue-devtools 5.0.0リリース。&lt;br&gt;
ルーティングタブ、パフォーマンスタブ、設定タブの追加、&lt;br&gt;
propsやvuexのstateを編集できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-observable-typescript-qiita&quot;&gt;Vue.observable &amp;amp; TypeScriptで手早く安心できる状態管理を手に入れる - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/mugi_uno/items/cb48e5d3178891f94fa7&quot; title=&quot;Vue.observable &amp;amp; TypeScriptで手早く安心できる状態管理を手に入れる - Qiita&quot;&gt;qiita.com/mugi_uno/items/cb48e5d3178891f94fa7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 2.6で追加された&lt;code&gt;Vue.observable&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;expo-cli-and-sdk-web-support-beta-exposition&quot;&gt;Expo CLI and SDK web support beta – Exposition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.expo.io/expo-cli-and-sdk-web-support-beta-d0c588221375&quot; title=&quot;Expo CLI and SDK web support beta – Exposition&quot;&gt;blog.expo.io/expo-cli-and-sdk-web-support-beta-d0c588221375&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Expoがreact-native-webを使ったブラウザサポート。&lt;code&gt;platforms&lt;/code&gt;に&lt;code&gt;web&lt;/code&gt;が追加された。&lt;br&gt;
いくつかのexpoモジュールもweb対応している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/necolas/react-native-web&quot; title=&quot;necolas/react-native-web: React Native for Web&quot;&gt;necolas/react-native-web: React Native for Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expo/web-examples&quot; title=&quot;expo/web-examples: Examples of using Expo in the browser.&quot;&gt;expo/web-examples: Examples of using Expo in the browser.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/expo/web-examples/blob/master/docs/FEATURES.md&quot; title=&quot;web-examples/FEATURES.md at master · expo/web-examples&quot;&gt;web-examples/FEATURES.md at master · expo/web-examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;standardizing-wasi-a-system-interface-to-run-webassembly-outside-the-web-mozilla-hacks-the-web-developer-blog&quot;&gt;Standardizing WASI: A system interface to run WebAssembly outside the web - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/&quot; title=&quot;Standardizing WASI: A system interface to run WebAssembly outside the web - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザ以外でもWebAssemblyを実行するための標準化を行うWASIについて。&lt;br&gt;
各プラットフォームでも動くポータブルなバイナリとプラグラムごとのサンドボックスセキュリティを原則にしたデザイン。&lt;br&gt;
CloudABIのCapability-based securityを元にしたセキュリティモデルをもつ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fastly.com/blog/announcing-lucet-fastly-native-webassembly-compiler-runtime&quot; title=&quot;Announcing Lucet: Fastly’s native WebAssembly compiler and runtime&quot;&gt;Announcing Lucet: Fastly’s native WebAssembly compiler and runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wasi.dev/&quot; title=&quot;WASI&quot;&gt;WASI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CraneStation/wasmtime&quot; title=&quot;CraneStation/wasmtime: Standalone JIT-style runtime for WebAsssembly, using Cranelift&quot;&gt;CraneStation/wasmtime: Standalone JIT-style runtime for WebAsssembly, using Cranelift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cloudabi.org/&quot; title=&quot;Introducing CloudABI&quot;&gt;Introducing CloudABI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-experimental-integrity-policies-to-node-js-snyk&quot;&gt;Introducing experimental integrity policies to Node.js | Snyk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snyk.io/blog/introducing-experimental-integrity-policies-to-node-js/&quot; title=&quot;Introducing experimental integrity policies to Node.js | Snyk&quot;&gt;snyk.io/blog/introducing-experimental-integrity-policies-to-node-js/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 11.8.0で試験的に導入されたPolicy機能について。&lt;br&gt;
ウェブブラザにおけるSubresource Integrity相当の機能をNode.jsのモジュールロードに対して行う&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2019-03-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2019-03 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2019/04/01/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates @ 2019-03 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2019/04/01/ecmascript-proposal-updates&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2019年3月のTC39ミーティングでのECMAScript Proposal Stageの変更点をまとめたもの。&lt;br&gt;
&lt;code&gt;String.prototype.matchAll&lt;/code&gt;がStage 4になった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-event-emitters-css-tricks&quot;&gt;Understanding Event Emitters | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/understanding-event-emitters/&quot; title=&quot;Understanding Event Emitters | CSS-Tricks&quot;&gt;css-tricks.com/understanding-event-emitters/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Event Emitterを実装しながらEvent Emitterを学ぶ話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-overview-of-javascript-testing-in-2019-welldone-software-medium&quot;&gt;An Overview of JavaScript Testing in 2019 – Welldone Software – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/welldone-software/an-overview-of-javascript-testing-in-2019-264e19514d0a&quot; title=&quot;An Overview of JavaScript Testing in 2019 – Welldone Software – Medium&quot;&gt;medium.com/welldone-software/an-overview-of-javascript-testing-in-2019-264e19514d0a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのテスト周りについてまとめた記事。&lt;br&gt;
テストの種類、ツール、フレームワークなどを紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bluebill1049-react-hook-form-react-hook-for-form-validation-without-the-hassle&quot;&gt;bluebill1049/react-hook-form: 📋 React hook for form validation without the hassle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bluebill1049/react-hook-form&quot; title=&quot;bluebill1049/react-hook-form: 📋 React hook for form validation without the hassle&quot;&gt;github.com/bluebill1049/react-hook-form&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Hooksでフォームを扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ilearnio-module-alias-register-aliases-of-directories-and-custom-module-paths-in-node&quot;&gt;ilearnio/module-alias: Register aliases of directories and custom module paths in Node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ilearnio/module-alias&quot; title=&quot;ilearnio/module-alias: Register aliases of directories and custom module paths in Node&quot;&gt;github.com/ilearnio/module-alias&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackのaliasのように読み込むモジュールをマッピングで切り替えるNode.jsライブラリ。&lt;br&gt;
&lt;code&gt;Module._resolveFilename&lt;/code&gt;を上書きすることで実現している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;raathigesh-majestic-zero-config-gui-for-jest&quot;&gt;Raathigesh/majestic: ⚡ Zero config GUI for Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Raathigesh/majestic/&quot; title=&quot;Raathigesh/majestic: ⚡ Zero config GUI for Jest&quot;&gt;github.com/Raathigesh/majestic/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JestのGUIツール。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Apr 2019 11:04:56 +0900</pubDate>
        <link>https://jser.info/2019/04/02/node.js-11.13.0oncewebassembly-system-interfacewasi/</link>
        <guid isPermaLink="true">https://jser.info/2019/04/02/node.js-11.13.0oncewebassembly-system-interfacewasi/</guid>
        
        <category>Node.js</category>
        
        <category>WebAssembly</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
