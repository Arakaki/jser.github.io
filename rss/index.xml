<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 21 Dec 2017 20:39:53 +0900</pubDate>
    <lastBuildDate>Thu, 21 Dec 2017 20:39:53 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2017-12-19のJS: JavaScript開発者アンケート2017、Reactのインフラ、CQRS/EventSourcing</title>
        <description>&lt;p&gt;JSer.info #362 - &lt;a href=&quot;https://stateofjs.com/2017/introduction/&quot; title=&quot;The State of JavaScript 2017: Introduction&quot;&gt;The State of JavaScript 2017: Introduction&lt;/a&gt;にてJavaScriptを使う開発者向けアンケートの結果が公開されています。&lt;/p&gt;

&lt;p&gt;JavaScriptのフロントエンドからバックエンド、ツール、言語、ライブラリ、CSSなど幅広く扱った内容になっています。&lt;br&gt;
またそれらの結果と給料や経験年数などを組み合わせた結果を見れます。&lt;/p&gt;

&lt;p&gt;たとえば、&lt;a href=&quot;http://stateofjs.com/2017/front-end/results/&quot;&gt;#StateOfJS 2017 Results: Front-end Frameworks&lt;/a&gt;ではフロントエンドのフレームワークとして何を使っているかという質問の結果が掲載されています。&lt;br&gt;
結果としてはReact、何も使ってない、Angularとなっていて、それらのフレームワークをまた使いたいかどうかや組み合わせて使っているのかなどの投票結果が書かれています。&lt;/p&gt;

&lt;p&gt;去年の結果も&lt;a href=&quot;http://2016.stateofjs.com/&quot;&gt;http://2016.stateofjs.com/&lt;/a&gt;で見れるため、比べて見ると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2017/12/15/improving-the-repository-infrastructure.html#using-public-api-in-tests&quot; title=&quot;Behind the Scenes: Improving the Repository Infrastructure - React Blog&quot;&gt;Behind the Scenes: Improving the Repository Infrastructure - React Blog&lt;/a&gt;という記事では&lt;br&gt;
&lt;a href=&quot;https://github.com/facebook/react/&quot; title=&quot;facebook/react&quot;&gt;facebook/react&lt;/a&gt;リポジトリの開発インフラ整備について書かれています。&lt;/p&gt;

&lt;p&gt;かなり幅広く(ライブラリにおける)プロジェクト管理や改善方法について書かれています。&lt;/p&gt;

&lt;p&gt;Prettierでのコード整形、monorepoとyarn workspace、モジュール構造といった開発環境の整備。&lt;br&gt;
rollupでのflat bundle、Closure Compilerでの圧縮、加えてそれらのproductionビルドに対するテストについて。&lt;br&gt;
また、Public APIに対するテストの重要性や&lt;code&gt;npm pack&lt;/code&gt;でのpublish状況再現してのテストなど。&lt;/p&gt;

&lt;p&gt;Internalにおけるビルドシステムの改善やそれらのモジュールをリリースする仕組みの整備など、大きくなったライブラリ/フレームワークにおけるインフラを細かく紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@domagojk/patterns-for-designing-flexible-architecture-in-node-js-cqrs-es-onion-7eb10bbefe17&quot; title=&quot;Patterns for designing flexible architecture in node.js (CQRS/ES/Onion)&quot;&gt;Patterns for designing flexible architecture in node.js (CQRS/ES/Onion)&lt;/a&gt;という記事では、TypeScriptを使ってCQRS/EventSourcing(ES)パターンでNode.jsアプリを実装する話が書かれています。&lt;/p&gt;

&lt;p&gt;記事中に出てくるサンプルアプリは&lt;a href=&quot;https://github.com/domagojk/beenion&quot; title=&quot;domagojk/beenion: Online adaptation of a scientific journal publishing and peer reviewing&quot;&gt;domagojk/beenion: Online adaptation of a scientific journal publishing and peer reviewing&lt;/a&gt;で公開されています。&lt;/p&gt;

&lt;p&gt;かなりしっかりとCQRS/ESパターンについて書かれているのでFluxやRedux(redux-saga)に興味がある人は読んでみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write side(Command side)&lt;/li&gt;
&lt;li&gt;Command&lt;/li&gt;
&lt;li&gt;Command handler&lt;/li&gt;
&lt;li&gt;domain model&lt;/li&gt;
&lt;li&gt;Repository&lt;/li&gt;
&lt;li&gt;Event&lt;/li&gt;
&lt;li&gt;Read side(Query side)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.3.0-(current)-|-node.js&quot;&gt;Node v9.3.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.3.0/&quot; title=&quot;Node v9.3.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.3.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 9.3.0リリース&lt;br&gt;
&lt;code&gt;--trace-event-categories&lt;/code&gt;に&lt;code&gt;node.async_hooks&lt;/code&gt;を追加、&lt;code&gt;module.builtinModules&lt;/code&gt;でビルトインモジュールの一覧を取得できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moment/changelog.md-at-2.20.0-·-moment/moment&quot;&gt;moment/CHANGELOG.md at 2.20.0 · moment/moment&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moment/moment/blob/2.20.0/CHANGELOG.md&quot; title=&quot;moment/CHANGELOG.md at 2.20.0 · moment/moment&quot;&gt;github.com/moment/moment/blob/2.20.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;moment 2.20.0リリース。&lt;br&gt;
HTML5 inputに対応するフォーマットの追加、&lt;code&gt;UTC&lt;/code&gt;への変換しないオプションが&lt;code&gt;toISOString&lt;/code&gt;に追加された&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/marwahaha/e0d4135fbf8bb75fa85c4aa2bddc5031&quot; title=&quot;moment-2.20.0.md&quot;&gt;moment-2.20.0.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-docusaurus-·-docusaurus&quot;&gt;Introducing Docusaurus · Docusaurus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docusaurus.io/blog/2017/12/14/introducing-docusaurus.html&quot; title=&quot;Introducing Docusaurus · Docusaurus&quot;&gt;docusaurus.io/blog/2017/12/14/introducing-docusaurus.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;OSSのドキュメントサイト生成ツールであるdocusaurusが正式公開された。&lt;br&gt;
docusaurusが作られた理由や使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-&amp;quot;fast&amp;quot;-by-default-·-typestrong/ts-node&quot;&gt;Release &amp;quot;Fast&amp;quot; By Default · TypeStrong/ts-node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TypeStrong/ts-node/releases/tag/v4.0.0&quot; title=&quot;Release \&amp;quot;Fast\&amp;quot; By Default · TypeStrong/ts-node&quot;&gt;github.com/TypeStrong/ts-node/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ts-node 4.0.0リリース。&lt;br&gt;
&lt;code&gt;--fast&lt;/code&gt;がデフォルトとなった。&lt;br&gt;
&lt;code&gt;--type-check&lt;/code&gt;を使うことで型チェックを合わせて行うように変更。&lt;br&gt;
&lt;code&gt;transformers&lt;/code&gt;オプションのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enter-audioworklet- | -web- | -google-developers&quot;&gt;Enter AudioWorklet  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/12/audio-worklet&quot; title=&quot;Enter AudioWorklet  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/12/audio-worklet&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 64でフラグ付きの実装が入るAudioWorkletについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-javascript-2017:-introduction&quot;&gt;The State of JavaScript 2017: Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://stateofjs.com/2017/introduction/&quot; title=&quot;The State of JavaScript 2017: Introduction&quot;&gt;stateofjs.com/2017/introduction/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの開発者アンケートの結果が公開された。&lt;br&gt;
JavaScriptのフロントエンドからバックエンドまで幅広くツールや言語、ライブラリ、CSSなどについて扱っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;モバイル開発に役立つjsデバッグ術---mercari-engineering-blog&quot;&gt;モバイル開発に役立つJSデバッグ術 - Mercari Engineering Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.mercari.com/entry/2017/12/13/103000&quot; title=&quot;モバイル開発に役立つJSデバッグ術 - Mercari Engineering Blog&quot;&gt;tech.mercari.com/entry/2017/12/13/103000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールの機能紹介をしている記事。&lt;br&gt;
Responsive表示、ネットワークスロットリング、CPUスロットリング、全ファイル検索など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-current-state-of-implementation-and-planning-for-esmodules&quot;&gt;The Current State of Implementation and Planning for ESModules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/the-current-state-of-implementation-and-planning-for-esmodules-a4ecb2aac07a&quot; title=&quot;The Current State of Implementation and Planning for ESModules&quot;&gt;medium.com/the-node-js-collection/the-current-state-of-implementation-and-planning-for-esmodules-a4ecb2aac07a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのES Modulesの実装状況や優先度についての説明。&lt;br&gt;
CommonJSとの相互運用性、mjsのサポート、hook apiのサポート、コアモジュールの対応、&lt;code&gt;import.meta&lt;/code&gt;についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;behind-the-scenes:-improving-the-repository-infrastructure---react-blog&quot;&gt;Behind the Scenes: Improving the Repository Infrastructure - React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2017/12/15/improving-the-repository-infrastructure.html&quot; title=&quot;Behind the Scenes: Improving the Repository Infrastructure - React Blog&quot;&gt;reactjs.org/blog/2017/12/15/improving-the-repository-infrastructure.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのリポジトリのインフラ改善について。&lt;br&gt;
Prettierでのコード整形、monorepoとyarn workspace、モジュール構造、rollupでのflat bundle、Closure Compilerでの圧縮。&lt;br&gt;
productionビルドに対するテスト、Public APIに対するテスト、&lt;code&gt;npm pack&lt;/code&gt;でのpublish状況再現。&lt;br&gt;
カスタムビルドの対応、リリースフロー整備など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-global-`reflect`-object,-its-use-cases-and-things-to-watch-out-for&quot;&gt;The global `Reflect` object, its use cases and things to watch out for&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.stefanjudis.com/today-i-learned/the-global-reflect-object-its-use-cases-and-things-to-watch-out-for/&quot; title=&quot;The global \`Reflect\` object, its use cases and things to watch out for&quot;&gt;www.stefanjudis.com/today-i-learned/the-global-reflect-object-its-use-cases-and-things-to-watch-out-for/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Reflect&lt;/code&gt;の使い方について。&lt;br&gt;
&lt;code&gt;Proxy&lt;/code&gt;と合わせて使うものでオブジェクトの変更のloggingを例解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-debug-front-end:-elements-–-pragmatists&quot;&gt;How to debug front-end: Elements – Pragmatists&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.pragmatists.com/how-to-debug-front-end-elements-d97da4cbc3ea&quot; title=&quot;How to debug front-end: Elements – Pragmatists&quot;&gt;blog.pragmatists.com/how-to-debug-front-end-elements-d97da4cbc3ea&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの開発者ツールの使い方について。&lt;br&gt;
デバッガー、Element inspector、Source、スタイルなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nitin42/react-perf-devtool:-a-chrome-developer-tool-extension-to-inspect-performance-of-react-components.&quot;&gt;nitin42/react-perf-devtool: A Chrome developer tool extension to inspect performance of React components.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nitin42/react-perf-devtool&quot; title=&quot;nitin42/react-perf-devtool: A Chrome developer tool extension to inspect performance of React components.&quot;&gt;github.com/nitin42/react-perf-devtool&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントのパフォーマンス計測ツール。&lt;br&gt;
Reactの&lt;code&gt;performance.measure&lt;/code&gt;の結果を使い、&lt;code&gt;react-addons-perf&lt;/code&gt;のような計測結果を表示できるブラウザ拡張とツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymer-2-and-googlebot-–-dev-channel-–-medium&quot;&gt;Polymer 2 and Googlebot – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/polymer-2-and-googlebot-2ad50c5727dd&quot; title=&quot;Polymer 2 and Googlebot – Dev Channel – Medium&quot;&gt;medium.com/dev-channel/polymer-2-and-googlebot-2ad50c5727dd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SEO&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PolymerとGoogle Botへの対応について。&lt;br&gt;
Google BotはChrome 41相当であるため、TranspilerやPolyfill、確認方法などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;calirojas506/vue-inspector:-vue.js-inspector-for-mobile-devices&quot;&gt;calirojas506/vue-inspector: Vue.js Inspector for Mobile Devices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/calirojas506/vue-inspector&quot; title=&quot;calirojas506/vue-inspector: Vue.js Inspector for Mobile Devices&quot;&gt;github.com/calirojas506/vue-inspector&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;VueのInspectorライブラリ。&lt;br&gt;
モバイルデバイス上でVueコンポーネントのデバッグをする目的のツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nik-garmash/hyntax:-straightforward-html-parser&quot;&gt;nik-garmash/hyntax: Straightforward HTML parser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nik-garmash/hyntax&quot; title=&quot;nik-garmash/hyntax: Straightforward HTML parser&quot;&gt;github.com/nik-garmash/hyntax&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLパーサライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developit/microbundle:-📦-zero-configuration-bundler-for-tiny-modules.&quot;&gt;developit/microbundle: 📦 Zero-configuration bundler for tiny modules.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/microbundle&quot; title=&quot;developit/microbundle: 📦 Zero-configuration bundler for tiny modules.&quot;&gt;github.com/developit/microbundle&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;設定ファイルなしでbundleする目的のRollupのラッパーツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xtuc/js-webassembly-interpreter:-webassembly-interpreter&quot;&gt;xtuc/js-webassembly-interpreter: WebAssembly interpreter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/xtuc/js-webassembly-interpreter&quot; title=&quot;xtuc/js-webassembly-interpreter: WebAssembly interpreter&quot;&gt;github.com/xtuc/js-webassembly-interpreter&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyインタープリタ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;popmotion---a-functional-javascript-motion-library&quot;&gt;Popmotion - A functional JavaScript motion library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://popmotion.io/&quot; title=&quot;Popmotion - A functional JavaScript motion library&quot;&gt;popmotion.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;関数でモーションを扱うアニメーションライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ballercat/walt:-walt-is-a-javascript-like-syntax-for-webassembly-text-format-wip&quot;&gt;ballercat/walt: Walt is a JavaScript-like syntax for WebAssembly text format WIP&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ballercat/walt&quot; title=&quot;ballercat/walt: Walt is a JavaScript-like syntax for WebAssembly text format WIP&quot;&gt;github.com/ballercat/walt&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript/Flowのサブセットのように書けて、WebAssemblyにコンパイルできる言語とツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;franciscop/state:-state-management-tool-using-proxy()&quot;&gt;franciscop/state: State management tool using Proxy()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/franciscop/state&quot; title=&quot;franciscop/state: State management tool using Proxy()&quot;&gt;github.com/franciscop/state&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Proxy&lt;/code&gt;を使ったステート管理ライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sveltejs/sapper:-combat-ready-apps,-engineered-by-svelte&quot;&gt;sveltejs/sapper: Combat-ready apps, engineered by Svelte&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sveltejs/sapper&quot; title=&quot;sveltejs/sapper: Combat-ready apps, engineered by Svelte&quot;&gt;github.com/sveltejs/sapper&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SvelteをつかったNext.jsのようなフレームワーク&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sapper-template.now.sh/blog/what-is-sapper&quot; title=&quot;What is Sapper?&quot;&gt;What is Sapper?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-electron-in-action&quot;&gt;Manning | Electron in Action&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/electron-in-action&quot; title=&quot;Manning | Electron in Action&quot;&gt;www.manning.com/books/electron-in-action&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年5月1日発売&lt;br&gt;
Electronについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;patterns-for-designing-flexible-architecture-in-node.js-(cqrs/es/onion)&quot;&gt;Patterns for designing flexible architecture in node.js (CQRS/ES/Onion)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@domagojk/patterns-for-designing-flexible-architecture-in-node-js-cqrs-es-onion-7eb10bbefe17&quot; title=&quot;Patterns for designing flexible architecture in node.js (CQRS/ES/Onion)&quot;&gt;medium.com/@domagojk/patterns-for-designing-flexible-architecture-in-node-js-cqrs-es-onion-7eb10bbefe17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CQRS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;EventSourcing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptを使ってCQRS+EventSourcingのパターンでNode.jsアプリを実装する記事。&lt;br&gt;
サンプルプロジェクトと共にコマンドからイベントを作りそれをRepositoryに保存する流れを紹介してる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/domagojk/beenion&quot; title=&quot;domagojk/beenion: Online adaptation of a scientific journal publishing and peer reviewing&quot;&gt;domagojk/beenion: Online adaptation of a scientific journal publishing and peer reviewing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 19 Dec 2017 10:21:14 +0900</pubDate>
        <link>https://jser.info/2017/12/19/javascript2017-react-cqrseventsourcing/</link>
        <guid isPermaLink="true">https://jser.info/2017/12/19/javascript2017-react-cqrseventsourcing/</guid>
        
        <category>JavaScript</category>
        
        <category>react</category>
        
        <category>cqrs</category>
        
        <category>EventSourcing</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-12-11のJS: Parcel、webpack 4.0.0α、Node.js Performance改善ガイド</title>
        <description>&lt;p&gt;JSer.info #361 - &lt;a href=&quot;https://ja.wikipedia.org/wiki/%E8%A8%AD%E5%AE%9A%E3%82%88%E3%82%8A%E8%A6%8F%E7%B4%84&quot; title=&quot;設定より規約&quot;&gt;設定より規約&lt;/a&gt;(&lt;a href=&quot;https://en.wikipedia.org/wiki/Convention_over_configuration&quot; title=&quot;Convention over configuration&quot;&gt;Convention over configuration&lt;/a&gt;)なbundlerである&lt;a href=&quot;https://parceljs.org/&quot; title=&quot;Parcel&quot;&gt;Parcel&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hackernoon.com/announcing-parcel-a-blazing-fast-zero-configuration-web-application-bundler-feac43aac0f1&quot; title=&quot;🚀 Announcing Parcel: A blazing fast, zero configuration web application bundler 📦&quot;&gt;🚀 Announcing Parcel: A blazing fast, zero configuration web application bundler 📦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.js.org/&quot; title=&quot;webpack&quot;&gt;webpack&lt;/a&gt;や&lt;a href=&quot;http://fuse-box.org/&quot; title=&quot;FuseBox&quot;&gt;FuseBox&lt;/a&gt;は詳細を設定ファイルで扱いますが、&lt;a href=&quot;https://parceljs.org/&quot; title=&quot;Parcel&quot;&gt;Parcel&lt;/a&gt;には現時点では設定ファイルがありません。&lt;br&gt;
代わりにビルトインのプラグインと&lt;code&gt;pacakge.json&lt;/code&gt;に書かれた&lt;code&gt;parcel-plugin-&lt;/code&gt;から始まる名前のパッケージを&lt;a href=&quot;https://parceljs.org/plugins.html#plugin-api&quot; title=&quot;Plugins&quot;&gt;Plugins&lt;/a&gt;として読み込むことで、対応するファイル(&lt;a href=&quot;https://parceljs.org/assets.html&quot; title=&quot;Assets&quot;&gt;Assets&lt;/a&gt;)などを拡張します。&lt;br&gt;
（Assetの内部処理として、それぞれのAssetsに対応する設定ファイルを使う仕組み。たとえば&lt;a href=&quot;https://github.com/parcel-bundler/parcel/blob/cf6902a30a4acc49a5b4572be42781ebf3ed356a/src/assets/JSAsset.js&quot; title=&quot;JSAsset&quot;&gt;JSAsset&lt;/a&gt;ならば内部的にBabelが利用され、&lt;code&gt;.babelrc&lt;/code&gt;を読み込んで処理される)&lt;/p&gt;

&lt;p&gt;JavaScriptだけではなくHTMLファイルをEntry pointとして扱うことができるため、典型的にはHTMLを起点にそこから読み込まれているAsset(CSSやJavaScriptなど)の依存を集めてビルドします。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ parcel build src/index.html
# distフォルダへAssets毎{js,css,htmlなど}のパッケージ結果が出力される
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、&lt;a href=&quot;https://github.com/fuse-box/fuse-box/blob/93b5daca3fb1f91989983cf088b546a6f3672083/docs/internal-process.md&quot;&gt;FuseBoxのような&lt;/a&gt;Asset単位のファイルキャッシュをしていて、デフォルトでは2度目のビルドからキャッシュが利用されます。&lt;br&gt;
一方、&lt;a href=&quot;https://github.com/parcel-bundler/parcel/tree/cf6902a30a4acc49a5b4572be42781ebf3ed356a#benchmarks&quot;&gt;公式サイトに掲載されているBenchmark&lt;/a&gt;の&lt;a href=&quot;https://github.com/parcel-bundler/parcel/issues/9&quot;&gt;詳細は明らかにされていない&lt;/a&gt;ため、キャッシュなしにおける優位性は不明です。&lt;br&gt;
(parcelでは&lt;a href=&quot;https://github.com/parcel-bundler/parcel/issues/68&quot; title=&quot;source map support&quot;&gt;source map support&lt;/a&gt;がまだサポートされていないなど、同等の設定での計測かは明確にはなっていない。)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;webpackの次のメジャーアップデートであるwebpack 4.0.0-alpha.0が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/6064&quot; title=&quot;webpack 4.0.0-alpha.0 feedback · Issue #6064 · webpack/webpack&quot;&gt;webpack 4.0.0-alpha.0 feedback · Issue #6064 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BREAKING CHANGEとしてはNode.js 4のサポート終了、新しいプラグインシステムの追加と既存プラグインの変更などが中心です。既存のプラグインも基本的には互換性を持ちますが、一部プラグインではWorkaroundが必要になるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/webpack/the-new-plugin-system-week-22-23-c24e3b22e95&quot; title=&quot;The new plugin system (week 22–23) – webpack – Medium&quot;&gt;The new plugin system (week 22–23) – webpack – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新しく&lt;code&gt;--mode&lt;/code&gt;オプション（&amp;quot;devevelop&amp;quot; or &amp;quot;production&amp;quot;)の追加が行われています。&lt;br&gt;
これは現在の&lt;code&gt;-d&lt;/code&gt;や&lt;code&gt;-p&lt;/code&gt;を整理して、webpackコア側の設定を&amp;quot;devevelop&amp;quot; or &amp;quot;production&amp;quot;にするものです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt; = &lt;code&gt;--mode development --devtool cheap-module-eval-source-map&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; = &lt;code&gt;--mode production --plugin uglifyjs-webpack-plugin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/6075&quot; title=&quot;Webpack 4: include UglifyJsPlugin under the production mode · Issue #6075 · webpack/webpack&quot;&gt;Webpack 4: include UglifyJsPlugin under the production mode · Issue #6075 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、module typeとしてesm(&lt;code&gt;.mjs&lt;/code&gt;)とwebassembly(&lt;code&gt;.wasm&lt;/code&gt;)をデフォルトで探すようになり、&lt;code&gt;sideEffects&lt;/code&gt;設定のサポートなどが追加されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://parceljs.org/&quot; title=&quot;Parcel&quot;&gt;Parcel&lt;/a&gt;のリリースを受けて、webpackの今後のロードマップに投票できる&lt;a href=&quot;https://webpack.js.org/vote/&quot; title=&quot;Vote&quot;&gt;Vote&lt;/a&gt;にZero Config Modeが追加されています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Alright &lt;a href=&quot;https://twitter.com/hashtag/JavaScript?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#JavaScript&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/webpack?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#webpack&lt;/a&gt; folks, I&amp;#39;ve created the voting item! &lt;br&gt;&lt;br&gt;If you _really_ want a Zero Configuration (aka your configs live in .postcss, .babel, .everythingelse), we can do this. It seems like theres folks who want this.) Thanks &lt;a href=&quot;https://twitter.com/parceljs?ref_src=twsrc%5Etfw&quot;&gt;@parceljs&lt;/a&gt; 4 ideas! &lt;a href=&quot;https://t.co/y57ALM28fB&quot;&gt;https://t.co/y57ALM28fB&lt;/a&gt; &lt;a href=&quot;https://t.co/m5RYhR4s3N&quot;&gt;pic.twitter.com/m5RYhR4s3N&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sean Thomas Larkin (@TheLarkInn) &lt;a href=&quot;https://twitter.com/TheLarkInn/status/938928029044170752?ref_src=twsrc%5Etfw&quot;&gt;December 8, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2017/12/05/125517&quot; title=&quot;Node.js Performance 改善ガイド - from scratch&quot;&gt;Node.js Performance 改善ガイド - from scratch&lt;/a&gt;という記事ではNode.jsアプリケーションのパフォーマンス改善方法について書かれています。&lt;/p&gt;

&lt;p&gt;メモリ、CPU、ファイルI/O、ネットワークそれぞれにおける典型的なボトルネックの調べ方や改善方法について。&lt;br&gt;
また、JavaScriptの最適化の問題や、クラスタやNative Addonなどの代替手法についてなどについてかかれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-1.9.0:-jsx-fragments,-editorconfig-and-arrow-parens-·-prettier/prettier&quot;&gt;Release 1.9.0: JSX Fragments, EditorConfig and Arrow Parens · prettier/prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prettier/prettier/releases/tag/1.9.0&quot; title=&quot;Release 1.9.0: JSX Fragments, EditorConfig and Arrow Parens · prettier/prettier&quot;&gt;github.com/prettier/prettier/releases/tag/1.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.9.0リリース。&lt;br&gt;
JSXのFragment(&lt;code&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/code&gt;)ｗｐサポート、EditorConfigのサポート、Markdownのサポート改善。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;📦-parcel&quot;&gt;📦 Parcel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://parceljs.org/&quot; title=&quot;📦 Parcel&quot;&gt;parceljs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML,JS,CSSなどをまとめてbundleできるツール。&lt;br&gt;
設定不要で使えること、高速にビルドできることが目的のツール。&lt;br&gt;
ファイルタイプに対する処理をプラグインとして追加できる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@devongovett/announcing-parcel-a-blazing-fast-zero-configuration-web-application-bundler-feac43aac0f1&quot; title=&quot;🚀 Announcing Parcel: A blazing fast, zero configuration web application bundler 📦&quot;&gt;🚀 Announcing Parcel: A blazing fast, zero configuration web application bundler 📦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs/jsvu:-javascript-(engine)-version-updater&quot;&gt;GoogleChromeLabs/jsvu: JavaScript (engine) Version Updater&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/jsvu&quot; title=&quot;GoogleChromeLabs/jsvu: JavaScript (engine) Version Updater&quot;&gt;github.com/GoogleChromeLabs/jsvu&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;各種JavaScriptエンジンをダウンロード、インストールできるツール。&lt;br&gt;
eshost-cliと組み合わせることでChakra、JavaScriptCore、SpiderMonkey、V8でのJavaScript実行結果を同時に得られる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bterlson/eshost-cli&quot; title=&quot;bterlson/eshost-cli: Run ECMAScript code uniformly across any ECMAScript host&quot;&gt;bterlson/eshost-cli: Run ECMAScript code uniformly across any ECMAScript host&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-45-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 45 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8039/release-notes-for-safari-technology-preview-45/&quot; title=&quot;Release Notes for Safari Technology Preview 45 | WebKit&quot;&gt;webkit.org/blog/8039/release-notes-for-safari-technology-preview-45/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 45リリース。&lt;br&gt;
SVGフィルターの最適化、&lt;code&gt;display:contents&lt;/code&gt;をデフォルトで有効化、&lt;code&gt;OffscreenCanvas.getContext(&amp;quot;webgl&amp;quot;)&lt;/code&gt;を実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mochify.js/changes.md-at-v5.0.0-·-mantoni/mochify.js&quot;&gt;mochify.js/CHANGES.md at v5.0.0 · mantoni/mochify.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mantoni/mochify.js/blob/v5.0.0/CHANGES.md&quot; title=&quot;mochify.js/CHANGES.md at v5.0.0 · mantoni/mochify.js&quot;&gt;github.com/mantoni/mochify.js/blob/v5.0.0/CHANGES.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mochaを使ったテストをブラウザで動かすMchify 5.0.0リリース。&lt;br&gt;
PhantomJSからHeadless Chromeに変更、&lt;code&gt;--url&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-5.1-&amp;amp;-more-now-available-–-angular-blog&quot;&gt;Angular 5.1 &amp;amp; More Now Available – Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/angular-5-1-more-now-available-27d372f5eb4e&quot; title=&quot;Angular 5.1 &amp;amp; More Now Available – Angular Blog&quot;&gt;blog.angular.io/angular-5-1-more-now-available-27d372f5eb4e&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 5.1リリース。&lt;br&gt;
CLIがService Workerオプション、App Shellオプションサポート、TypeScript 2.5サポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-4.0.0-alpha.0-feedback-·-issue-#6064-·-webpack/webpack&quot;&gt;webpack 4.0.0-alpha.0 feedback · Issue #6064 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/6064&quot; title=&quot;webpack 4.0.0-alpha.0 feedback · Issue #6064 · webpack/webpack&quot;&gt;github.com/webpack/webpack/issues/6064&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 4.0.0-alpha.0リリース。&lt;br&gt;
Node.js 4のサポート終了、&lt;code&gt;--mode&lt;/code&gt;（dev/prod)の追加。&lt;br&gt;
module typeとしてesm、webassemblyのサポート、&lt;code&gt;sideEffects&lt;/code&gt;設定のサポート。&lt;br&gt;
新しいプラグインシステムの追加と既存プラグインの変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;qiita-の新記事ページのレイアウト実装---qiita&quot;&gt;Qiita の新記事ページのレイアウト実装 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/morishitter/items/c4aa500929f2de441bfd&quot; title=&quot;Qiita の新記事ページのレイアウト実装 - Qiita&quot;&gt;qiita.com/morishitter/items/c4aa500929f2de441bfd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Grid Layoutと&lt;code&gt;position: sticky&lt;/code&gt;でのレイアウトについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;puppeteerでwebページからメインコンテンツっぽいところを抽出してみる---qiita&quot;&gt;PuppeteerでWebページからメインコンテンツっぽいところを抽出してみる - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/ukyo/items/287169de85576dfed608&quot; title=&quot;PuppeteerでWebページからメインコンテンツっぽいところを抽出してみる - Qiita&quot;&gt;qiita.com/ukyo/items/287169de85576dfed608&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PuppeteerでスクレイピングしたDOM要素のスコアリングして、メインコンテンツを抽出する仕組みについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;await-vs-return-vs-return-await---jakearchibald.com&quot;&gt;await vs return vs return await - JakeArchibald.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2017/await-vs-return-vs-return-await/&quot; title=&quot;await vs return vs return await - JakeArchibald.com&quot;&gt;jakearchibald.com/2017/await-vs-return-vs-return-await/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;async functionの中で&lt;code&gt;await&lt;/code&gt;と&lt;code&gt;return&lt;/code&gt;、&lt;code&gt;return await&lt;/code&gt;の違いについてを解説した記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-63- | -web- | -google-developers&quot;&gt;New in Chrome 63  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/12/nic63&quot; title=&quot;New in Chrome 63  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/12/nic63&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 63リリース。&lt;br&gt;
Dynamic imports、Async iterator、&lt;code&gt;Promise#finally&lt;/code&gt;、&lt;code&gt;Intl.PluralRules&lt;/code&gt;、CSS &lt;code&gt;overscroll-behavior&lt;/code&gt;プロパティのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-performance-改善ガイド---from-scratch&quot;&gt;Node.js Performance 改善ガイド - from scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2017/12/05/125517&quot; title=&quot;Node.js Performance 改善ガイド - from scratch&quot;&gt;yosuke-furukawa.hatenablog.com/entry/2017/12/05/125517&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのパフォーマンスの調査や測定をする方法について。&lt;br&gt;
メモリリーク、CPUの処理時間、ファイルI/O、ネットワークのボトルネック調査について。&lt;br&gt;
またJavaScriptのdeoptが起きてないか、クラスタやNative Addonなどの代替手法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vanilla-jsで学ぶredux---qiita&quot;&gt;Vanilla JSで学ぶRedux - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/ryota-murakami/items/2ed6b12943214ecfeeaf&quot; title=&quot;Vanilla JSで学ぶRedux - Qiita&quot;&gt;qiita.com/ryota-murakami/items/2ed6b12943214ecfeeaf&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reduxのコードを見ながらReduxの仕組みについて解説している記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prototype-tree-·-trycatch&quot;&gt;Prototype Tree · TryCatch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zhirzh.github.io/2017/12/06/prototype-tree/&quot; title=&quot;Prototype Tree · TryCatch&quot;&gt;zhirzh.github.io/2017/12/06/prototype-tree/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;図&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptオブジェクトのprototypeツリーをD3.jsを使って可視化する話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zhirzh/prototype-tree&quot; title=&quot;zhirzh/prototype-tree&quot;&gt;zhirzh/prototype-tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;歴史的遺物callback-interfaceの紹介---qiita&quot;&gt;歴史的遺物callback interfaceの紹介 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/yuki3/items/ab20985e70247c80d19c&quot; title=&quot;歴史的遺物callback interfaceの紹介 - Qiita&quot;&gt;qiita.com/yuki3/items/ab20985e70247c80d19c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;addEventListener&lt;/code&gt;のcallback interfaceと&lt;code&gt;requestAnimationFrame&lt;/code&gt;などのcallback functionという仕様の違いついて。&lt;br&gt;
イベントハンドラにおける&lt;code&gt;handleEvent&lt;/code&gt;の動作について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-headless-mode-in-firefox-–-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Using Headless Mode in Firefox – Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/12/using-headless-mode-in-firefox/&quot; title=&quot;Using Headless Mode in Firefox – Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2017/12/using-headless-mode-in-firefox/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SeleniumをFirefoxのHeadlessモードで動かす方法、Debugging Protocolについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fast-source-map-generation-for-react-native-–-david-aurelio-–-medium&quot;&gt;Fast Source Map Generation for React Native – David Aurelio – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@david.aurelio/medium-fast-source-map-generation-for-react-native-ea5549007c18&quot; title=&quot;Fast Source Map Generation for React Native – David Aurelio – Medium&quot;&gt;medium.com/@david.aurelio/medium-fast-source-map-generation-for-react-native-ea5549007c18&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;sourcemap&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native(Metro)が利用するSource Mapの高速な実装について&lt;br&gt;
https://github.com/facebook/metro/tree/master/packages/metro-source-map&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-performance-fixes-on-airbnb-listing-pages-–-airbnb-engineering-&amp;amp;-data-science-–-medium&quot;&gt;React Performance Fixes on Airbnb Listing Pages – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/recent-web-performance-fixes-on-airbnb-listing-pages-6cd8d93df6f4&quot; title=&quot;React Performance Fixes on Airbnb Listing Pages – Airbnb Engineering &amp;amp; Data Science – Medium&quot;&gt;medium.com/airbnb-engineering/recent-web-performance-fixes-on-airbnb-listing-pages-6cd8d93df6f4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったアプリケーションのパフォーマンスを測定し、それをどのように修正していったかについての記事。&lt;br&gt;
&lt;code&gt;PureComponent&lt;/code&gt;での無駄な描画を防止、スクロール時の処理、入力欄などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-calendar-»-clearing-cache-in-the-browser&quot;&gt;Performance Calendar » Clearing cache in the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2017/clearing-cache-in-the-browser/&quot; title=&quot;Performance Calendar » Clearing cache in the browser&quot;&gt;calendar.perfplanet.com/2017/clearing-cache-in-the-browser/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブアプリ側からブラウザのキャッシュをクリアするさまざまな手法のまとめ。&lt;br&gt;
&lt;code&gt;location.reload(true)&lt;/code&gt;、Vary、fetch、iframe、Clear-SIte-Dataなどの手法毎にブラウザの対応についてまとめている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconf-budapest-2017---youtube&quot;&gt;JSConf Budapest 2017 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list=PL37ZVnwpeshH9ztZfHqvQhF1_Zm4VcCTD&quot; title=&quot;JSConf Budapest 2017 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL37ZVnwpeshH9ztZfHqvQhF1_Zm4VcCTD&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSConf Budapest 2017の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jsconfbp.com/&quot; title=&quot;JSConf Budapest 2017&quot;&gt;JSConf Budapest 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eirik-vullum:-javascript-metaprogramming---es6-proxy-use-and-abuse-|-jsconf-budapest-2017---youtube&quot;&gt;Eirik Vullum: JavaScript Metaprogramming - ES6 Proxy Use and Abuse | JSConf Budapest 2017 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_5X2aB_mNp4&quot; title=&quot;Eirik Vullum: JavaScript Metaprogramming - ES6 Proxy Use and Abuse | JSConf Budapest 2017 - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;_5X2aB_mNp4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES Proxyを活用したメタプログラミングについての発表動画&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://slides.com/eiriklv/javascript-metaprogramming-with-proxies-41#/&quot; title=&quot;JSBP - JavaScript Metaprogramming with Proxies by Eirik Langholm Vullum&quot;&gt;JSBP - JavaScript Metaprogramming with Proxies by Eirik Langholm Vullum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;makeyouareact---google-スライド&quot;&gt;MakeYouAReact - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1qh5ZCMI2e45Z4YZBcI62NMDt-1H2Uwx0sZ3T8ScNStk/pub?start=false&amp;amp;loop=false&amp;amp;delayms=60000#slide=id.g18b78f925cfb8077_17&quot; title=&quot;MakeYouAReact - Google スライド&quot;&gt;docs.google.com/presentation/d/1qh5ZCMI2e45Z4YZBcI62NMDt-1H2Uwx0sZ3T8ScNStk/pub?start&amp;#x3D;false&amp;amp;loop&amp;#x3D;false&amp;amp;delayms&amp;#x3D;60000#slide&amp;#x3D;id.g18b78f925cfb8077_17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactのようなViewライブラリを自作するために必要な技術について解説してるスライド。&lt;br&gt;
実際に実装を作りながら、DOMのdiff/patchなどについて解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;three.js入門サイト---ics-media&quot;&gt;Three.js入門サイト - ICS MEDIA&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ics.media/tutorial-three/index.html&quot; title=&quot;Three.js入門サイト - ICS MEDIA&quot;&gt;ics.media/tutorial-three/index.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Three.jsについてのチュートリアルサイト。&lt;br&gt;
Three.jsの使い方やWebGLについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i0natan/nodebestpractices:-the-largest-node.js-best-practices-list.-curated-from-the-top-ranked-articles-and-always-updated&quot;&gt;i0natan/nodebestpractices: The largest Node.JS best practices list. Curated from the top ranked articles and always updated&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/i0natan/nodebestpractices&quot; title=&quot;i0natan/nodebestpractices: The largest Node.JS best practices list. Curated from the top ranked articles and always updated&quot;&gt;github.com/i0natan/nodebestpractices&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとexpressについてのプラクティスガイド。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wasmfiddle&quot;&gt;WasmFiddle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wasdk.github.io/WasmFiddle/&quot; title=&quot;WasmFiddle&quot;&gt;wasdk.github.io/WasmFiddle/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのjsfiddle的なサービス。&lt;br&gt;
Wasmのコンパイルと実行、wast/wasmのダウンロードができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/whatwg-mimetype:-parses,-serializes,-and-manipulates-mime-types,-according-to-the-whatwg-mime-sniffing-standard&quot;&gt;jsdom/whatwg-mimetype: Parses, serializes, and manipulates MIME types, according to the WHATWG MIME Sniffing Standard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsdom/whatwg-mimetype&quot; title=&quot;jsdom/whatwg-mimetype: Parses, serializes, and manipulates MIME types, according to the WHATWG MIME Sniffing Standard&quot;&gt;github.com/jsdom/whatwg-mimetype&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MIME typesのパーサ、シリアライズライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deeplearn.js&quot;&gt;deeplearn.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deeplearnjs.org/&quot; title=&quot;deeplearn.js&quot;&gt;deeplearnjs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;機械学習&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebGLを使った機械学習向けのライブラリ。&lt;br&gt;
同期的な(NumPyのような)計算実行と遅延的な(TensorFlowのような)計算実行をサポートしている。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 11 Dec 2017 09:06:46 +0900</pubDate>
        <link>https://jser.info/2017/12/11/parcel-webpack-4.0.0a-node.js-performance/</link>
        <guid isPermaLink="true">https://jser.info/2017/12/11/parcel-webpack-4.0.0a-node.js-performance/</guid>
        
        <category>bundler</category>
        
        <category>webpack</category>
        
        <category>node.js</category>
        
        <category>performance</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-12-05のJS: npm 5.6.0(beta)、React 16.2.0、New ECMAScript Proposals</title>
        <description>&lt;p&gt;JSer.info #360 - npm 5.6.0(beta)が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/167963735925/v560-2017-11-27&quot; title=&quot;The npm Blog — v5.6.0 (2017-11-27)&quot;&gt;The npm Blog — v5.6.0 (2017-11-27)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Fully cross-platform package-lock.json&lt;br&gt;
-- &lt;a href=&quot;https://github.com/npm/npm/pull/19054&quot; title=&quot;Stop dropping failed optional deps by iarna · Pull Request #19054 · npm/npm&quot;&gt;Stop dropping failed optional deps by iarna · Pull Request #19054 · npm/npm&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;上記のように、&lt;code&gt;package-lock.json&lt;/code&gt;に関してクロスプラットフォーム間での互換性があり一意のロックファイルが生成されるようになりました。&lt;/p&gt;

&lt;p&gt;この問題は&lt;a href=&quot;https://github.com/npm/npm/issues/2679&quot; title=&quot;shrinkwrap and optionalDependencies&quot;&gt;shrinkwrapとoptionalDependencies&lt;/a&gt;の頃からあるので、5年がかりの修正となりました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React v16.2.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html&quot; title=&quot;React v16.2.0: Improved Support for Fragments - React Blog&quot;&gt;React v16.2.0: Improved Support for Fragments - React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React v16.2.0ではFragment(&lt;code&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/code&gt;)がサポートされました。&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/code&gt; または&lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;要素を使うことでフラグメントを扱うことができるようになっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;More&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Another&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;heading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;Even&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JSXの構文としての追加となるためFlow、TypeScriptやBabelなどパースするツール側の更新も必要です。&lt;br&gt;
著名なツールはサポート済みであるためアップデートするだけで利用できそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2017/11.md&quot; title=&quot;61st meeting of Ecma TC39&quot;&gt;61st meeting of Ecma TC39&lt;/a&gt;が行われ、&lt;a href=&quot;https://github.com/tc39/proposals&quot; title=&quot;ECMAScript proposals&quot;&gt;ECMAScript proposals&lt;/a&gt;のステータスが更新されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/psmarshall/string-replace-all-proposal&quot;&gt;&lt;code&gt;String.prototype.replaceAll&lt;/code&gt;&lt;/a&gt;や &lt;a href=&quot;https://docs.google.com/presentation/d/1jPsw7EGsS6BW59_BDRu9o0o3UwSXQeUhi38QG55ZoPI/edit?pli=1#slide=id.p&quot;&gt;Decimal&lt;/a&gt;といった新しいProposalの追加がされています。&lt;/p&gt;

&lt;p&gt;また既存のProposalの更新も行われ、&lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;JSON superset&lt;/a&gt;がStage 2へ、&lt;a href=&quot;https://github.com/tc39/proposal-numeric-separator&quot;&gt;Numeric separators&lt;/a&gt; と&lt;a href=&quot;https://github.com/tc39/proposal-flatMap&quot;&gt;&lt;code&gt;Array.prototype.{flatMap,flatten}&lt;/code&gt;&lt;/a&gt;がStage 3へ、&lt;a href=&quot;https://github.com/tc39/proposal-class-fields&quot;&gt;Class Field関係のProposalの分解&lt;/a&gt;などが行われています。&lt;/p&gt;

&lt;p&gt;詳しくは次のページにまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2017/12/05/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates @ 2017-011 | ECMAScript Daily&quot;&gt;ECMAScript proposal updates @ 2017-011 | ECMAScript Daily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v16.2.0:-improved-support-for-fragments---react-blog&quot;&gt;React v16.2.0: Improved Support for Fragments - React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html&quot; title=&quot;React v16.2.0: Improved Support for Fragments - React Blog&quot;&gt;reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.2.0リリース。&lt;br&gt;
Framentsのサポート。&lt;br&gt;
&lt;code&gt;&amp;lt;&amp;gt;&amp;lt;/&amp;gt;&lt;/code&gt; または&lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;要素を使うことでフラグメントを扱うことができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.9.0-·-webpack/webpack&quot;&gt;Release v3.9.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v3.9.0&quot; title=&quot;Release v3.9.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v3.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 3.9.0リリース。&lt;br&gt;
スキーマによるバリデーションのエラーメッセージの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.60.0-·-facebook/flow&quot;&gt;Release v0.60.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.60.0&quot; title=&quot;Release v0.60.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.60.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.60.0リリース。&lt;br&gt;
server monitorを追加して変更検知の改善、Flow linterに&lt;code&gt;unclear-type&lt;/code&gt;、&lt;code&gt;untyped-import&lt;/code&gt;の追加、&lt;code&gt;$Values&lt;/code&gt;と&lt;code&gt;$Keys&lt;/code&gt;の修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;video.js-6.5.0-release-|-video.js-blog&quot;&gt;Video.js 6.5.0 Release | Video.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.videojs.com/video-js-6-5-0-release/&quot; title=&quot;Video.js 6.5.0 Release | Video.js Blog&quot;&gt;blog.videojs.com/video-js-6-5-0-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Video.js 6.5.0リリース。&lt;br&gt;
プログレスバーのアニメーションを滑らかに、&lt;code&gt;play()&lt;/code&gt;のハンドリングの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-v5.6.0-(2017-11-27)&quot;&gt;The npm Blog — v5.6.0 (2017-11-27)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/167963735925/v560-2017-11-27&quot; title=&quot;The npm Blog — v5.6.0 (2017-11-27)&quot;&gt;blog.npmjs.org/post/167963735925/v560-2017-11-27&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 5.6.0(beta)の変更点について。 クロスプラットフォームで&lt;code&gt;package-lock.json&lt;/code&gt;の互換性が保てるようになった。 &lt;code&gt;pacakge-loc.json&lt;/code&gt;を生成するだけの&lt;code&gt;--package-lock-only&lt;/code&gt;オプションの追加、&lt;code&gt;--node-options&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-react-performance-with-react-16-and-chrome-devtools.&quot;&gt;Debugging React performance with React 16 and Chrome Devtools.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://building.calibreapp.com/debugging-react-performance-with-react-16-and-chrome-devtools-c90698a522ad&quot; title=&quot;Debugging React performance with React 16 and Chrome Devtools.&quot;&gt;building.calibreapp.com/debugging-react-performance-with-react-16-and-chrome-devtools-c90698a522ad&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16でのパフォーマンスプロファイルの読み方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#39;s-new-in-devtools-(chrome-64)- | -web- | -google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 64)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/11/devtools-release-notes&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 64)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/11/devtools-release-notes&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 64の開発者ツールの変更点について。&lt;br&gt;
パフォーマンスモニタ、Consoleサイドバー、コンソールログをグループ化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shallow-equal-for-object/react-props-|-web-scratch&quot;&gt;shallow-equal for Object/React props | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2017/11/30/shallow-equal/&quot; title=&quot;shallow-equal for Object/React props | Web Scratch&quot;&gt;efcl.info/2017/11/30/shallow-equal/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Shallow Equalを扱うライブラリについて。&lt;br&gt;
Reactの&lt;code&gt;shouldComponentUpdate&lt;/code&gt;をDeep Equal(&lt;code&gt;JSON.stringify&lt;/code&gt;)で実装した場合とShallow Equalの速度差について。&lt;br&gt;
またShallowな比較で済むように必要な状態管理についてなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-のソースコードの歩き方&quot;&gt;Chromium のソースコードの歩き方&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://nhiroki.jp/2017/12/01/chromium-sourcecode&quot; title=&quot;Chromium のソースコードの歩き方&quot;&gt;nhiroki.jp/2017/12/01/chromium-sourcecode&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;blink&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome/Blinkのプロジェクト構造について。&lt;br&gt;
ディレクトリ構造やそれぞれのディレクトリの意味などについて。&lt;br&gt;
browserとrendererでの大枠やBlink内の分け方、コードOwnerや依存の見かたについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-performance-optimization-tips:-an-overview-—-sitepoint&quot;&gt;JavaScript Performance Optimization Tips: An Overview — SitePoint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/javascript-performance-optimization-tips-an-overview/&quot; title=&quot;JavaScript Performance Optimization Tips: An Overview — SitePoint&quot;&gt;www.sitepoint.com/javascript-performance-optimization-tips-an-overview/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptとパフォーマンスについての概要を紹介した記事&lt;br&gt;
パフォーマンスがよいという定義としてのRAIL、JavaScript実行までのコスト、bundleサイズなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;measuring-the-performance-of-firefox-quantum-with-rum---akamai-developer-blog&quot;&gt;Measuring the Performance of Firefox Quantum with RUM - Akamai Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.akamai.com/blog/2017/11/29/measuring-performance-firefox-quantum-rum/&quot; title=&quot;Measuring the Performance of Firefox Quantum with RUM - Akamai Developer Blog&quot;&gt;developer.akamai.com/blog/2017/11/29/measuring-performance-firefox-quantum-rum/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 52(ESR)とFirefox 57(Quantum)のAkamaiによるロードパフォーマンス比較。&lt;br&gt;
AkamaiのRUMによるとDOM Content Loadedの時間が24%改善されたとのこと&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;最近のselenium-webdriverの話---qiita&quot;&gt;最近のselenium-webdriverの話 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/nazomikan/items/61143cbf01274c05b654&quot; title=&quot;最近のselenium-webdriverの話 - Qiita&quot;&gt;qiita.com/nazomikan/items/61143cbf01274c05b654&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Selenium&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;selenium-webdriverのPromiseManager廃止の経緯とネイティブのPromiseを使った書き方への変更について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;almin.js-がやってくれること---qiita&quot;&gt;Almin.js がやってくれること - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/kmdsbng/items/dc03d89c0ca5acc30a44&quot; title=&quot;Almin.js がやってくれること - Qiita&quot;&gt;qiita.com/kmdsbng/items/dc03d89c0ca5acc30a44&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;almin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ビジネスロジックをViewなどとは分けた状態にして、DDDをやるための土台としてのAlminについて。&lt;br&gt;
Alminで書いた場合のアプリケーションの処理の流れやドメインオブジェクトの独立性について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;monitoring-the-performance-of-a-node.js-web-application---sqreen-blog-|-modern-application-security&quot;&gt;Monitoring the performance of a Node.js web application - Sqreen Blog | Modern Application Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sqreen.io/diy-node-apm/&quot; title=&quot;Monitoring the performance of a Node.js web application - Sqreen Blog | Modern Application Security&quot;&gt;blog.sqreen.io/diy-node-apm/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;async_hook&lt;/code&gt;モジュールを使ったUser Timing APIとAsync Hooks APIを使ったパフォーマンス計測について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-@-2017-011-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2017-011 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2017/12/05/ecmascript-proposal-updates&quot; title=&quot;ECMAScript proposal updates @ 2017-011 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2017/12/05/ecmascript-proposal-updates&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2017年10月のTC39ミーティングの結果を反映したECMAScript Proposalの変更点まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2017/11.md&quot; title=&quot;agendas/11.md at master · tc39/agendas&quot;&gt;agendas/11.md at master · tc39/agendas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-plugin-vue-を作っている話---qiita&quot;&gt;eslint-plugin-vue を作っている話 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/860ce3bf0ff387f166ac&quot; title=&quot;eslint-plugin-vue を作っている話 - Qiita&quot;&gt;qiita.com/mysticatea/items/860ce3bf0ff387f166ac&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue向けのESLintプラグインである&lt;code&gt;eslint-plugin-vue&lt;/code&gt;の紹介とオンラインデモについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/eslint-plugin-vue&quot; title=&quot;vuejs/eslint-plugin-vue: Official ESLint plugin for Vue.js&quot;&gt;vuejs/eslint-plugin-vue: Official ESLint plugin for Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.jsでd3.jsを使わずにグラフを実装する---qiita&quot;&gt;Vue.jsでD3.jsを使わずにグラフを実装する - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/haribote/items/0bbf6cf5720b078039ff&quot; title=&quot;Vue.jsでD3.jsを使わずにグラフを実装する - Qiita&quot;&gt;qiita.com/haribote/items/0bbf6cf5720b078039ff&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueを使ってSVGでグラフを描画する話。&lt;br&gt;
データドリブンで折れ線グラフ、棒グラフ、円グラフなどをSVGで描画する仕組みの作り方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-calendar-»-evolution-of-:-gif-without-the-gif&quot;&gt;Performance Calendar » Evolution of &lt;img&gt;: Gif without the GIF&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://calendar.perfplanet.com/2017/animated-gif-without-the-gif/&quot; title=&quot;Performance Calendar » Evolution of &amp;lt;img&amp;gt;: Gif without the GIF&quot;&gt;calendar.perfplanet.com/2017/animated-gif-without-the-gif/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GIFと&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;でのアニメーション画像について。&lt;br&gt;
Safari Technology Previewが&lt;code&gt;&amp;lt;img src=&amp;quot;.mp4&amp;quot;&amp;gt;&lt;/code&gt;をサポートした話。&lt;br&gt;
&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;よりも&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;の方がパフォーマンスのよい理由。&lt;br&gt;
GIF、WebP、mp4でのファイルサイズの違いなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtcで統計情報を収集する---qiita&quot;&gt;WebRTCで統計情報を収集する - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/yusuke84/items/dc6e5a4ed109c4631b66&quot; title=&quot;WebRTCで統計情報を収集する - Qiita&quot;&gt;qiita.com/yusuke84/items/dc6e5a4ed109c4631b66&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTCでの使用コーデック、送受信ストリーム情報などのメディアやネットワークに関する統計情報を取得する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-web-platform-apis-//-speaker-deck&quot;&gt;New Web Platform APIs // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/arnellebalane/new-web-platform-apis&quot; title=&quot;New Web Platform APIs // Speaker Deck&quot;&gt;speakerdeck.com/arnellebalane/new-web-platform-apis&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;最近増えた色々なWebplatform APIについてのスライド。&lt;br&gt;
Broadcast Chennel、Network Information、Web Share、Credential Management、Payment API、Resize Observerなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactjs/react-a11y:-identifies-accessibility-issues-in-your-react.js-elements&quot;&gt;reactjs/react-a11y: Identifies accessibility issues in your React.js elements&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/react-a11y&quot; title=&quot;reactjs/react-a11y: Identifies accessibility issues in your React.js elements&quot;&gt;github.com/reactjs/react-a11y&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントのアクセシビリティに関する問題を見つけるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactprimer/reactprimer:-react-component-prototyping-tool-that-generates-fully-connected-class-component-code.&quot;&gt;ReactPrimer/ReactPrimer: React component prototyping tool that generates fully connected class component code.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ReactPrimer/ReactPrimer&quot; title=&quot;ReactPrimer/ReactPrimer: React component prototyping tool that generates fully connected class component code.&quot;&gt;github.com/ReactPrimer/ReactPrimer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントのプロトタイピングツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;weichiachang/stacks-cli:-📊-analyze-website-stack-from-the-terminal-💻&quot;&gt;WeiChiaChang/stacks-cli: 📊 Analyze website stack from the terminal 💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WeiChiaChang/stacks-cli&quot; title=&quot;WeiChiaChang/stacks-cli: 📊 Analyze website stack from the terminal 💻&quot;&gt;github.com/WeiChiaChang/stacks-cli&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;指定したURLが使っているライブラリやCDN、アクセス解析ツール、サーバなどを解析してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-development-with-node-and-express, 2nd-edition - o&amp;#39;reilly-media&quot;&gt;Web Development with Node and Express, 2nd Edition - O&amp;#39;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920084266.do&quot; title=&quot;Web Development with Node and Express, 2nd Edition - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920084266.do&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとExpressでのウェブアプリ開発についての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 05 Dec 2017 11:02:14 +0900</pubDate>
        <link>https://jser.info/2017/12/05/npm-5.6.0beta-react-16.2.0-new-ecmascript-proposals/</link>
        <guid isPermaLink="true">https://jser.info/2017/12/05/npm-5.6.0beta-react-16.2.0-new-ecmascript-proposals/</guid>
        
        <category>npm</category>
        
        <category>React</category>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-11-28のJS: Firefox 58の変更点、Emscripten/WebAssembly/Rust</title>
        <description>&lt;p&gt;JSer.info #359 - &lt;a href=&quot;https://hacks.mozilla.org/2017/11/new-in-firefox-58-developer-edition/&quot; title=&quot;New in Firefox 58: Developer Edition – Mozilla Hacks – the Web developer blog&quot;&gt;New in Firefox 58: Developer Edition – Mozilla Hacks – the Web developer blog&lt;/a&gt;ではFirefox 58(開発版)での変更点について紹介しています。&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;clip-path&lt;/code&gt;を編集できる&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Tools/Page_Inspector/How_to/Edit_CSS_shapes&quot; title=&quot;CSS shapes highlighter&quot;&gt;CSS shapes highlighter&lt;/a&gt;の追加、デバッガーで著名なフレームワークのスタックトレースが簡潔な表示にでき、また&lt;code&gt;console.groups&lt;/code&gt;が折りたためるようになるなど。&lt;br&gt;
また、macOSでのWebVRをデフォルトで有効化、FLACのサポート環境の追加、&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;のサポート、Budgetベースのバックグラウンドにおける処理の制限追加などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://gfx.hatenablog.com/entry/2017/11/16/231950&quot; title=&quot;WebAssemblyをNodeJS Native Addonの配布形式として使う - Islands in the byte stream&quot;&gt;WebAssemblyをNodeJS Native Addonの配布形式として使う - Islands in the byte stream&lt;/a&gt;という記事では&lt;a href=&quot;https://kripken.github.io/emscripten-site/&quot;&gt;Emscripten&lt;/a&gt;経由でWebAssemblyを利用する方法について書かれています。&lt;/p&gt;

&lt;p&gt;Node.jsではNative addonの仕組みがあるためバインディングを書けばCやC++などで書かれたものも利用できますが、node-gypによるビルドは環境によって問題を起こすことがあります。&lt;br&gt;
ネイティブコードをwasmにビルド済みのものを配布し、各環境でwasmを読み込んで実行することでこの問題を回避するという話を&lt;code&gt;zopfli&lt;/code&gt;を例にして紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dcodeIO/webassembly&quot; title=&quot;dcodeIO/webassembly&quot;&gt;dcodeIO/webassembly&lt;/a&gt;は、C/C++で書かれたコードをWebAssemblyに変換して実行できるコンパイラ、ランタイムをもつツールキットです。&lt;br&gt;
&lt;a href=&quot;https://kripken.github.io/emscripten-site/&quot;&gt;Emscripten&lt;/a&gt;などを使ってC/C++を&lt;code&gt;.wasm&lt;/code&gt;へビルドできる環境を&lt;a href=&quot;https://github.com/azu/emscripten-example&quot;&gt;自分で設定&lt;/a&gt;するよりも、最小構成のビルド環境を簡単に作れるようにする目的のツールキットです。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;でインストールすると&lt;code&gt;.wasm&lt;/code&gt;のビルドに必要なツールも同時にダウンロードしてくれます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# Install
npm install webassembly
# Compile
npx wa compile -o program.wasm program.c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Node.jsで&lt;code&gt;.wasm&lt;/code&gt;ファイルを読み込んで実行できるランタイムも含まれているので、次のように読み込んで実行できます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// program.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;webassembly&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;program.wasm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1 + 2 = &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;git clone&lt;/code&gt;して&lt;code&gt;npm install&lt;/code&gt;するだけで動くサンプルコードは次のリポジトリに用意してあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/webassembly-example&quot; title=&quot;azu/webassembly-example: Test https://github.com/dcodeIO/webassembly&quot;&gt;azu/webassembly-example: Test https://github.com/dcodeIO/webassembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、少し話は異なりますがRustがEmscriptenを使わずにWebAssembly(&lt;code&gt;wasm32-unknown-unknown&lt;br&gt;
&lt;/code&gt;)の出力に対応しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/45905&quot;&gt;std: Add a new wasm32-unknown-unknown target by alexcrichton · Pull Request #45905 · rust-lang/rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rust-lang/rust/pull/46115&quot;&gt;rustbuild: Enable WebAssembly backend by default by alexcrichton · Pull Request #46115 · rust-lang/rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://sbfl.net/blog/2017/11/27/rust-webassembly-standalone/&quot; title=&quot;Rust単体でWebAssemblyをコンパイルする（Emscripten無し）&quot;&gt;Rust単体でWebAssemblyをコンパイルする（Emscripten無し）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://kripken.github.io/emscripten-site/&quot;&gt;Emscripten&lt;/a&gt;を使わずに&lt;code&gt;.wasm&lt;/code&gt;を扱うことができる環境は増えてきているので、興味がある人は調べてみるといいかもしれません。&lt;br&gt;
WebAssemblyについては次のサイトがWeeklyでニュースレターを更新しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wasmweekly.news/&quot; title=&quot;WebAssembly Weekly · A community-driven weekly newsletter about WebAssembly&quot;&gt;WebAssembly Weekly · A community-driven weekly newsletter about WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-master-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at master · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/master/Changelog.md#1140&quot; title=&quot;jsdom/Changelog.md at master · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/master/Changelog.md#1140&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jsdom 11.4.0リリース。&lt;br&gt;
基本的なSVGのサポート、&lt;code&gt;pretendToBeVisual&lt;/code&gt;オプションの追加、&lt;code&gt;prepend()/append()/before()/after()/replaceWith()&lt;/code&gt;の追加、&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;要素の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-firefox-58:-developer-edition-–-mozilla-hacks-–-the-web-developer-blog&quot;&gt;New in Firefox 58: Developer Edition – Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/11/new-in-firefox-58-developer-edition/&quot; title=&quot;New in Firefox 58: Developer Edition – Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2017/11/new-in-firefox-58-developer-edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 58について。&lt;br&gt;
デバッガーでフレームワークのスタックトレースが簡潔化、&lt;code&gt;console.groups&lt;/code&gt;が折りたためるように。&lt;br&gt;
また、WebVR(macOS)、FLACのサポート環境の追加、&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;のサポート、Budgetベースのバックグラウンドにおける処理の制限追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API#Policies_in_place_to_aid_background_page_performance&quot;&gt;budget-based background timeout throttling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-svelte&quot;&gt;Learn Svelte&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://svelte.technology/guide#state-management&quot; title=&quot;Learn Svelte&quot;&gt;svelte.technology/guide#state-management&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コンパイルできるUIフレームワークのSvelteにStoreが追加された。&lt;br&gt;
ReduxやMobXなどのように&lt;code&gt;Store&lt;/code&gt;でStateを管理し、変更の監視やcompuate propertyの管理ができる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dynamic-import()- | -web- | -google-developers&quot;&gt;Dynamic import()  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/11/dynamic-import&quot; title=&quot;Dynamic import()  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/11/dynamic-import&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 63から利用できるDynamic &lt;code&gt;import()&lt;/code&gt;についての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-frameworks:-conclusions---blog-|-sitepen&quot;&gt;Web Frameworks: Conclusions - Blog | SitePen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2017/11/10/web-frameworks-conclusions/&quot; title=&quot;Web Frameworks: Conclusions - Blog | SitePen&quot;&gt;www.sitepen.com/blog/2017/11/10/web-frameworks-conclusions/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptフレームワークの比較。&lt;br&gt;
強み、弱み、将来性、選ぶ理由について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webassemblyをnodejs-native-addonの配布形式として使う---islands-in-the-byte-stream&quot;&gt;WebAssemblyをNodeJS Native Addonの配布形式として使う - Islands in the byte stream&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gfx.hatenablog.com/entry/2017/11/16/231950&quot; title=&quot;WebAssemblyをNodeJS Native Addonの配布形式として使う - Islands in the byte stream&quot;&gt;gfx.hatenablog.com/entry/2017/11/16/231950&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Emscriptenを使ってWebAssembl形式にしたNodeモジュールを配布する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bankai,-the-friendly-web-compiler-–-choo-–-medium&quot;&gt;Bankai, the friendly web compiler – choo – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/choojs/bankai-the-friendly-web-compiler-35f1916679cc&quot; title=&quot;Bankai, the friendly web compiler – choo – Medium&quot;&gt;medium.com/choojs/bankai-the-friendly-web-compiler-35f1916679cc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Browserifyを使った開発ツールキットについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/choojs/bankai&quot; title=&quot;choojs/bankai: - friendly web compiler&quot;&gt;choojs/bankai: - friendly web compiler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptのwebgl-2.0でgpgpu---qiita&quot;&gt;JavaScriptのWebGL 2.0でGPGPU - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/teatime77/items/e867d7d462cb553b373d&quot; title=&quot;JavaScriptのWebGL 2.0でGPGPU - Qiita&quot;&gt;qiita.com/teatime77/items/e867d7d462cb553b373d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebGL 2.0を使ったGPGPUについての解説記事。&lt;br&gt;
WebGL 2.0を使った行列計算や他の実装との比較など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactnative-本体のバージョンのアップグレードを行う---qiita&quot;&gt;ReactNative 本体のバージョンのアップグレードを行う - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/hotchpotch/items/5617caccd8749f410631&quot; title=&quot;ReactNative 本体のバージョンのアップグレードを行う - Qiita&quot;&gt;qiita.com/hotchpotch/items/5617caccd8749f410631&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactNativeの0.44.xから0.49.xへのアップグレードについて。&lt;br&gt;
&lt;code&gt;rn-diff&lt;/code&gt;を使った変更内容のチェック、Xcode関係のアップデート、モジュールのマイグレーション、FlowとReactの型変更の対応などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-node.js-|-edx&quot;&gt;Introduction to Node.js | edX&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.edx.org/course/introduction-node-js-microsoft-dev283x&quot; title=&quot;Introduction to Node.js | edX&quot;&gt;www.edx.org/course/introduction-node-js-microsoft-dev283x&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MicrosoftのNode.js入門講座&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;source-to-binary---journey-of-v8-javascript-engine-//-speaker-deck&quot;&gt;Source to Binary - journey of V8 javascript engine // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/brn/source-to-binary-journey-of-v8-javascript-engine&quot; title=&quot;Source to Binary - journey of V8 javascript engine // Speaker Deck&quot;&gt;speakerdeck.com/brn/source-to-binary-journey-of-v8-javascript-engine&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8がJavaScriptのコードを実行するフロー、コンパイルパイプラインについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsbench.me---javascript-performance-benchmarking-playground&quot;&gt;JSBench.me - JavaScript performance benchmarking playground&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsbench.me/&quot; title=&quot;JSBench.me - JavaScript performance benchmarking playground&quot;&gt;jsbench.me/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのスニペットベンチマークサイト。&lt;br&gt;
jsperfのようにJavaScriptのコードのマイクロベンチマークを取って比較できる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;y-js/yjs:-a-framework-for-real-time-p2p-shared-editing-on-any-data&quot;&gt;y-js/yjs: A framework for real-time p2p shared editing on any data&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/y-js/yjs&quot; title=&quot;y-js/yjs: A framework for real-time p2p shared editing on any data&quot;&gt;github.com/y-js/yjs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC/WebSocktes/XMPPを使ったP2Pでデータのやり取りやテキストの同時編集ができるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mikemcl/big.js:-a-small,-fast-javascript-library-for-arbitrary-precision-decimal-arithmetic.&quot;&gt;MikeMcl/big.js: A small, fast JavaScript library for arbitrary-precision decimal arithmetic.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MikeMcl/big.js/&quot; title=&quot;MikeMcl/big.js: A small, fast JavaScript library for arbitrary-precision decimal arithmetic.&quot;&gt;github.com/MikeMcl/big.js/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Javaの&lt;code&gt;BigDecimal&lt;/code&gt;のJavaScript実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;asfktz/autodll-webpack-plugin:-webpack&amp;#39;s-dllplugin-without-the-boilerplate&quot;&gt;asfktz/autodll-webpack-plugin: Webpack&amp;#39;s DllPlugin without the boilerplate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/asfktz/autodll-webpack-plugin&quot; title=&quot;asfktz/autodll-webpack-plugin: Webpack&amp;#39;s DllPlugin without the boilerplate&quot;&gt;github.com/asfktz/autodll-webpack-plugin&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackのDLLを簡単に扱えるようにするDLLプラグイン。&lt;br&gt;
パッケージの追加や設定の変更をトリガーに再ビルドできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aws/aws-amplify:-a-declarative-library-for-application-development-using-cloud-services-with-javascript&quot;&gt;aws/aws-amplify: A declarative library for application development using Cloud services with JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aws/aws-amplify&quot; title=&quot;aws/aws-amplify: A declarative library for application development using Cloud services with JavaScript&quot;&gt;github.com/aws/aws-amplify&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWSとの連携を簡単に行えるライブラリ。認証、Analytics、API、Storageなど。&lt;br&gt;
またReact/React Nativeと連携できるライブラリも公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/mobile/announcing-aws-amplify-and-the-aws-mobile-cli/&quot; title=&quot;Announcing AWS Amplify and the AWS Mobile CLI | AWS Mobile Blog&quot;&gt;Announcing AWS Amplify and the AWS Mobile CLI | AWS Mobile Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.aws.amazon.com/aws-mobile/latest/developerguide/web-getting-started.html&quot; title=&quot;Get Started - AWS Mobile&quot;&gt;Get Started - AWS Mobile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;z-pattern-matching/z:-native-pattern-matching-for-javascript&quot;&gt;z-pattern-matching/z: native pattern matching for javascript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/z-pattern-matching/z&quot; title=&quot;z-pattern-matching/z: native pattern matching for javascript&quot;&gt;github.com/z-pattern-matching/z&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;パターンマッチライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;imsnif/synp:-convert-yarn.lock-to-package-lock.json-and-vice-versa&quot;&gt;imsnif/synp: Convert yarn.lock to package-lock.json and vice versa&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imsnif/synp&quot; title=&quot;imsnif/synp: Convert yarn.lock to package-lock.json and vice versa&quot;&gt;github.com/imsnif/synp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn.lock&lt;/code&gt;ファイルと&lt;code&gt;package-lock.json&lt;/code&gt;ファイルを相互変換できるツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google/ts-style:-☂️-typescript-style-guide,-formatter,-and-linter.&quot;&gt;google/ts-style: ☂️ TypeScript style guide, formatter, and linter.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/ts-style&quot; title=&quot;google/ts-style: ☂️ TypeScript style guide, formatter, and linter.&quot;&gt;github.com/google/ts-style&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;設定不要なコンパイル、コードフォーマット、Lintを行うTypeScript向けのツール。 clang-format、TSLintを利用している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naver/billboard.js:-re-usable,-easy-interface-javascript-chart-library-based-on-d3-v4+&quot;&gt;naver/billboard.js: Re-usable, easy interface JavaScript chart library based on D3 v4+&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naver/billboard.js&quot; title=&quot;naver/billboard.js: Re-usable, easy interface JavaScript chart library based on D3 v4+&quot;&gt;github.com/naver/billboard.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;D3.jsを使ったC3.jsのようなグラフライブラリ。&lt;br&gt;
C3.jsをforkしたライブラリで、D3.js v4を使いC3.jsとの互換性を持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dcodeio/webassembly:-a-minimal-toolkit-and-runtime-to-produce-and-run-webassembly-modules.&quot;&gt;dcodeIO/webassembly: A minimal toolkit and runtime to produce and run WebAssembly modules.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dcodeIO/webassembly&quot; title=&quot;dcodeIO/webassembly: A minimal toolkit and runtime to produce and run WebAssembly modules.&quot;&gt;github.com/dcodeIO/webassembly&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyのツールキットとランタイム。 wasmへのコンパイルに必要な依存の自動ダウンロードやコンパイルができる。 またwasm向けの&lt;code&gt;console&lt;/code&gt;や&lt;code&gt;Mtch&lt;/code&gt;などのバインディングを提供するランタイムも含まれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ちゃんと使える力を身につける　javascriptのきほんのきほん-|-大澤-文孝-|-工学-|-kindleストア-|-amazon&quot;&gt;ちゃんと使える力を身につける　JavaScriptのきほんのきほん | 大澤 文孝 | 工学 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8%E4%BD%BF%E3%81%88%E3%82%8B%E5%8A%9B%E3%82%92%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%91%E3%82%8B-JavaScript%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93-%E5%A4%A7%E6%BE%A4-%E6%96%87%E5%AD%9D-ebook/dp/B0779R1R3P&quot; title=&quot;ちゃんと使える力を身につける　JavaScriptのきほんのきほん | 大澤 文孝 | 工学 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/%E3%81%A1%E3%82%83%E3%82%93%E3%81%A8%E4%BD%BF%E3%81%88%E3%82%8B%E5%8A%9B%E3%82%92%E8%BA%AB%E3%81%AB%E3%81%A4%E3%81%91%E3%82%8B-JavaScript%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93%E3%81%AE%E3%81%8D%E3%81%BB%E3%82%93-%E5%A4%A7%E6%BE%A4-%E6%96%87%E5%AD%9D-ebook/dp/B0779R1R3P&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;プログラミング入門者向けのJavaScript入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 28 Nov 2017 09:43:49 +0900</pubDate>
        <link>https://jser.info/2017/11/28/firefox-58-emscripten-webassembly-rust/</link>
        <guid isPermaLink="true">https://jser.info/2017/11/28/firefox-58-emscripten-webassembly-rust/</guid>
        
        <category>firefox</category>
        
        <category>webassembly</category>
        
        <category>emscripten</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-11-19のJS: Firefox 57、JavaScriptのコスト、momentとLuxon</title>
        <description>&lt;p&gt;JSer.info #358 - Firefox 57がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/57.0/releasenotes/&quot;&gt;Firefox — Notes (57.0) — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2017/11/14/introducing-firefox-quantum/&quot;&gt;Introducing the New Firefox: Firefox Quantum - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/mozilla-tech/a-quantum-leap-for-the-web-a3b7174b3c12&quot; title=&quot;Project Quantum&quot;&gt;Project Quantum&lt;/a&gt;と呼ばれていたFirefoxの大規模書き換えの初回のリリースとなっています。&lt;br&gt;
新たに書き直されたQuantum CSS(Stylo)と呼ばれるCSSエンジンが含まれるリリースであるため、既存のCSSとの挙動にさまざまな違い(バグ修正も含む)があります。&lt;/p&gt;

&lt;p&gt;詳しくは次の記事を読むと良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/08/inside-a-super-fast-css-engine-quantum-css-aka-stylo/&quot; title=&quot;Inside a super fast CSS engine: Quantum CSS (aka Stylo) – Mozilla Hacks – the Web developer blog&quot;&gt;Inside a super fast CSS engine: Quantum CSS (aka Stylo) – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/57&quot; title=&quot;Firefox Quantum 57 for developers - Mozilla | MDN&quot;&gt;Firefox Quantum 57 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;の有効化、Fetchのabortを行える&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/AbortController&quot; title=&quot;AbortController&quot;&gt;AbortController&lt;/a&gt;に対応しています。&lt;br&gt;
また、WindowsのFirefoxにおいてデフォルトのフォントが変更されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2017/japanese-default-fonts-have-been-changed/&quot; title=&quot;日本語の既定フォントが変更されました | Firefox サイト互換性情報&quot;&gt;日本語の既定フォントが変更されました | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e&quot; title=&quot;The Cost Of JavaScript – Dev Channel – Medium&quot;&gt;The Cost Of JavaScript – Dev Channel – Medium&lt;/a&gt;という記事ではJavaScriptのコストについて書かれています。&lt;/p&gt;

&lt;p&gt;JavaScriptのコストとはネットワークからのロード、パース、コンパイル、実行から構成されています。&lt;br&gt;
このパースとコンパイルが低スペックのデバイスでは大きな割合となることがあります。&lt;br&gt;
そのため、同じサイズのJavaScriptと画像ファイルでは、実行 or 描画までの時間は異なります。&lt;/p&gt;

&lt;p&gt;これらのコストについての解説や対策方法の一つとしてのPRPLパターンやPerformance Budgetについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moment/luxon&quot; title=&quot;moment/luxon: A library for working with dates and times in JS&quot;&gt;moment/luxon: A library for working with dates and times in JS&lt;/a&gt;という日付周りのライブラリがαリリースされています。&lt;/p&gt;

&lt;p&gt;元々、&lt;a href=&quot;https://github.com/moment/moment&quot; title=&quot;moment&quot;&gt;moment&lt;/a&gt;-labプロジェクトから始まったライブラリで、momentの問題点である&lt;a href=&quot;https://github.com/moment/moment-rfcs/pull/2&quot;&gt;mutable&lt;/a&gt;である点などを解決しています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Wondering about the future of Moment, modularization, etc? We have what we&amp;#39;ll call a &amp;#39;moment-labs&amp;#39; project here: &lt;a href=&quot;https://t.co/tFxIq9lEjm&quot;&gt;https://t.co/tFxIq9lEjm&lt;/a&gt;&lt;/p&gt;&amp;mdash; moment.js (@momentjs) &lt;a href=&quot;https://twitter.com/momentjs/status/918264220663214081?ref_src=twsrc%5Etfw&quot;&gt;October 11, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Want a smaller, immutable date library for modern browsers? Luxon has officially joined the family! &lt;a href=&quot;https://t.co/HSjRuRuZG1&quot;&gt;https://t.co/HSjRuRuZG1&lt;/a&gt;&lt;/p&gt;&amp;mdash; moment.js (@momentjs) &lt;a href=&quot;https://twitter.com/momentjs/status/923982141704192000?ref_src=twsrc%5Etfw&quot;&gt;October 27, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://moment.github.io/luxon/docs/manual/faq/moment.html&quot; title=&quot;For Moment users&quot;&gt;For Moment users&lt;/a&gt;にも書かれていますが、MomentとAPIの互換性はありません。&lt;/p&gt;

&lt;p&gt;特徴としては、日付/時間/インターバルの操作/パース/フォーマットを行うことができ、momentとは異なりImmutableなAPIとなっています。また、TimeZoneやIntlを使った国際化に対応しています。&lt;/p&gt;

&lt;p&gt;そして、LuxonはネイティブのDate、Moment、Date-fnsとは異なりmonthを&lt;code&gt;1-indexed&lt;/code&gt;な値として扱います。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 2017-01-01&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2017-01-01T00:00:00.000Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Luxon - 1-index&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;luxon&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Luxon:get:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromJSDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 1&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Luxon:set:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromJSDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// date-fns - 0-indexed&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;date-fns&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;date-fns:get:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;date-fns:set:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// moment - 0-indexed&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;moment&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;moment:get:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;moment:set:&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;date20170101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://runkit.com/azu/5a117a65dcefad0012187983&quot; title=&quot;Luxon - data-fns - moment | RunKit&quot;&gt;Luxon - data-fns - moment | RunKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.59.0-·-facebook/flow&quot;&gt;Release v0.59.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.59.0&quot; title=&quot;Release v0.59.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.59.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.59.0リリース。&lt;br&gt;
&lt;code&gt;$ReadOnly&amp;lt;T&amp;gt;&lt;/code&gt; utility typeの追加、パフォーマンスの改善、&lt;code&gt;/* flowlint sketchy-null:error */&lt;/code&gt;のようなコメントでLintを有効化できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.2.0-(current)-|-node.js&quot;&gt;Node v9.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.2.0/&quot; title=&quot;Node v9.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 9.2.0リリース。&lt;br&gt;
&lt;code&gt;fs.realpathSync.native&lt;/code&gt;、&lt;code&gt;fs.realpath.native&lt;/code&gt;、&lt;code&gt;process.ppid&lt;/code&gt;がexposeされた&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview 44-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 44 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8035/release-notes-for-safari-technology-preview-44/&quot; title=&quot;Release Notes for Safari Technology Preview 44 | WebKit&quot;&gt;webkit.org/blog/8035/release-notes-for-safari-technology-preview-44/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 44リリース。&lt;br&gt;
Payment Requestがデフォルトで有効化、&lt;code&gt;createImageBitmap()&lt;/code&gt;の実装、OffscreenCanvasのIDLを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-security-alerts-on-github&quot;&gt;Introducing security alerts on GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blog/2470-introducing-security-alerts-on-github&quot; title=&quot;Introducing security alerts on GitHub&quot;&gt;github.com/blog/2470-introducing-security-alerts-on-github&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ruby&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubリポジトリにnpmやgemのセキュリティアラート機能が追加された。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.0.0-beta.1-·-reactjs/redux&quot;&gt;Release v4.0.0-beta.1 · reactjs/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/redux/releases/tag/v4.0.0-beta.1&quot; title=&quot;Release v4.0.0-beta.1 · reactjs/redux&quot;&gt;github.com/reactjs/redux/releases/tag/v4.0.0-beta.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Redux v4.0.0-beta.1リリース。&lt;br&gt;
TypeScriptの更新、&lt;code&gt;INIT&lt;/code&gt;をランダムな値に変更、IE11未満のサポートを終了、Dispatchのパフォーマンス改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/redux/issues/1342&quot; title=&quot;Redux 4 breaking changes · Issue #1342 · reactjs/redux&quot;&gt;Redux 4 breaking changes · Issue #1342 · reactjs/redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(57.0)-—-mozilla&quot;&gt;Firefox — Notes (57.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/57.0/releasenotes/&quot; title=&quot;Firefox — Notes (57.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/57.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 57リリース。&lt;br&gt;
CSSエンジンの書き直しが行われ挙動の変更とパフォーマンスの改善、&lt;code&gt;watch&lt;/code&gt;/&lt;code&gt;unwatch&lt;/code&gt;メソッドが非推奨化、&lt;code&gt;PerformanceObserver&lt;/code&gt;の有効化、Fetchのabortに対応。&lt;br&gt;
WebRTCの&lt;code&gt;RTCDataChannel&lt;/code&gt;のメッセージファイルサイズを指定できるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2017/11/14/introducing-firefox-quantum/&quot; title=&quot;Introducing the New Firefox: Firefox Quantum - The Mozilla Blog&quot;&gt;Introducing the New Firefox: Firefox Quantum - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/57&quot; title=&quot;Firefox Quantum 57 for developers - Mozilla | MDN&quot;&gt;Firefox Quantum 57 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/57/&quot; title=&quot;Firefox 57 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 57 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels#Understanding_message_size_limits&quot; title=&quot;Using WebRTC data channels - Web APIs | MDN&quot;&gt;Using WebRTC data channels - Web APIs | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.6.0-·-googlechrome/lighthouse&quot;&gt;Release 2.6.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v2.6.0&quot; title=&quot;Release 2.6.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v2.6.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lighthouse 2.6.0リリース。&lt;br&gt;
&lt;code&gt;redirects&lt;/code&gt;などのチェックツールの追加。&lt;br&gt;
各スクリプトの起動時間を計測する&lt;code&gt;bootup-time&lt;/code&gt;、ページの実行時間を計測する&lt;code&gt;mainthread-work-breakdown&lt;/code&gt;などのAuditを追加&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;refactoring-react-components-with-jest’s-snapshot-–-michael-romani-–-medium&quot;&gt;Refactoring React Components with Jest’s Snapshot – Michael Romani – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mr4227/refactoring-react-components-with-jests-snapshot-7ed1b9d332cc&quot; title=&quot;Refactoring React Components with Jest’s Snapshot – Michael Romani – Medium&quot;&gt;medium.com/@mr4227/refactoring-react-components-with-jests-snapshot-7ed1b9d332cc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jestのsnapshotテストを使ったReactコンポーネントのリファクタリングについての記事。&lt;br&gt;
スナップショットを取ってから、でかいコンポーネントの細分化をテストしながら行う話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-redux-works:-a-counter-example&quot;&gt;How Redux Works: A Counter-Example&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/how-does-redux-work/&quot; title=&quot;How Redux Works: A Counter-Example&quot;&gt;daveceddia.com/how-does-redux-work/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reduxでカウンターアプリを作りながらReduxの使い方や仕組みについてを学ぶチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-cost-of-javascript-–-dev-channel-–-medium&quot;&gt;The Cost Of JavaScript – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e&quot; title=&quot;The Cost Of JavaScript – Dev Channel – Medium&quot;&gt;medium.com/dev-channel/the-cost-of-javascript-84009f51e99e&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの実行までのコストについてを解説した記事。&lt;br&gt;
ダウンロード、パース、実行のステップを踏む。同じサイズのJSと画像のコストは異なる点。&lt;br&gt;
PRPLパターン、Performance Budgetについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript.-the-core:-2nd-edition-–-ds.laboratory&quot;&gt;JavaScript. The Core: 2nd Edition – ds.laboratory&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dmitrysoshnikov.com/ecmascript/javascript-the-core-2nd-edition/&quot; title=&quot;JavaScript. The Core: 2nd Edition – ds.laboratory&quot;&gt;dmitrysoshnikov.com/ecmascript/javascript-the-core-2nd-edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript/JavaScriptにおける用語の定義やその概念の解説。&lt;br&gt;
ECMAScriptの仕様に近いコアな内容。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;clean-code-vs.-dirty-code:-react-best-practices---american-express-engineering-blog&quot;&gt;Clean Code vs. Dirty Code: React Best Practices - American Express Engineering Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://americanexpress.io/clean-code-dirty-code/&quot; title=&quot;Clean Code vs. Dirty Code: React Best Practices - American Express Engineering Blog&quot;&gt;americanexpress.io/clean-code-dirty-code/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを題材にしたクリーンなコードについて。&lt;br&gt;
ネーミングやコンポーネントの分割、デフォルト値の扱いなど良くない例とそれを改善した例を元に解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-redux-を用いた-spa-新規サービスを運用して得た知見と実装例---ランサーズ（lancers）エンジニアブログ&quot;&gt;React Redux を用いた SPA 新規サービスを運用して得た知見と実装例 - ランサーズ（Lancers）エンジニアブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://engineer.blog.lancers.jp/2017/11/react-redux-spa-manage-tips/&quot; title=&quot;React Redux を用いた SPA 新規サービスを運用して得た知見と実装例 - ランサーズ（Lancers）エンジニアブログ&quot;&gt;engineer.blog.lancers.jp/2017/11/react-redux-spa-manage-tips/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React+Redux+Sagaを使ったプロジェクトについてのスライド。&lt;br&gt;
ディレクトリ構成や基本的な処理の流れ、HOCを使ったコンポーネントの拡張、ダイアログやストレージへの保存などユースケース毎の実装方法について。&lt;br&gt;
またテスト、Sentryを使ったエラー解析、SEO、APIの管理についてなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-kongress-2017---youtube&quot;&gt;JS Kongress 2017 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list=PL8ajgHZ7PoCt3l5RXoyqVu_r7gYJU0dMx&quot; title=&quot;JS Kongress 2017 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL8ajgHZ7PoCt3l5RXoyqVu_r7gYJU0dMx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JS Kongress 2017の動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2017.js-kongress.de/&quot; title=&quot;JS Kongress 2017 💻 - The Future of JavaScript, Nov 13-14 2017, Munich&quot;&gt;JS Kongress 2017 💻 - The Future of JavaScript, Nov 13-14 2017, Munich&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-web-can-do-today&quot;&gt;What Web Can Do Today&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://whatwebcando.today/&quot; title=&quot;What Web Can Do Today&quot;&gt;whatwebcando.today/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;アクセスしているブラウザでさまざまなWeb Platform APIが利用できるかを表示してくれるサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;`performance.mark`-with-metadata-is-useful-for-real-user-monitoring&quot;&gt;`performance.mark` with metadata is useful for Real user monitoring&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/ben/we-welcome-a-wonderful-influx-of-new-members-from-japan-1k0&quot; title=&quot;\`performance.mark\` with metadata is useful for Real user monitoring&quot;&gt;dev.to/ben/we-welcome-a-wonderful-influx-of-new-members-from-japan-1k0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;performance.mark&lt;/code&gt;にメタデータとしてFPSを付加して計測して、ボトルネックになっている行動をログから解析、可視化する方法について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/performance-mark-metadata&quot; title=&quot;azu/performance-mark-metadata: \&amp;amp;#x60;performance.mark\&amp;amp;#x60; with custom meta data.&quot;&gt;azu/performance-mark-metadata: `performance.mark` with custom meta data.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2017/11/15/performance.mark-metadata/&quot; title=&quot;performance.markにメタデータを紐付けできるライブラリを書いた | Web Scratch&quot;&gt;performance.markにメタデータを紐付けできるライブラリを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stereobooster/react-snap:-a-zero-configuration-static-pre-renderer-for-single-page-applications&quot;&gt;stereobooster/react-snap: A zero-configuration static pre-renderer for Single Page Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stereobooster/react-snap&quot; title=&quot;stereobooster/react-snap: A zero-configuration static pre-renderer for Single Page Applications&quot;&gt;github.com/stereobooster/react-snap&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactをprerenderして静的なHTMLにできるライブラリ。&lt;br&gt;
設定なしでcreate-react-appと協調して動作することを目標にしている。SSRで扱うことが難しい3rdパーティスクリプトやWebGLなどがオプションで対処できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;moment/luxon:-a-library-for-working-with-dates-and-times-in-js&quot;&gt;moment/luxon: A library for working with dates and times in JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/moment/luxon&quot; title=&quot;moment/luxon: A library for working with dates and times in JS&quot;&gt;github.com/moment/luxon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;日付や時間、インターバルを扱うライブラリ。 日付操作やパース、フォーマットを行える。Immutableであり、TimeZoneやIntlを使った国際化に対応している。 Momentとの違いをまとめたドキュメントも公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jaredpalmer/react-fns:-browser-api&amp;#39;s-turned-into-declarative-react-components-and-hoc&amp;#39;s&quot;&gt;jaredpalmer/react-fns: Browser API&amp;#39;s turned into declarative React components and HoC&amp;#39;s&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jaredpalmer/react-fns&quot; title=&quot;jaredpalmer/react-fns: Browser API&amp;#39;s turned into declarative React components and HoC&amp;#39;s&quot;&gt;github.com/jaredpalmer/react-fns&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactのHigh Order Componentのコレクションライブラリ。&lt;br&gt;
デバイスの回転や動作、オンライン/オフライン、Geo、メディアクエリー、スクロール、ロケールを扱えるコンポーネントなどが用意されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;goto-bus-stop/tinyify:-a-browserify-plugin-that-runs-various-optimizations,-so-you-don&amp;#39;t-have-to-install-them-all-manually.-makes-your-bundles-tiny!&quot;&gt;goto-bus-stop/tinyify: a browserify plugin that runs various optimizations, so you don&amp;#39;t have to install them all manually. makes your bundles tiny!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/goto-bus-stop/tinyify&quot; title=&quot;goto-bus-stop/tinyify: a browserify plugin that runs various optimizations, so you don&amp;#39;t have to install them all manually. makes your bundles tiny!&quot;&gt;github.com/goto-bus-stop/tinyify&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Browserifyでフラットbundle、unassert、productionビルド、minifyなどをまとめて行うプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jaredpalmer/razzle:-✨-create-server-rendered-universal-javascript-applications-with-no-configuration&quot;&gt;jaredpalmer/razzle: ✨ Create server-rendered universal JavaScript applications with no configuration&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jaredpalmer/razzle&quot; title=&quot;jaredpalmer/razzle: ✨ Create server-rendered universal JavaScript applications with no configuration&quot;&gt;github.com/jaredpalmer/razzle&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UniversalなJavaScriptアプリケーションを設定なしで書き始められる開発環境ツール。&lt;br&gt;
&lt;code&gt;create-react-app&lt;/code&gt;のようなツールだが、React以外でも利用できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pure-react&quot;&gt;Pure React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/pure-react/&quot; title=&quot;Pure React&quot;&gt;daveceddia.com/pure-react/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactについてステップバイステップで学べるサンプルを中心にした書籍。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-vue.js-in-action&quot;&gt;Manning | Vue.js in Action&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/vue-js-in-action&quot; title=&quot;Manning | Vue.js in Action&quot;&gt;www.manning.com/books/vue-js-in-action&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年5月30日発売&lt;br&gt;
Vueについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;超速！-webページ速度改善ガイド-──-使いやすさは「速さ」から始まる（web+db-press-plusシリーズ）｜gihyo.jp-…-技術評論社&quot;&gt;超速！ Webページ速度改善ガイド ── 使いやすさは「速さ」から始まる（WEB+DB PRESS plusシリーズ）｜gihyo.jp … 技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gihyo.jp/magazine/wdpress/plus/978-4-7741-9400-4&quot; title=&quot;超速！ Webページ速度改善ガイド ── 使いやすさは「速さ」から始まる（WEB+DB PRESS plusシリーズ）｜gihyo.jp … 技術評論社&quot;&gt;gihyo.jp/magazine/wdpress/plus/978-4-7741-9400-4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2017年11月23日発売&lt;br&gt;
ウェブページのパフォーマンス改善についての書籍。&lt;br&gt;
ネットワーク、レンダリング、スクリプトの項目ごとに測定方法や改善方法についてを扱う。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-react-native-in-action&quot;&gt;Manning | React Native in Action&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/react-native-in-action&quot; title=&quot;Manning | React Native in Action&quot;&gt;www.manning.com/books/react-native-in-action&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年4月30日発売&lt;br&gt;
React Nativeについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Sun, 19 Nov 2017 19:51:22 +0900</pubDate>
        <link>https://jser.info/2017/11/19/firefox-57-javascript-momentluxon/</link>
        <guid isPermaLink="true">https://jser.info/2017/11/19/firefox-57-javascript-momentluxon/</guid>
        
        <category>Firefox</category>
        
        <category>Performance</category>
        
        <category>Date</category>
        
        <category>Moment</category>
        
        <category>i18n</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-11-14のJS: React v16.1.0、Firefox DevTools、Docusaurus</title>
        <description>&lt;p&gt;JSer.info #357 - React v16.1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v16.1.0&quot; title=&quot;Release v16.1.0 · facebook/react&quot;&gt;Release v16.1.0 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bower向けの配布は終了したため代わりに&lt;a href=&quot;https://reactjs.org/docs/installation.html#using-a-cdn&quot;&gt;CDN&lt;/a&gt;の利用の推奨しています。&lt;code&gt;React.Children&lt;/code&gt; utilがPortalをサポート、React DOM Serverに&lt;code&gt;suppressHydrationWarning&lt;/code&gt;属性の追加などが行われています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/facebook/react/tree/master/packages/react-call-return&quot; title=&quot;react-call-return&quot;&gt;react-call-return&lt;/a&gt;というパッケージが試験的に公開されています。&lt;br&gt;
次の記事で解説されていますが、&lt;code&gt;ReactCallReturn.unstable_createCall&lt;/code&gt;でChildrenに値を渡して呼び出し、その結果を使って別の要素を返すことができる仕組みのようです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// https://github.com/facebook/react/blob/2d23a4563ef2bec7d90c4a7edff2657c890b4334/packages/react-call-return/src/__tests__/ReactCallReturn-test.js&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactCallReturn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unstable_createReturn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactCallReturn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unstable_createCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Counter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;c&amp;quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;c&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;returns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;ReactNoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ReactNoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ReactNoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getChildren&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cdb.reacttraining.com/react-call-return-what-and-why-7e7761f81843&quot; title=&quot;React Call Return — What and Why – componentDidBlog&quot;&gt;React Call Return — What and Why – componentDidBlog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Firefoxの開発者ツールのデバッガーの使い方を学べるサイトが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mozilladevelopers.github.io/playground/debugger/&quot;&gt;Debugger PlayGround | Introduction | Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/11/go-beyond-console-log-with-the-firefox-debugger/&quot;&gt;Go beyond console.log with the Firefox Debugger – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前公開された&lt;a href=&quot;https://mozilladevelopers.github.io/playground/css-grid&quot; title=&quot;CSS Grid PlayGround | Terminology | Mozilla&quot;&gt;CSS Grid PlayGround&lt;/a&gt;と同じく実際にデバッガーを使って体験できる形式のチュートリアルとなっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;まだ正式にOSSとしては公開されていませんが、Facebook系のOSSが利用している静的サイトジェネレーターのサイトが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docusaurus.io/&quot; title=&quot;Docusaurus&quot;&gt;Docusaurus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt;や&lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest&lt;/a&gt;のサイトではすでに取り入れられていて、OSSのソフトウェアやライブラリ、ツールといったプロダクトに特化した静的サイトジェネレーターとなっています。&lt;/p&gt;

&lt;p&gt;Markdownで書くことができ、GitHubの編集リンク、翻訳への対応、ブログ機能やalgoliaを使った検索、Reactを使ったカスタマイズなどが行えるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymerlabs/lit-html:-html-template-literals-in-javascript&quot;&gt;PolymerLabs/lit-html: HTML template literals in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PolymerLabs/lit-html&quot; title=&quot;PolymerLabs/lit-html: HTML template literals in JavaScript&quot;&gt;github.com/PolymerLabs/lit-html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tagged Template literalでHTMLを書いてレンダリングできるライブラリ。テンプレートのキャッシュが行われ再描画のコストを小さくするモチベーション。&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;要素との連携が考えられていて、Custom Elementでの利用がしやすくなっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Io6JjgckHbg&quot; title=&quot;lit-HTML (Chrome Dev Summit 2017) - YouTube&quot;&gt;lit-HTML (Chrome Dev Summit 2017) - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://1000ch.net/posts/2017/lit-html.html&quot; title=&quot;lit-html を調べたメモと考えたこと - EagleLand&quot;&gt;lit-html を調べたメモと考えたこと - EagleLand&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0-·-addyosmani/critical&quot;&gt;Release v1.0.0 · addyosmani/critical&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/addyosmani/critical/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · addyosmani/critical&quot;&gt;github.com/addyosmani/critical/releases/tag/v1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;クリティカルパスの解析、インライン化を行うライブラリであるcritical 1.0.0リリース。&lt;br&gt;
実行エンジンがPhantomJSからChrome headlessへ変更された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-what’s-new-in-chromium-62-and-opera-49&quot;&gt;Dev.Opera — What’s new in Chromium 62 and Opera 49&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-49/&quot; title=&quot;Dev.Opera — What’s new in Chromium 62 and Opera 49&quot;&gt;dev.opera.com/blog/opera-49/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Opera 49 (based on Chromium 62)リリース。&lt;br&gt;
Network Information API、OpenType Variable Fonts、DOM要素のMedia Captureなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v16.1.0-·-facebook/react&quot;&gt;Release v16.1.0 · facebook/react&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v16.1.0&quot; title=&quot;Release v16.1.0 · facebook/react&quot;&gt;github.com/facebook/react/releases/tag/v16.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.1.0リリース。&lt;br&gt;
Bowerのサポート終了、&lt;code&gt;React.Children&lt;/code&gt; utilがPortalをサポート、React DOM Serverに&lt;code&gt;suppressHydrationWarning&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-draftjs-plugins-2.0-–-nik-graf-–-medium&quot;&gt;Announcing DraftJS Plugins 2.0 – Nik Graf – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@nikgraf/announcing-draftjs-plugins-2-0-8c25f2a4df55&quot; title=&quot;Announcing DraftJS Plugins 2.0 – Nik Graf – Medium&quot;&gt;medium.com/@nikgraf/announcing-draftjs-plugins-2-0-8c25f2a4df55&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DraftJSのプラグイン集であるDraftJS Plugins 2.0リリース。&lt;br&gt;
画像の操作、整形、D&amp;amp;D、mentionやemojiなどに対応するプラグインを公開している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.draft-js-plugins.com/&quot; title=&quot;DraftJS Plugins - High quality plugins with great UX&quot;&gt;DraftJS Plugins - High quality plugins with great UX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es-proposal:-`import.meta`-–-module-metadata&quot;&gt;ES proposal: `import.meta` – module metadata&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://2ality.com/2017/11/import-meta.html&quot; title=&quot;ES proposal: \`import.meta\` – module metadata&quot;&gt;2ality.com/2017/11/import-meta.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Stage 3のECMAScript Proposalである&lt;code&gt;import.meta&lt;/code&gt;について。&lt;br&gt;
モジュールのメタデータを扱うオブジェクトの仕様&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;creating-a-star-to-heart-animation-with-svg-and-vanilla-javascript-|-css-tricks&quot;&gt;Creating a Star to Heart Animation with SVG and Vanilla JavaScript | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/creating-star-heart-animation-svg-vanilla-javascript/&quot; title=&quot;Creating a Star to Heart Animation with SVG and Vanilla JavaScript | CSS-Tricks&quot;&gt;css-tricks.com/creating-star-heart-animation-svg-vanilla-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVGとJavaScriptでスターやハートを書きアニメーションさせる話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-5:-upgrading-&amp;amp;-summary-of-new-features-←-alligator.io&quot;&gt;Angular 5: Upgrading &amp;amp; Summary of New Features ← Alligator.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://alligator.io/angular/angular-5/&quot; title=&quot;Angular 5: Upgrading &amp;amp; Summary of New Features ← Alligator.io&quot;&gt;alligator.io/angular/angular-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 5の変更点について。&lt;br&gt;
Angular CLIの改善や最適化オプション、&lt;code&gt;updateOn&lt;/code&gt;オプション、&lt;code&gt;@angular/service-worker&lt;/code&gt;の追加などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;high-performance-service-worker-loading- | -web-fundamentals- | -google-developers&quot;&gt;High-performance service worker loading  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading&quot; title=&quot;High-performance service worker loading  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Service Workerのローディングについてのプラクティス。&lt;br&gt;
HTMLのキャッシュ、Application Shellパターン、&lt;code&gt;fetch&lt;/code&gt;ハンドラで何もしない処理を登録するのは避ける、preloadについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;resource-prioritization-–-getting-the-browser-to-help-you- | -web-fundamentals- | -google-developers&quot;&gt;Resource Prioritization – Getting the Browser to Help You  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/resource-prioritization&quot; title=&quot;Resource Prioritization – Getting the Browser to Help You  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/resource-prioritization&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;リソース取得の優先度について。&lt;br&gt;
開発者ツールでの読み方、&lt;code&gt;preload&lt;/code&gt;、&lt;code&gt;preconnect&lt;/code&gt;(&lt;code&gt;dns-prefetch&lt;/code&gt;)、&lt;code&gt;prefetch&lt;/code&gt;での優先度の指定やそれぞれのユースケースの紹介など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;proper-error-handling-in-javascript-―-scotch&quot;&gt;Proper Error Handling in JavaScript ― Scotch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scotch.io/tutorials/proper-error-handling-in-javascript&quot; title=&quot;Proper Error Handling in JavaScript ― Scotch&quot;&gt;scotch.io/tutorials/proper-error-handling-in-javascript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのエラーハンドリングや基本的な構文について。&lt;br&gt;
try...catch...finally、throw、window.onerror、コールスタックの読み方、Promiseのエラーハンドリングについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;browser-automation-revisited---meet-puppeteer&quot;&gt;Browser automation revisited - meet Puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nemethgergely.com/puppeteer-browser-automation/&quot; title=&quot;Browser automation revisited - meet Puppeteer&quot;&gt;nemethgergely.com/puppeteer-browser-automation/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteerを使ったデバッグの自動化についての記事。&lt;br&gt;
コンソールログの取得、スクリーンショット、プロファイルの記録、HTTPリクエストの制御などを行う方法についてを紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;コンポーネント指向と余白の設計&quot;&gt;コンポーネント指向と余白の設計&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/manabuyasuda1/ss-71261608&quot; title=&quot;コンポーネント指向と余白の設計&quot;&gt;www.slideshare.net/manabuyasuda1/ss-71261608&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;design&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Atomic Design/コンポーネント指向とmargin/paddingのパターンについてのスライド。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;docusaurus-·-easy-to-maintain-open-source-documentation-websites&quot;&gt;Docusaurus · Easy to Maintain Open Source Documentation Websites&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docusaurus.io/&quot; title=&quot;Docusaurus · Easy to Maintain Open Source Documentation Websites&quot;&gt;docusaurus.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PrettierやJestなどが利用している静的サイトジェネレータ。&lt;br&gt;
Reactを使ったカスタマイズ、翻訳への対応、ブログ機能やalgoliaを使った検索などライブラリサイト向けの機能を持っている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugger-playground-|-introduction-|-mozilla&quot;&gt;Debugger PlayGround | Introduction | Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mozilladevelopers.github.io/playground/debugger&quot; title=&quot;Debugger PlayGround | Introduction | Mozilla&quot;&gt;mozilladevelopers.github.io/playground/debugger&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefoxの開発者ツールのチュートリアル。&lt;br&gt;
デバッガーの使い方、ブレークポイントの読み方、コールスタックの読み方などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/11/go-beyond-console-log-with-the-firefox-debugger/&quot; title=&quot;Go beyond console.log with the Firefox Debugger – Mozilla Hacks – the Web developer blog&quot;&gt;Go beyond console.log with the Firefox Debugger – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bogdan-lyashenko/under-the-hood-reactjs:-entire-react-code-base-explanation-by-visual-block-schemes-(stack+fiber-versions)&quot;&gt;Bogdan-Lyashenko/Under-the-hood-ReactJS: Entire React code base explanation by visual block schemes (Stack+Fiber versions)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Bogdan-Lyashenko/Under-the-hood-ReactJS&quot; title=&quot;Bogdan-Lyashenko/Under-the-hood-ReactJS: Entire React code base explanation by visual block schemes (Stack+Fiber versions)&quot;&gt;github.com/Bogdan-Lyashenko/Under-the-hood-ReactJS&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのコードベースの解説リポジトリ。&lt;br&gt;
コードの構造などの図などとともに、React Fiber、Stack reconcilerなどの解説をしてる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart&quot; title=&quot;Bogdan-Lyashenko/js-code-to-svg-flowchart: js2flowchart - a visualization library to convert any JavaScript code into beautiful SVG flowchart. Learn other’s code. Design your code. Refactor code. Document code. Explain code.&quot;&gt;Bogdan-Lyashenko/js-code-to-svg-flowchart: js2flowchart - a visualization library to convert any JavaScript code into beautiful SVG flowchart. Learn other’s code. Design your code. Refactor code. Document code. Explain code.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lifenautjoe/noel:-a-universal,-human-centric,-replayable-javascript-event-emitter.&quot;&gt;lifenautjoe/noel: A universal, human-centric, replayable javascript event emitter.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lifenautjoe/noel&quot; title=&quot;lifenautjoe/noel: A universal, human-centric, replayable javascript event emitter.&quot;&gt;github.com/lifenautjoe/noel&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;イベントハンドラを登録する前に発火したイベントも後からリプレイして再度発火することができるEventEmitterライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;papercss-·-the-less-formal-css-framework&quot;&gt;PaperCSS · the less formal CSS framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.getpapercss.com/&quot; title=&quot;PaperCSS · the less formal CSS framework&quot;&gt;www.getpapercss.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;手書き風のCSSフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bogdan-lyashenko/js-code-to-svg-flowchart:-js2flowchart---a-visualization-library-to-convert-any-javascript-code-into-beautiful-svg-flowchart.-learn-other’s-code.-design-your-code.-refactor-code.-document-code.-explain-code.&quot;&gt;Bogdan-Lyashenko/js-code-to-svg-flowchart: js2flowchart - a visualization library to convert any JavaScript code into beautiful SVG flowchart. Learn other’s code. Design your code. Refactor code. Document code. Explain code.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart&quot; title=&quot;Bogdan-Lyashenko/js-code-to-svg-flowchart: js2flowchart - a visualization library to convert any JavaScript code into beautiful SVG flowchart. Learn other’s code. Design your code. Refactor code. Document code. Explain code.&quot;&gt;github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコードから制御フローチャートの図を作成するツール。 ifやwhileなどのループをそのままフローチャートにしてくれる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 14 Nov 2017 10:27:38 +0900</pubDate>
        <link>https://jser.info/2017/11/14/react-v16.1.0-firefox-devtools-docusaurus/</link>
        <guid isPermaLink="true">https://jser.info/2017/11/14/react-v16.1.0-firefox-devtools-docusaurus/</guid>
        
        <category>React</category>
        
        <category>Firefox</category>
        
        <category>Tool</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-11-07のJS: TypeScript 2.6.、Node.js 8.9.0 LTS、Angular 5.0.0</title>
        <description>&lt;p&gt;JSer.info #356 - TypeScript 2.6が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/10/31/announcing-typescript-2-6/&quot; title=&quot;Announcing TypeScript 2.6 | TypeScript&quot;&gt;Announcing TypeScript 2.6 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;strictFunctionTypes&lt;/code&gt;オプションが有効時は、関数の引数がBivariantではなくContravariantとして扱われるようになりました。以前のTypeScriptはFlowとは異なり関数の引数の不整合をコンパイルエラーとしませんでしたが、今回の&lt;code&gt;strictFunctionTypes&lt;/code&gt;オプションでその不整合をコンパイルエラーにできます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/na-o-ys/items/aa56d678cdf0de2bdd79&quot; title=&quot;なぜ TypeScript の型システムが健全性を諦めているか - Qiita&quot;&gt;なぜ TypeScript の型システムが健全性を諦めているか - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また&lt;code&gt;--locale&lt;/code&gt;でのCLIやエラーメッセージの多言語化、&lt;code&gt;--watch&lt;/code&gt;の改善、&lt;code&gt;// ts-ignore&lt;/code&gt;のサポート。&lt;br&gt;
languageserviceの改善でVSCodeなどでJSDocから型をQuickfixできるように、&lt;code&gt;@types&lt;/code&gt;の自動インストール対応などが行われています。&lt;/p&gt;

&lt;p&gt;詳しくは次の記事でも解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://abcdef.gets.b6n.ch/entry/2017/11/01/101358&quot;&gt;TypeScript 2.6 変更点と注意点 - abcdefGets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/d2c7cf142fa0af39d2d5&quot;&gt;TypeScript 2.6.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 8.9.0と9.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.9.0/&quot;&gt;Node v8.9.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 8.9.0では、npm 5.5.1へのアップデート、&lt;code&gt;require.resolve()&lt;/code&gt;に指定パスを基準に探索するオプションが追加、&lt;code&gt;util.TextEncoder&lt;/code&gt;と&lt;code&gt;util.TextDecoder&lt;/code&gt;の実験フラグが外れています。&lt;br&gt;
また、Node.js 8.9.0は8.x系のLong-Term Supported (LTS)となりました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.rawgit.com/nodejs/Release/05e27d38230ae5077a3bb463933f5c2eeb33f981/schedule.png&quot; alt=&quot;LTS&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot; title=&quot;nodejs/Release: Node.js Foundation Release Working Group&quot;&gt;nodejs/Release: Node.js Foundation Release Working Group&lt;/a&gt;より&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;次の記事で詳細が書かれていますが、Node.js 4.xと6.xからのマイグレーションが推奨されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/news-node-js-8-moves-into-long-term-support-and-node-js-9-becomes-the-new-current-release-line-74cf754a10a0&quot; title=&quot;NEWS: Node.js 8 Moves into Long-Term Support and Node.js 9 Becomes the New Current Release Line&quot;&gt;NEWS: Node.js 8 Moves into Long-Term Support and Node.js 9 Becomes the New Current Release Line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、同時にNode.js 9.0.0がリリースされています。&lt;br&gt;
Node.js 9.0.0では、さまざまなBreaking Changeが含まれています。&lt;/p&gt;

&lt;p&gt;Error codeの対応、&lt;code&gt;assert.deepStrictEqual&lt;/code&gt;がSameValueZeroのロジックで比較するようになり、&lt;code&gt;Intl.v8BreakIterator&lt;/code&gt;や&lt;code&gt;domain&lt;/code&gt;から&lt;code&gt;.dispose()&lt;/code&gt;の削除などが行われています。&lt;/p&gt;

&lt;p&gt;機能追加として、&lt;code&gt;assert&lt;/code&gt;のメソッドがカスタムエラーをサポート、&lt;code&gt;util.callbackify&lt;/code&gt;、&lt;code&gt;util.isDeepStrictEqual&lt;/code&gt;の追加などが行われています。&lt;/p&gt;

&lt;p&gt;詳細は次の記事を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.0.0/&quot;&gt;Node v9.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Angular 5.0.0がリリースされました。&lt;br&gt;
また同時に&lt;a href=&quot;https://github.com/angular/angular-cli&quot; title=&quot;angular-cli&quot;&gt;angular-cli&lt;/a&gt; 1.5.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/version-5-0-0-of-angular-now-available-37e414935ced&quot;&gt;Version 5.0.0 of Angular Now Available – Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#500-pentagonal-donut-2017-11-01&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular-cli/releases/tag/v1.5.0&quot;&gt;Release 1.5 – Turing · angular/angular-cli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CLIでのビルドにBuild Optimizerがデフォルトで適応され、Decoratorなどランタイムでは不要なものを削除できるようになっています。&lt;br&gt;
破壊的な変更としてi18n pipesのデフォルト挙動の変更やDateFormatがCLDRに合わせた書式へと変更されています。&lt;br&gt;
偶然、同じ時期にCLDRの最新版であるCLDR 32もリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/spreadsheets/d/12iygt-_cakNP1VO7MV9g4lq9NsxVWG4tSfc98HpHb0k/edit#gid=0&quot; title=&quot;Date formats - Google spread sheet&quot;&gt;Date formats - Google spread sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cldr.unicode.org/index/downloads/cldr-32&quot; title=&quot;CLDR 32 Release Note - CLDR - Unicode Common Locale Data Repository&quot;&gt;CLDR 32 Release Note - CLDR - Unicode Common Locale Data Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RxJS 5.5へのアップデート、Routerのライフサイクルの追加なども行われています。&lt;/p&gt;

&lt;p&gt;AngularではLTSとして&lt;code&gt;4.x&lt;/code&gt;系が公開されていて、&lt;code&gt;4.x&lt;/code&gt;は2017年10月から2018年10月までのサポートとなっています。&lt;br&gt;
詳細は次のページに公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/docs/RELEASE_SCHEDULE.md#long-term-supported-lts-versions&quot; title=&quot;Long-Term Supported (LTS) Versions&quot;&gt;Long-Term Supported (LTS) Versions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.6-|-typescript&quot;&gt;Announcing TypeScript 2.6 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/10/31/announcing-typescript-2-6/&quot; title=&quot;Announcing TypeScript 2.6 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2017/10/31/announcing-typescript-2-6/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.6リリース。&lt;br&gt;
&lt;code&gt;strictFunctionTypes&lt;/code&gt;のサポート、&lt;code&gt;--locale&lt;/code&gt;での多言語化、&lt;code&gt;--watch&lt;/code&gt;の改善、&lt;code&gt;// ts-ignore&lt;/code&gt;のサポート。&lt;br&gt;
VSCodeなどでJSDocから型をQuickfixできるように、&lt;code&gt;@types&lt;/code&gt;の自動インストール対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://abcdef.gets.b6n.ch/entry/2017/11/01/101358&quot; title=&quot;TypeScript 2.6 変更点と注意点 - abcdefGets&quot;&gt;TypeScript 2.6 変更点と注意点 - abcdefGets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/d2c7cf142fa0af39d2d5&quot; title=&quot;TypeScript 2.6.1 変更点 - Qiita&quot;&gt;TypeScript 2.6.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;news:-node.js-8-moves-into-long-term-support-and-node.js-9-becomes-the-new-current-release-line&quot;&gt;NEWS: Node.js 8 Moves into Long-Term Support and Node.js 9 Becomes the New Current Release Line&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-node-js-collection/news-node-js-8-moves-into-long-term-support-and-node-js-9-becomes-the-new-current-release-line-74cf754a10a0&quot; title=&quot;NEWS: Node.js 8 Moves into Long-Term Support and Node.js 9 Becomes the New Current Release Line&quot;&gt;medium.com/the-node-js-collection/news-node-js-8-moves-into-long-term-support-and-node-js-9-becomes-the-new-current-release-line-74cf754a10a0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 8.9.0がリリースされ8.xのLong-Term Support(LTS)となった。また同時に開発バージョンである9.xが公開された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.9.0/&quot; title=&quot;Node v8.9.0 (LTS) | Node.js&quot;&gt;Node v8.9.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.0.0/&quot; title=&quot;Node v9.0.0 (Current) | Node.js&quot;&gt;Node v9.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v8.9.0-(lts)-|-node.js&quot;&gt;Node v8.9.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.9.0/&quot; title=&quot;Node v8.9.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v8.9.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 8.9.0リリース。8.x系のLTSとして公開された。&lt;br&gt;
npm 5.5.1へのアップデート、&lt;code&gt;require.resolve()&lt;/code&gt;に指定パスを探索するオプションが追加、&lt;code&gt;util.TextEncoder&lt;/code&gt;と&lt;code&gt;util.TextDecoder&lt;/code&gt;のフラグが外れるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v9.0.0-(current)-|-node.js&quot;&gt;Node v9.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v9.0.0/&quot; title=&quot;Node v9.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v9.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 9.0.0リリース。&lt;br&gt;
Error codeの対応、&lt;code&gt;assert.deepStrictEqual&lt;/code&gt;がSameValueZeroのロジックで比較するように、&lt;code&gt;assert&lt;/code&gt;のメソッドがカスタムエラーをサポート、&lt;code&gt;util.callbackify&lt;/code&gt;、&lt;code&gt;util.isDeepStrictEqual&lt;/code&gt;の追加など。&lt;br&gt;
また&lt;code&gt;Intl.v8BreakIterator&lt;/code&gt;の削除されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nemethgergely.com/what-is-new-in-nodejs-9/&quot; title=&quot;What&amp;amp;amp;#39;s new in Node.js 9?&quot;&gt;What&amp;#39;s new in Node.js 9?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;version-5.0.0-of-angular-now-available-–-angular-blog&quot;&gt;Version 5.0.0 of Angular Now Available – Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/version-5-0-0-of-angular-now-available-37e414935ced&quot; title=&quot;Version 5.0.0 of Angular Now Available – Angular Blog&quot;&gt;blog.angular.io/version-5-0-0-of-angular-now-available-37e414935ced&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 5.0.0リリース。&lt;br&gt;
CLIにBuild Optimizerがデフォルトで適応され、Decoratorなどランタイムでは不要なものを削除できるように。&lt;br&gt;
i18n pipesのデフォルト挙動の変更やDateFormatの変更。&lt;br&gt;
RxJS 5.5へのアップデート、Routerのライフサイクルの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#500-pentagonal-donut-2017-11-01&quot; title=&quot;angular/CHANGELOG.md at master · angular/angular&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular-cli/releases/tag/v1.5.0&quot; title=&quot;Release 1.5 – Turing · angular/angular-cli&quot;&gt;Release 1.5 – Turing · angular/angular-cli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angular-update-guide.firebaseapp.com/&quot; title=&quot;Angular Update Guide - Beta&quot;&gt;Angular Update Guide - Beta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview 43-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 43 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8016/release-notes-for-safari-technology-preview-43/&quot; title=&quot;Release Notes for Safari Technology Preview 43 | WebKit&quot;&gt;webkit.org/blog/8016/release-notes-for-safari-technology-preview-43/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 43リリース。&lt;br&gt;
Cache Storage APIがデフォルトで有効化、&lt;code&gt;createImageBitmap&lt;/code&gt;と&lt;code&gt;drawImage(imageBitmap)&lt;/code&gt;のサポート。&lt;br&gt;
Web Inspectorで新しいネットワークタブ、Canvasタブの有効化、HARエクスポートに対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage&quot; title=&quot;CacheStorage - Web APIs | MDN&quot;&gt;CacheStorage - Web APIs | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/ImageBitmap&quot; title=&quot;ImageBitmap - Web API インターフェイス | MDN&quot;&gt;ImageBitmap - Web API インターフェイス | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;element-2.0-is-here-–-eleme-frontend-engineering-–-medium&quot;&gt;Element 2.0 is here – ELEME Frontend Engineering – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/elemefe/element-2-0-is-here-71bfa217e269&quot; title=&quot;Element 2.0 is here – ELEME Frontend Engineering – Medium&quot;&gt;medium.com/elemefe/element-2-0-is-here-71bfa217e269&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue向けのUIフレームワークのElement 2.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-new-javascript-optimizations,-webassembly,-sharedarraybuffer,-and-atomics-in-edgehtml-16---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;Introducing new JavaScript optimizations, WebAssembly, SharedArrayBuffer, and Atomics in EdgeHTML 16 - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/10/31/optimizations-webassembly-sharedarraybuffer-atomics-edgehtml-16/&quot; title=&quot;Introducing new JavaScript optimizations, WebAssembly, SharedArrayBuffer, and Atomics in EdgeHTML 16 - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2017/10/31/optimizations-webassembly-sharedarraybuffer-atomics-edgehtml-16/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MSEdge 16の変更点について。&lt;br&gt;
特定のスコープの関数を遅延実行できるようにしパフォーマンスの改善、try-catch-finallyの最適化、&lt;br&gt;
WebAssemblyとSharedArrayBufferをデフォルトで有効化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;common-typescript-error-messages---blog-|-sitepen&quot;&gt;Common TypeScript Error Messages - Blog | SitePen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2017/11/01/common-typescript-error-messages/&quot; title=&quot;Common TypeScript Error Messages - Blog | SitePen&quot;&gt;www.sitepen.com/blog/2017/11/01/common-typescript-error-messages/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのよく見るエラーとその解決方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;houdini-paint-api-|-blog.jxck.io&quot;&gt;Houdini Paint API | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2017-10-31/houdini-paint-api.html&quot; title=&quot;Houdini Paint API | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2017-10-31/houdini-paint-api.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Paint APIについての解説とデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-debug-front-end:-console-–-pragmatists&quot;&gt;How to debug Front-end: Console – Pragmatists&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.pragmatists.com/how-to-debug-front-end-console-3456e4ee5504&quot; title=&quot;How to debug Front-end: Console – Pragmatists&quot;&gt;blog.pragmatists.com/how-to-debug-front-end-console-3456e4ee5504&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debiug&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザの開発者ツールのConsole APIの紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;put-your-webpack-bundle-on-a-diet---part-1&quot;&gt;Put Your Webpack Bundle On A Diet - Part 1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.contentful.com/blog/2017/10/10/put-your-webpack-on-a-diet-part-1/&quot; title=&quot;Put Your Webpack Bundle On A Diet - Part 1&quot;&gt;www.contentful.com/blog/2017/10/10/put-your-webpack-on-a-diet-part-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackでbundleファイルサイズの最適化についての連載。&lt;br&gt;
Part 1ではminify、production buildなどの基本的なことを扱っている。&lt;br&gt;
tree shaking、momentやlodashなどから不要なものを削除、babel-preset-env でのpolyfillの最適化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/blog/2017/10/19/put-your-webpack-bundle-on-a-diet-part-2/&quot; title=&quot;Put Your Webpack Bundle On A Diet - Part 2&quot;&gt;Put Your Webpack Bundle On A Diet - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.contentful.com/blog/2017/10/27/put-your-webpack-bundle-on-a-diet-part-3/&quot; title=&quot;Put Your Webpack Bundle On A Diet - Part 3&quot;&gt;Put Your Webpack Bundle On A Diet - Part 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tracing-method-calls-via-proxies&quot;&gt;Tracing method calls via Proxies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://2ality.com/2017/11/proxy-method-calls.html&quot; title=&quot;Tracing method calls via Proxies&quot;&gt;2ality.com/2017/11/proxy-method-calls.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES proxyを使ったメソッド呼び出しのロギングについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.jsのパフォーマンスチューニングのtips---技術探し&quot;&gt;Node.jsのパフォーマンスチューニングのtips - 技術探し&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://abouthiroppy.hatenablog.jp/entry/2017/11/06/095943&quot; title=&quot;Node.jsのパフォーマンスチューニングのtips - 技術探し&quot;&gt;abouthiroppy.hatenablog.jp/entry/2017/11/06/095943&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのデバッグ、Trace系オプション紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;プロダクトに-1-から-vue.js-を導入した話&quot;&gt;プロダクトに 1 から Vue.js を導入した話&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/ShoheiOkada/1-vuejs&quot; title=&quot;プロダクトに 1 から Vue.js を導入した話&quot;&gt;www.slideshare.net/ShoheiOkada/1-vuejs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQueryベースだったシステムに、Vueを導入してみての話。&lt;br&gt;
チームへの導入や導入前後での違いについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;server.js---server.js&quot;&gt;Server.js - server.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://serverjs.io/&quot; title=&quot;Server.js - server.js&quot;&gt;serverjs.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シンプルなNode.jsのサーバライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;atomic-css&quot;&gt;Atomic CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://acss.io/&quot; title=&quot;Atomic CSS&quot;&gt;acss.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;宣言したクラスを元にCSSを作成するフレームワーク/ツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;raphamorim/react-tv:-[wip]-react-development-for-tv-(renderer-for-low-memory-applications-and-packager-for-webos,-tizen,-orsay)-📺&quot;&gt;raphamorim/react-tv: [WIP] React development for TV (Renderer for low memory applications and Packager for WebOS, Tizen, Orsay) 📺&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/raphamorim/react-tv&quot; title=&quot;raphamorim/react-tv: \[WIP\] React development for TV (Renderer for low memory applications and Packager for WebOS, Tizen, Orsay) 📺&quot;&gt;github.com/raphamorim/react-tv&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TV&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebOSなどのTV向けのReactツールキット。&lt;br&gt;
Rendererや開発環境、ツールなどをまとめたもの&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-bits-·-gitbook&quot;&gt;React Bits · GitBook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gitbook.com/book/vasanthk/react-bits/details&quot; title=&quot;React Bits · GitBook&quot;&gt;www.gitbook.com/book/vasanthk/react-bits/details&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactのパターンやTips、アンチパターンについてまとめられた電子書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Nov 2017 10:13:49 +0900</pubDate>
        <link>https://jser.info/2017/11/07/typescript-2.6.-node.js-8.9.0-lts-angular-5.0.0/</link>
        <guid isPermaLink="true">https://jser.info/2017/11/07/typescript-2.6.-node.js-8.9.0-lts-angular-5.0.0/</guid>
        
        <category>TypeScript</category>
        
        <category>Node.js</category>
        
        <category>Angular</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-10-30のJS: Node.js 8.8.0、Chrome 63β、Property-Based Testing</title>
        <description>&lt;p&gt;JSer.info #355 - Node.js v8.8.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.8.0/&quot; title=&quot;Node v8.8.0 (Current) | Node.js&quot;&gt;Node v8.8.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/api/http2.html&quot;&gt;&lt;code&gt;http2&lt;/code&gt;モジュール&lt;/a&gt;がデフォルトで有効化、モジュールのhookを処理を扱えるコマンドライン引数として&lt;code&gt;--loader&lt;/code&gt;がサポートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/15445&quot; title=&quot;module: resolve and instantiate loader pipeline hooks by guybedford · Pull Request #15445 · nodejs/node&quot;&gt;module: resolve and instantiate loader pipeline hooks by guybedford · Pull Request #15445 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 63βがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2017/10/chrome-63-beta-dynamic-module-imports_27.html&quot; title=&quot;Chromium Blog: Chrome 63 Beta: Dynamic module imports, async iterators and generators, Device Memory API, and permissions UI changes&quot;&gt;Chromium Blog: Chrome 63 Beta: Dynamic module imports, async iterators and generators, Device Memory API, and permissions UI changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dynamic import、Async iterator、Device Memory API、&lt;code&gt;Promise#finally&lt;/code&gt;のサポートなど&lt;br&gt;
また、プッシュ通知などの許可ダイアログの変更が行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/push-notifications/permission-ux&quot; title=&quot;Permission UX  |  Web Fundamentals  |  Google Developers&quot;&gt;Permission UX  |  Web Fundamentals  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;EventTargetのコールバックに不正な値を渡した場合に&lt;code&gt;TypeError&lt;/code&gt;を投げるような仕様追従、印刷時に&lt;code&gt;beforeprint&lt;/code&gt;と&lt;code&gt;afterprint&lt;/code&gt;イベントに対応、非推奨となっていた&lt;code&gt;/deep/&lt;/code&gt;の削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/10/remove-shadow-piercing&quot; title=&quot;Removing ::shadow and /deep/ in Chrome 63  |  Web  |  Google Developers&quot;&gt;Removing ::shadow and /deep/ in Chrome 63  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/garbles/propertybased-testing-for-godly-tests&quot; title=&quot;Property-Based Testing for Godly Tests&quot;&gt;Property-Based Testing for Godly Tests&lt;/a&gt;というスライドでは、&lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot; title=&quot;testcheck-js&quot;&gt;testcheck-js&lt;/a&gt;を使ったProperty-Based Testingについて書かれています。&lt;/p&gt;

&lt;p&gt;Example-Based Test、Fizz Test、Property-Based Testのカバーできる範囲の違いや特徴について紹介しています。&lt;br&gt;
HaskellのQuickCheckなどが有名ですが、Property-Based Testではテストする値の範囲を指定し、その範囲から自動生成された値を使ったテストを行います。&lt;br&gt;
そのため、特定の値を固定値として指定するExample-Based Testよりも、Property-Based Testのカバーできる範囲は広いという話などが書かれています。一方、その仕組みのため速くはない点などについて書かれています。&lt;/p&gt;

&lt;p&gt;また、Flowの型定義からのテスト範囲の自動生成についてなどについても書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@gabescholz/randomized-testing-in-javascript-without-lifting-a-finger-8d616d7048af&quot; title=&quot;Randomized Testing in JavaScript Without Lifting a Finger&quot;&gt;Randomized Testing in JavaScript Without Lifting a Finger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v8.8.0-(current)-|-node.js&quot;&gt;Node v8.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v8.8.0/&quot; title=&quot;Node v8.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v8.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 8.8.0リリース。&lt;br&gt;
http2モジュールがデフォルトで有効化、モジュールのhookを処理を扱えるコマンドライン引数として&lt;code&gt;--loader&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/15445&quot; title=&quot;module: resolve and instantiate loader pipeline hooks by guybedford · Pull Request #15445 · nodejs/node&quot;&gt;module: resolve and instantiate loader pipeline hooks by guybedford · Pull Request #15445 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-6.3&quot;&gt;V8 JavaScript Engine: V8 Release 6.3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8project.blogspot.com/2017/10/v8-release-63.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 6.3&quot;&gt;v8project.blogspot.com/2017/10/v8-release-63.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 6.3リリース。&lt;br&gt;
パフォーマンス改善、&lt;code&gt;import()&lt;/code&gt;、&lt;code&gt;Promise#finally&lt;/code&gt;、Aynsc iteratorのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-0.23.0-·-avajs/ava&quot;&gt;Release 0.23.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.23.0&quot; title=&quot;Release 0.23.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v0.23.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AVA 0.23.0リリース。&lt;br&gt;
&lt;code&gt;NODE_ENV=test&lt;/code&gt;を設定するように、&lt;code&gt;snapshotLocation&lt;/code&gt;を&lt;code&gt;pacakge.json&lt;/code&gt;に書くことでsnapshotファイルの保存場所を指定できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.4.0-·-fuse-box/fuse-box&quot;&gt;Release 2.4.0 · fuse-box/fuse-box&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fuse-box/fuse-box/releases/tag/v2.4.0&quot; title=&quot;Release 2.4.0 · fuse-box/fuse-box&quot;&gt;github.com/fuse-box/fuse-box/releases/tag/v2.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FuseBox 2.4.0 リリース。&lt;br&gt;
Quantum上でのUglify-esのサポート、Vue周りの対応改善、CLIをAPIとして使えるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-63-beta:-dynamic-module-imports,-async-iterators-and-generators,-device-memory-api,-and-permissions-ui-changes&quot;&gt;Chromium Blog: Chrome 63 Beta: Dynamic module imports, async iterators and generators, Device Memory API, and permissions UI changes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2017/10/chrome-63-beta-dynamic-module-imports_27.html&quot; title=&quot;Chromium Blog: Chrome 63 Beta: Dynamic module imports, async iterators and generators, Device Memory API, and permissions UI changes&quot;&gt;blog.chromium.org/2017/10/chrome-63-beta-dynamic-module-imports_27.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 63 Betaリリース。&lt;br&gt;
Dynamic import、Async iterator、Device Memory API、Promise#finallyの実装、プッシュ通知などの許可ダイアログの変更など。&lt;br&gt;
また、EventTargetの仕様追従、印刷時に&lt;code&gt;beforeprint&lt;/code&gt;と&lt;code&gt;afterprint&lt;/code&gt;イベントを発火するように、&lt;code&gt;/deep/&lt;/code&gt;の削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/10/devtools-release-notes&quot; title=&quot;What&amp;amp;amp;#39;s New In DevTools (Chrome 63)  |  Web  |  Google Developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 63)  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/push-notifications/permission-ux&quot; title=&quot;Permission UX  |  Web Fundamentals  |  Google Developers&quot;&gt;Permission UX  |  Web Fundamentals  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;saying-goodbye-to-firebug-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Saying Goodbye to Firebug ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/10/saying-goodbye-to-firebug/&quot; title=&quot;Saying Goodbye to Firebug ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2017/10/saying-goodbye-to-firebug/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firebug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;歴史&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;addon&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FirebugはFirefox57で開発は終了し、Firefoxの開発者ツールが代替となる。&lt;br&gt;
FirebugからFirefoxの開発者ツールへのマイグレーションガイドも公開されている。また、Firebugの歴史について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Migrating_from_Firebug&quot; title=&quot;Migrating from Firebug - Firefox Developer Tools | MDN&quot;&gt;Migrating from Firebug - Firefox Developer Tools | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoftのnapa.jsでjavascriptをマルチスレッド化する-|-plaid-engineer-blog&quot;&gt;MicrosoftのNapa.jsでJavaScriptをマルチスレッド化する | PLAID engineer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.plaid.co.jp/js_multi_threading/&quot; title=&quot;MicrosoftのNapa.jsでJavaScriptをマルチスレッド化する | PLAID engineer blog&quot;&gt;tech.plaid.co.jp/js_multi_threading/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;マルチプロセスのWorkerを扱うことができるnapajaについて。&lt;br&gt;
どのようなモチベーションや構造になっているかについて。&lt;br&gt;
Zoneというワーカーのまとめ役やデータのやり取りの方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-web-component-using-vanilla-javascript-–-ayush-gupta-–-full-stack-web-developer&quot;&gt;HTML Web Component using Vanilla JavaScript – Ayush Gupta – Full Stack Web Developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ayushgp.github.io/html-web-components-using-vanilla-js/&quot; title=&quot;HTML Web Component using Vanilla JavaScript – Ayush Gupta – Full Stack Web Developer&quot;&gt;ayushgp.github.io/html-web-components-using-vanilla-js/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Components入門記事。&lt;br&gt;
&lt;code&gt;&amp;lt;user-card /&amp;gt;&lt;/code&gt;というデータを取得して表示する要素を例にCustom Elementのライフサイクル、template要素、ShadowDOMについて紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-modules-in-javascript---blog-|-sitepen&quot;&gt;State of Modules in JavaScript - Blog | SitePen&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepen.com/blog/2017/10/26/state-of-modules-in-javascript/&quot; title=&quot;State of Modules in JavaScript - Blog | SitePen&quot;&gt;www.sitepen.com/blog/2017/10/26/state-of-modules-in-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES moduleについての解説記事。&lt;br&gt;
import/exportやdynamic import、Node.jsやwebpackなどのbundlerでの扱いについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;unpopular-metrics-about-js-bundlers-–-andrea-giammarchi-–-medium&quot;&gt;Unpopular Metrics about JS Bundlers – Andrea Giammarchi – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@WebReflection/unpopular-metrics-about-js-bundlers-a3c56ea5390d&quot; title=&quot;Unpopular Metrics about JS Bundlers – Andrea Giammarchi – Medium&quot;&gt;medium.com/@WebReflection/unpopular-metrics-about-js-bundlers-a3c56ea5390d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;小さなbundleツールである&lt;code&gt;asbundle&lt;/code&gt;について。 rollupより機能的にも小さくシンプル。ES moduleをbundleするだけのような機能を持っている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/asbundle&quot; title=&quot;WebReflection/asbundle: A minimalistic CommonJS bundler&quot;&gt;WebReflection/asbundle: A minimalistic CommonJS bundler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;can-you-afford-it?:-real-world-web-performance-budgets-–-infrequently-noted&quot;&gt;Can You Afford It?: Real-world Web Performance Budgets – Infrequently Noted&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/&quot; title=&quot;Can You Afford It?: Real-world Web Performance Budgets – Infrequently Noted&quot;&gt;infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;初回ロードのTime-to-Interactive (TTI)が5秒以下、それ以降は2秒以下というPerformance Budgetsを元にそれを満たすための配分について。&lt;br&gt;
これ満たすための考え方や技術的な手法、補助するツールなどについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mitsue.co.jp/knowledge/blog/frontend/201612/16_1413.html&quot; title=&quot;WebサイトのPerformance Budgetとは | フロントエンドBlog | ミツエーリンクス&quot;&gt;WebサイトのPerformance Budgetとは | フロントエンドBlog | ミツエーリンクス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-dev-summit-2017---youtube&quot;&gt;Chrome Dev Summit 2017 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list=PLNYkxOF6rcICUD5nBfRdAR6Fveosnqa5m&quot; title=&quot;Chrome Dev Summit 2017 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLNYkxOF6rcICUD5nBfRdAR6Fveosnqa5m&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome Dev Summit 2017の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;とにかく楽してvue.jsでtypescriptを使いたい&quot;&gt;とにかく楽してVue.jsでTypeScriptを使いたい&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/sakura_pr/vuejstype-script-81228009&quot; title=&quot;とにかく楽してVue.jsでTypeScriptを使いたい&quot;&gt;www.slideshare.net/sakura_pr/vuejstype-script-81228009&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 2.5のTypeScriptサポートについてのスライド。&lt;br&gt;
JavaScriptで書かれたVueアプリケーションをTypeScriptに移行する手順について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux.-from-twitter-hype-to-production-by-jenya-terpil&quot;&gt;Redux. From twitter hype to production by Jenya Terpil&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://slides.com/jenyaterpil/redux-from-twitter-hype-to-production#/&quot; title=&quot;Redux. From twitter hype to production by Jenya Terpil&quot;&gt;slides.com/jenyaterpil/redux-from-twitter-hype-to-production#/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reduxの動作フローについてのスライド。&lt;br&gt;
アニメーション画像によってView-&amp;gt;Action-&amp;gt;Reducer-&amp;gt;Stateの流れについてを可視化している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;property-based-testing-for-godly-tests&quot;&gt;Property-Based Testing for Godly Tests&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/garbles/propertybased-testing-for-godly-tests&quot; title=&quot;Property-Based Testing for Godly Tests&quot;&gt;www.slideshare.net/garbles/propertybased-testing-for-godly-tests&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Property-Based Testingについてのスライド。&lt;br&gt;
Example-Based Test、Fizz Test、&lt;br&gt;
Property-Based Testのカバーできる範囲の違いや特徴について。&lt;br&gt;
&lt;code&gt;testcheck&lt;/code&gt;を使ったテストやFlowの型定義からの自動生成についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/unbounce/babel-plugin-transform-flow-to-gen&quot; title=&quot;unbounce/babel-plugin-transform-flow-to-gen: Flow + Babel + TestCheck &amp;amp;#x3D;&amp;amp;#x3D; QuickCheck in JavaScript&quot;&gt;unbounce/babel-plugin-transform-flow-to-gen: Flow + Babel + TestCheck == QuickCheck in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot; title=&quot;leebyron/testcheck-js: Generative testing for JavaScript&quot;&gt;leebyron/testcheck-js: Generative testing for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpackmonitor/webpackmonitor:-a-tool-for-monitoring-webpack-optimization-metrics-through-the-development-process&quot;&gt;webpackmonitor/webpackmonitor: A tool for monitoring webpack optimization metrics through the development process&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpackmonitor/webpackmonitor&quot; title=&quot;webpackmonitor/webpackmonitor: A tool for monitoring webpack optimization metrics through the development process&quot;&gt;github.com/webpackmonitor/webpackmonitor&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackのstats.json結果をビジュアライズしてくれるツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-vue.js-report-·-monterail&quot;&gt;State of Vue.js Report · Monterail&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.monterail.com/state-of-vuejs-report&quot; title=&quot;State of Vue.js Report · Monterail&quot;&gt;www.monterail.com/state-of-vuejs-report&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PDF&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueに関する80ページほどのレポート。Vue自体の状況、アンケートベースのレポート、利用してる企業のケーススタディなどについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;apollo-client-2.0-–-apollo-graphql&quot;&gt;Apollo Client 2.0 – Apollo GraphQL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev-blog.apollodata.com/apollo-client-2-0-5c8d0affcec7&quot; title=&quot;Apollo Client 2.0 – Apollo GraphQL&quot;&gt;dev-blog.apollodata.com/apollo-client-2-0-5c8d0affcec7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Apollo Client 2.0について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vitalets/websocket-as-promised:-promise-based-api-for-websockets&quot;&gt;vitalets/websocket-as-promised: Promise-based API for WebSockets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vitalets/websocket-as-promised&quot; title=&quot;vitalets/websocket-as-promised: Promise-based API for WebSockets&quot;&gt;github.com/vitalets/websocket-as-promised&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PromiseベースのWebSocketライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nicojs/node-install-local:-installs-npm/yarn-packages-locally-without-symlink.-exactly-the-same-as-your-production-installation,-no-compromises.&quot;&gt;nicojs/node-install-local: Installs npm/yarn packages locally without symlink. Exactly the same as your production installation, no compromises.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nicojs/node-install-local&quot; title=&quot;nicojs/node-install-local: Installs npm/yarn packages locally without symlink. Exactly the same as your production installation, no compromises.&quot;&gt;github.com/nicojs/node-install-local&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm5やyarnはローカルのパッケージをsymlinkでインストールしてしまうため、symlinkに対応してないツールなどが動作しなくなる。&lt;br&gt;
通常のパッケージと同じようにディレクトリにインストールすることができるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;softvar/awesome-web-storage:-everything-you-need-to-know-about-client-side-storage.&quot;&gt;softvar/awesome-web-storage: Everything you need to know about Client-side Storage.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/softvar/awesome-web-storage&quot; title=&quot;softvar/awesome-web-storage: Everything you need to know about Client-side Storage.&quot;&gt;github.com/softvar/awesome-web-storage&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Storageについてのまとめたドキュメント。&lt;br&gt;
cookie、localStorage、sessionStorageについての比較、関連ライブラリ、ツールなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;feimosi/frameworks-code-comparison:-code-comparison-of-modern-frameworks,-based-on-react,-angular-and-vue.js&quot;&gt;feimosi/frameworks-code-comparison: Code comparison of modern frameworks, based on React, Angular and Vue.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/feimosi/frameworks-code-comparison&quot; title=&quot;feimosi/frameworks-code-comparison: Code comparison of modern frameworks, based on React, Angular and Vue.js&quot;&gt;github.com/feimosi/frameworks-code-comparison&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular, React, Vueのコンポーネントで共通して行う処理の扱い方について比較したリポジトリ。&lt;br&gt;
それぞれのライブラリごとの短い解説とコードスニペットを紹介してる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-development-with-typescript:-yakov-fain,-anton-moiseev:-9781617295348:-amazon.com:-books&quot;&gt;Angular Development with Typescript: Yakov Fain, Anton Moiseev: 9781617295348: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Angular-Development-Typescript-Yakov-Fain/dp/1617295345&quot; title=&quot;Angular Development with Typescript: Yakov Fain, Anton Moiseev: 9781617295348: Amazon.com: Books&quot;&gt;www.amazon.com/Angular-Development-Typescript-Yakov-Fain/dp/1617295345&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年5月30日発売&lt;br&gt;
AngularとTypeScriptについての本&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.com:-typescript-2.0-cookbook-ebook:-shiv-shankar-kushwaha:-kindle-store&quot;&gt;Amazon.com: TypeScript 2.0 Cookbook eBook: Shiv Shankar Kushwaha: Kindle Store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/TypeScript-Cookbook-Shiv-Shankar-Kushwaha-ebook/dp/B01CR5GCXY&quot; title=&quot;Amazon.com: TypeScript 2.0 Cookbook eBook: Shiv Shankar Kushwaha: Kindle Store&quot;&gt;www.amazon.com/TypeScript-Cookbook-Shiv-Shankar-Kushwaha-ebook/dp/B01CR5GCXY&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年8月発売&lt;br&gt;
TypeScriptクックブック&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/typescript-20-cookbook&quot; title=&quot;TypeScript 2.0 Cookbook | PACKT Books&quot;&gt;TypeScript 2.0 Cookbook | PACKT Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 31 Oct 2017 00:23:18 +0900</pubDate>
        <link>https://jser.info/2017/10/31/node.js-8.8.0-chrome-63b-property-based-testing/</link>
        <guid isPermaLink="true">https://jser.info/2017/10/31/node.js-8.8.0-chrome-63b-property-based-testing/</guid>
        
        <category>Node.js</category>
        
        <category>Chrome</category>
        
        <category>Testing</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-10-24のJS: CKEditor 5、MDN Web Docsへのドキュメント統合</title>
        <description>&lt;p&gt;JSer.info #354 - Mozilla、Microsoft、Google、W3Cが協調してウェブ開発のドキュメントを&lt;a href=&quot;https://developer.mozilla.org/&quot; title=&quot;MDN Web Docs&quot;&gt;MDN Web Docs&lt;/a&gt;に集約していくことを発表しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2017/10/18/mozilla-brings-microsoft-google-w3c-samsung-together-create-cross-browser-documentation-mdn/&quot; title=&quot;Mozilla brings Microsoft, Google, the W3C, Samsung together to create cross-browser documentation on MDN - The Mozilla Blog&quot;&gt;Mozilla brings Microsoft, Google, the W3C, Samsung together to create cross-browser documentation on MDN - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;目に見える変化としては、MSDNのドキュメントがMDNにリダイレクトされていきます。&lt;br&gt;
ブラウザ固有のドキュメントに関しては&lt;a href=&quot;https://docs.microsoft.com/ja-jp/microsoft-edge/&quot; title=&quot;Microsoft Edge documentation - Microsoft Edge Development | Microsoft Docs&quot;&gt;Microsoft Edge documentation - Microsoft Edge Development | Microsoft Docs&lt;/a&gt;などに残ります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/10/18/documenting-web-together-mdn-web-docs/&quot; title=&quot;Documenting the Web together - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;Documenting the Web together - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前、Web Platform APIのドキュメントを統合しようという動きは&lt;a href=&quot;https://webplatform.github.io/&quot; title=&quot;Your Web, documented. · WebPlatform.org&quot;&gt;WebPlatform.org&lt;/a&gt;という試みが行われていましたが、2015年にdiscontinueとなっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ckeditor.com/blog/CKEditor-5-A-new-era-for-rich-text-editing/&quot; title=&quot;CKEditor 5: A new era for rich text editing | CKEditor.com&quot;&gt;CKEditor 5: A new era for rich text editing | CKEditor.com&lt;/a&gt;という記事ではリッチエディタライブラリであるCKEditor 5の変更点について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ckeditor/ckeditor5&quot; title=&quot;ckeditor/ckeditor5: Development environment for CKEditor 5; the best browser-based rich text editor.&quot;&gt;ckeditor/ckeditor5: Development environment for CKEditor 5; the best browser-based rich text editor.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CKEditor 5では内部的にドキュメントモデルを持ち、エディタのインターフェースやAPI経由での変更はこのドキュメントモデルを操作するようになりました。&lt;br&gt;
今まではContentEditable + プリプロセスで行っていたため、汚いHTMLが生成される場合もあります。ドキュメントモデルから一意なHTMLを出力できるようになっています。また、ドキュメントモデルからの出力先として&lt;a href=&quot;https://docs.ckeditor.com/ckeditor5/latest/features/markdown.html&quot; title=&quot;Markdown&quot;&gt;Markdownへの出力&lt;/a&gt;などもできるようになっています。&lt;/p&gt;

&lt;p&gt;このドキュメントモデルを内部的にもつアプローチは同様のリッチエディタでは採用されることが多くなっています。&lt;br&gt;
&lt;a href=&quot;https://draftjs.org/&quot; title=&quot;Draft.js&quot;&gt;Draft.js&lt;/a&gt;、&lt;a href=&quot;http://marijnhaverbeke.nl/blog/prosemirror-1.html&quot; title=&quot;ProseMirror&quot;&gt;ProseMirror&lt;/a&gt;、&lt;a href=&quot;https://github.com/quilljs/quill&quot; title=&quot;Quill&quot;&gt;Quill&lt;/a&gt;の&lt;a href=&quot;https://github.com/quilljs/parchment&quot; title=&quot;Parchment&quot;&gt;Parchment&lt;/a&gt;、&lt;a href=&quot;https://github.com/basecamp/trix#understanding-the-document-model&quot; title=&quot;Trix&quot;&gt;Trix&lt;/a&gt;、&lt;a href=&quot;https://github.com/ianstormtaylor/slate&quot; title=&quot;Slate&quot;&gt;Slate&lt;/a&gt;のdata modelなどが似たような仕組みを持っています。&lt;/p&gt;

&lt;p&gt;興味がある人は合わせて見るとよいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what’s-new-in-microsoft-edge-in-the-windows-10-fall-creators-update---microsoft-edge-dev-blogmicrosoft-edge-dev-blog&quot;&gt;What’s New in Microsoft Edge in the Windows 10 Fall Creators Update - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/10/17/edgehtml-16-fall-creators-update/&quot; title=&quot;What’s New in Microsoft Edge in the Windows 10 Fall Creators Update - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2017/10/17/edgehtml-16-fall-creators-update/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MSEdge 16の変更点について。&lt;br&gt;
CSS Grid Layout、object-fit、Payment Request APIのサポート。&lt;br&gt;
Service Workerの試験的サポート、WebVR対応の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-42-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 42 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8001/release-notes-for-safari-technology-preview-42/&quot; title=&quot;Release Notes for Safari Technology Preview 42 | WebKit&quot;&gt;webkit.org/blog/8001/release-notes-for-safari-technology-preview-42/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 42リリース。&lt;br&gt;
Payment Requestの機能実装、&lt;code&gt;font-display&lt;/code&gt;の実装、&lt;code&gt;constant()&lt;/code&gt;が&lt;code&gt;env()&lt;/code&gt;にリネーム、&lt;code&gt;link rel=preconnect&lt;/code&gt;、&lt;code&gt;import.meta&lt;/code&gt;のサポート、Web InspectorにCanvasタブを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mozilla-brings-microsoft,-google,-the-w3c,-samsung-together-to-create-cross-browser-documentation-on-mdn---the-mozilla-blog&quot;&gt;Mozilla brings Microsoft, Google, the W3C, Samsung together to create cross-browser documentation on MDN - The Mozilla Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2017/10/18/mozilla-brings-microsoft-google-w3c-samsung-together-create-cross-browser-documentation-mdn/&quot; title=&quot;Mozilla brings Microsoft, Google, the W3C, Samsung together to create cross-browser documentation on MDN - The Mozilla Blog&quot;&gt;blog.mozilla.org/blog/2017/10/18/mozilla-brings-microsoft-google-w3c-samsung-together-create-cross-browser-documentation-mdn/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Mozilla&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mozilla、Microsoft、Googleなどがウェブ開発系のドキュメントをMDNへ集約することになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2017/10/18/documenting-web-together-mdn-web-docs/&quot; title=&quot;Documenting the Web together - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&quot;&gt;Documenting the Web together - Microsoft Edge Dev BlogMicrosoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2017/10/building-unified-documentation-for-web.html&quot; title=&quot;Chromium Blog: Building unified documentation for the web&quot;&gt;Chromium Blog: Building unified documentation for the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/2017/10/w3c-to-work-with-mdn-on-web-platform-documentation/&quot; title=&quot;W3C to work with MDN on Web Platform documentation | W3C Blog&quot;&gt;W3C to work with MDN on Web Platform documentation | W3C Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ckeditor-5:-a-new-era-for-rich-text-editing-|-ckeditor.com&quot;&gt;CKEditor 5: A new era for rich text editing | CKEditor.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ckeditor.com/blog/CKEditor-5-A-new-era-for-rich-text-editing/&quot; title=&quot;CKEditor 5: A new era for rich text editing | CKEditor.com&quot;&gt;ckeditor.com/blog/CKEditor-5-A-new-era-for-rich-text-editing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CKEditor 5の変更点について。&lt;br&gt;
今までのアーキテクチャを一新し、編集するテキストをデータモデルとしてもつことでContentEditable特有の出力を回避できるように。&lt;br&gt;
またエディタ共通の問題についてを扱うEditor Recommendationsサイトの公開など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ckeditor.github.io/editor-recommendations/&quot; title=&quot;Home | editor-recommendations&quot;&gt;Home | editor-recommendations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-62- | -web- | -google-developers&quot;&gt;New in Chrome 62  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/10/nic62&quot; title=&quot;New in Chrome 62  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/10/nic62&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 62の変更点について。&lt;br&gt;
 Network Information API、OpenType Variable Fonts、WebVRのorigin trialの開始など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-100%-correct-way-to-structure-a-react-app-(or-why-there’s-no-such-thing)&quot;&gt;The 100% correct way to structure a React app (or why there’s no such thing)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/the-100-correct-way-to-structure-a-react-app-or-why-theres-no-such-thing-3ede534ef1ed&quot; title=&quot;The 100% correct way to structure a React app (or why there’s no such thing)&quot;&gt;hackernoon.com/the-100-correct-way-to-structure-a-react-app-or-why-theres-no-such-thing-3ede534ef1ed&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactアプリケーションのディレクトリ構造について。&lt;br&gt;
index.js or コンポーネント名.js、階層構造、exportするものについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-security-overview&quot;&gt;Node.js Security Overview&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nemethgergely.com/nodejs-security-overview/&quot; title=&quot;Node.js Security Overview&quot;&gt;nemethgergely.com/nodejs-security-overview/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsと関連するエコスシステムのセキュリティについてをざっくりと。&lt;br&gt;
Core、npm、express、security.txt、関連サービスやツールなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-paypal’s-open-source-cross-domain-javascript-suite&quot;&gt;Introducing PayPal’s open-source cross-domain javascript suite&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bluepnume/introducing-paypals-open-source-cross-domain-javascript-suite-95f991b2731d&quot; title=&quot;Introducing PayPal’s open-source cross-domain javascript suite&quot;&gt;medium.com/@bluepnume/introducing-paypals-open-source-cross-domain-javascript-suite-95f991b2731d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PayPalが使ってるクロスドメイン関係のライブラリまとめ。&lt;br&gt;
&lt;code&gt;postMessage&lt;/code&gt;を使ったやり取り、コンポーネント、Util、同期的なPromiseであるZalgoとsetTimeoutのブロックについて、CORSとiframeについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-imperative-guide-to-forms-in-vue.js-–-logrocket&quot;&gt;An imperative guide to forms in Vue.js – LogRocket&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.logrocket.com/an-imperative-guide-to-forms-in-vue-js-7536bfa374e0&quot; title=&quot;An imperative guide to forms in Vue.js – LogRocket&quot;&gt;blog.logrocket.com/an-imperative-guide-to-forms-in-vue-js-7536bfa374e0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueを使った各種フォーム要素の管理やバリデーションについての紹介記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blinkon-8---tokyo,-japan---youtube&quot;&gt;BlinkOn 8 - Tokyo, Japan - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.youtube.com/playlist?list=PL9ioqAuyl6UK7Z0HHswBM5JgAp-izn_3S&quot; title=&quot;BlinkOn 8 - Tokyo, Japan - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL9ioqAuyl6UK7Z0HHswBM5JgAp-izn_3S&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;blink&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BlinkOn 8の動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/11Y1MK-jVQl_xlhFS8dds_6FsC70jQ_9aOtcWALBiz5k/edit&quot; title=&quot;BlinkOn 8 Information - Google ドキュメント&quot;&gt;BlinkOn 8 Information - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prantlf/nettime:-prints-timings-of-a-http/s-request,-including-dns-lookup,-tls-handshake-etc.&quot;&gt;prantlf/nettime: Prints timings of a HTTP/S request, including DNS lookup, TLS handshake etc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/prantlf/nettime&quot; title=&quot;prantlf/nettime: Prints timings of a HTTP/S request, including DNS lookup, TLS handshake etc.&quot;&gt;github.com/prantlf/nettime&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;network&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;特定のURLに対するDNS LookupやTCPコネクションの時間などネットワークの接続や通信にかかった時間を計測するCLI&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;micro frontends---extending-the-microservice-idea-to-frontend-development&quot;&gt;Micro Frontends - extending the microservice idea to frontend development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://micro-frontends.org/&quot; title=&quot;Micro Frontends - extending the microservice idea to frontend development&quot;&gt;micro-frontends.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;architecture&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;組織&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Micro Frontendsについて。&lt;br&gt;
マイクロサービスアーキテクチャ的な考えをフロントエンドの中にも適応していく話。&lt;br&gt;
機能でのチーム分割、独立したコンポーネントとWeb Components、ナビゲーションなど各トピックごとの実現方法についてを書いていくとのこと&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.thoughtworks.com/radar/techniques/micro-frontends&quot; title=&quot;Micro frontends | Technology Radar | ThoughtWorks&quot;&gt;Micro frontends | Technology Radar | ThoughtWorks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-user-experience-report- | -tools-for-web-developers- | -google-developers&quot;&gt;Chrome User Experience Report  |  Tools for Web Developers  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/&quot; title=&quot;Chrome User Experience Report  |  Tools for Web Developers  |  Google Developers&quot;&gt;developers.google.com/web/tools/chrome-user-experience-report/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;統計&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの使用統計データを元にしたoriginごとのRUMを集めたBigQueryのデータセット。&lt;br&gt;
origin、通信タイプ、デバイスの種類、first_paintのヒストグラムを扱うデータセット。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2017/10/introducing-chrome-user-experience-report.html&quot; title=&quot;Chromium Blog: Introducing the Chrome User Experience Report&quot;&gt;Chromium Blog: Introducing the Chrome User Experience Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;http-archive-(beta)&quot;&gt;HTTP Archive (beta)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://beta.httparchive.org/&quot; title=&quot;HTTP Archive (beta)&quot;&gt;beta.httparchive.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;統計&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;新しいHTTP Archiveのβ版が公開された。&lt;br&gt;
lighthouseを使ったLoad Speed関連の統計データやDesktopとmobileの比較データなどをみることができる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/HTTPArchive/status/922582514010488832&quot; title=&quot;HTTP Archive on Twitter: &amp;amp;amp;#34;Excited to share the open beta for the new HTTP Archive. Check it out at https://t.co/MmiFOKXTrM and let us know what you think! 1/3… https://t.co/ycJ03nMkEj&amp;amp;amp;#34;&quot;&gt;HTTP Archive on Twitter: &amp;#34;Excited to share the open beta for the new HTTP Archive. Check it out at https://t.co/MmiFOKXTrM and let us know what you think! 1/3… https://t.co/ycJ03nMkEj&amp;#34;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dollarshaveclub/es-check:-checks-the-version-of-es-in-javascript-files-with-simple-shell-commands-🏆&quot;&gt;dollarshaveclub/es-check: Checks the version of ES in JavaScript files with simple shell commands 🏆&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dollarshaveclub/es-check&quot; title=&quot;dollarshaveclub/es-check: Checks the version of ES in JavaScript files with simple shell commands 🏆&quot;&gt;github.com/dollarshaveclub/es-check&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Acornを使って特定のECMAScriptバージョンでパースできるかをテストするツール。&lt;br&gt;
コードが構文的にそのECMAScriptバージョンをサポートしてるかチェックできる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kbrsh/wade:-blazing-fast,-1kb-search-for-javascript&quot;&gt;kbrsh/wade: Blazing fast, 1kb search for Javascript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kbrsh/wade&quot; title=&quot;kbrsh/wade: Blazing fast, 1kb search for Javascript&quot;&gt;github.com/kbrsh/wade&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;深さ優先探索で文字列検索を行うライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.kabir.ml/posts/inside-wade.html&quot; title=&quot;Inside Wade | Kabir Shah&quot;&gt;Inside Wade | Kabir Shah&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eyejs---testing-framework&quot;&gt;EyeJS - testing framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eye.js.org/&quot; title=&quot;EyeJS - testing framework&quot;&gt;eye.js.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;nodeとbrowserのモードを持ったテストフレームワーク。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 24 Oct 2017 19:41:38 +0900</pubDate>
        <link>https://jser.info/2017/10/24/ckeditor-5-mdn-web-docs/</link>
        <guid isPermaLink="true">https://jser.info/2017/10/24/ckeditor-5-mdn-web-docs/</guid>
        
        <category>MDN</category>
        
        <category>CKEditor</category>
        
        <category>CORS</category>
        
        <category>domain</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-10-17のJS: Vue 2.5.0、E2Eテストフレームワーク、GlimmerのBinary Template</title>
        <description>&lt;p&gt;JSer.info #353 - Vue 2.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.5.0&quot;&gt;Release v2.5.0 Level E · vuejs/vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point/vue-2-5-released-14bd65bf030b&quot;&gt;Vue 2.5 released – The Vue Point – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/yyx990803/9bdff05e5468a60ced06c29c39114c6b&quot; title=&quot;Vue 2.5 release details&quot;&gt;Vue 2.5 release details&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前から予告(&lt;a href=&quot;https://medium.com/the-vue-point/upcoming-typescript-changes-in-vue-2-5-e9bd7e2ecf08&quot; title=&quot;Upcoming TypeScript Changes in Vue 2.5 – The Vue Point – Medium&quot;&gt;Upcoming TypeScript Changes in Vue 2.5 – The Vue Point – Medium&lt;/a&gt;)されていたTypeScript向けの型が改善されています。&lt;br&gt;
また、React 16で導入された&lt;a href=&quot;https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html#introducing-error-boundaries&quot; title=&quot;Error Boundaries&quot;&gt;Error Boundaries&lt;/a&gt;のようにエラーをキャッチすることができる&lt;code&gt;errorCaptured&lt;/code&gt;というhookが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;E2Eテストフレームワークである&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-released.html&quot; title=&quot;TestCafe v0.18.0&quot;&gt;TestCafe v0.18.0&lt;/a&gt;がリリースされています。&lt;/p&gt;

&lt;p&gt;Angularに対応する&lt;a href=&quot;https://github.com/DevExpress/testcafe-angular-selectors&quot; title=&quot;testcafe-angular-selectors&quot;&gt;testcafe-angular-selectors&lt;/a&gt;の追加や&lt;code&gt;t.getBrowserConsoleMessages&lt;/code&gt;というAPIが追加されています。&lt;br&gt;
&lt;code&gt;t.getBrowserConsoleMessages&lt;/code&gt;はテストを実行したブラウザのコンソールに吐き出された情報を取得することができるAPIで、ライブラリなどが実行時にdeprecated warningを出した情報を取得してテストを落とすなどに利用できます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Cannot access the &amp;#39;db&amp;#39; database. Wrong credentials.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;The setTimeout property is deprecated&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// warning messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[09:12:08] Logged in&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;[09:25:43] Changes saved&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// log messages&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;The application was updated since your last visit.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// info messages&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;同じくE2EテストフレームワークであるCypressがOSSとして公開されています。&lt;br&gt;
CypressはTime Travelなどデバッグのしやすさ、Automatic waitingなどを機能を持つE2Eテストフレームワークです。&lt;br&gt;
また、同じ名前のサービスでもある&lt;a href=&quot;https://www.cypress.io/&quot;&gt;cypress.io&lt;/a&gt;のダッシュボードと連携できます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cypress.io/blog/2017/10/10/cypress-is-now-public-beta/#Key-features&quot; title=&quot;Cypress.io | JavaScript End to End Testing | Cypress is now public beta&quot;&gt;Cypress.io | JavaScript End to End Testing | Cypress is now public beta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress&quot; title=&quot;cypress-io/cypress: Cypress is a test runner that helps you write automated tests in the browser.&quot;&gt;cypress-io/cypress: Cypress is a test runner that helps you write automated tests in the browser.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2017/10/10/glimmer-progress-report.html&quot; title=&quot;Ember.js - Glimmer.js Progress Report&quot;&gt;Ember.js - Glimmer.js Progress Report&lt;/a&gt;という記事では独立して利用できるようになったテンプレートエンジンの&lt;a href=&quot;https://glimmerjs.com/&quot; title=&quot;Glimmer&quot;&gt;Glimmer&lt;/a&gt;の今後について書かれています。&lt;/p&gt;

&lt;p&gt;タグが&lt;code&gt;&amp;lt;Button /&amp;gt;&lt;/code&gt;のようにCapitalスタイルで書くように変更、要素のプロパティと属性を&lt;code&gt;@&lt;/code&gt;で区別できるように、Portalのサポートなど変更点が紹介されています。&lt;br&gt;
その中で、将来的にBinary Templatesと呼ばれる仕組みを導入することについて書かれています。&lt;/p&gt;

&lt;p&gt;Glimmerは、テンプレートのコンパイラとランタイムという2つの役割を持っています。&lt;br&gt;
今回の変更でテンプレートを(最終的に)バイナリとして出力し、ランタイムはバイナリを読み込んでDOMを組み立て表示できるようにするという話が書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/glimmers-optimizing-compiler-chad-hietala/&quot; title=&quot;Glimmer&amp;amp;#39;s Optimizing Compiler | Chad Hietala | Pulse | LinkedIn&quot;&gt;Glimmer&amp;#39;s Optimizing Compiler | Chad Hietala | Pulse | LinkedIn&lt;/a&gt;という記事ではそのGlimmer VMの仕組みについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;現在のGlimmer&lt;/strong&gt; はテンプレートをJSON形式にコンパイルし、ランタイムでOpcodeと定数を表現したテンプレート情報を作り、この情報を元に実際のDOMを構築します。&lt;/p&gt;

&lt;p&gt;テンプレート:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;コンパイラーがテンプレートをJSON形式の中間表現(IR)にします。&lt;br&gt;
（現在のGlimmer VMがコンパイルするのは、このJSON表現までです）&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;open-element&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;h1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;close-element&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ランタイムでJSONを読み込み、Opcodeと定数で表現したテンプレート情報を作ります。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// OpCode&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Program&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConstantsPool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最後にランタイムがテンプレート情報を元にDOMを組み立てます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;APPEND_OPCODES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Op&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OpenElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;op1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;openElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;将来のGlimmer&lt;/strong&gt; のBinary Templateでは、コンパイラがテンプレートをバイナリ形式(&lt;code&gt;.gbx&lt;/code&gt;というファイル形式)へとコンパイルします。&lt;br&gt;
ランタイムはバイナリを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot; title=&quot;ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;で読み込んでテンプレート情報を作り、DOMを組み立てるようになるため、ファイルサイズやパース速度などが改善されるかもしれません。&lt;br&gt;
一方、HTMLやJavaScriptにはバイナリを埋め込むことができないため、バイナリファイルを&lt;code&gt;link rel=prefetch&lt;/code&gt;やHTTP/2 Pushなどで先に読み込む工夫も合わせて必要になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/glimmerjs/glimmer-vm/pull/631&quot; title=&quot;[Breaking] Introduce Bundle Compiler by chadhietala · Pull Request #631 · glimmerjs/glimmer-vm&quot;&gt;[Breaking] Introduce Bundle Compiler by chadhietala · Pull Request #631 · glimmerjs/glimmer-vm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/glimmerjs/glimmer-vm/blob/b87c7c030ebe2f7acad7716674a29d9244381b01/guides/11-glossary.md#opcode&quot;&gt;glimmer-vm/11-glossary.md at b87c7c030ebe2f7acad7716674a29d9244381b01 · glimmerjs/glimmer-vm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;多くのテンプレートエンジンはJSONやJavaScript形式にテンプレートをコンパイルします。&lt;br&gt;
ウェブアプリのサイズが大きくなってきた現在では、JavaScriptファイルのパース時間やファイルサイズは起動時間のボトルネックの一つとなっています。&lt;br&gt;
（特にモバイルデバイスでは影響が大きいです）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/reloading/javascript-start-up-performance-69200f43b201&quot; title=&quot;JavaScript Start-up Performance – reloading – Medium&quot;&gt;JavaScript Start-up Performance – reloading – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これに対して、バイナリ形式のファイルを使うことでパース時間やファイルサイズを小さくすることができます。&lt;br&gt;
このアプローチとして&lt;a href=&quot;http://webassembly.org/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;やECMAScriptのStage 1 ProposalであるBinary ASTなどがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/syg/ecmascript-binary-ast/&quot; title=&quot;syg/ecmascript-binary-ast: Binary AST proposal for ECMAScript&quot;&gt;syg/ecmascript-binary-ast: Binary AST proposal for ECMAScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yoric.github.io/post/binary-ast-engineering-newsletter-1/&quot; title=&quot;JavaScript Binary AST Engineering Newsletter #1 · Il y a du thé renversé au bord de la table !&quot;&gt;JavaScript Binary AST Engineering Newsletter #1 · Il y a du thé renversé au bord de la table !&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GlimmerのBinary Templateはユーザーランドでこのバイナリのアプローチを実践しようとしていると言えると思います。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe-v0.18.0-released---angular-selectors,-using-multiple-reporters,-etc-|-testcafe&quot;&gt;TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-18-0-released.html&quot; title=&quot;TestCafe v0.18.0 Released - Angular Selectors, Using Multiple Reporters, etc | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/testcafe-v0-18-0-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TestCafe v0.18.0リリース。&lt;br&gt;
Angular Selectorのサポート、出力に複数のreporterを指定できるように、FirefoxとChromeでクリーンなプロファイルを使うように、&lt;code&gt;t.getBrowserConsoleMessages&lt;/code&gt;でコンソールに出力された内容を取得できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.6-rc-|-typescript&quot;&gt;Announcing TypeScript 2.6 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/10/12/announcing-typescript-2-6-rc/&quot; title=&quot;Announcing TypeScript 2.6 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2017/10/12/announcing-typescript-2-6-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.6 RCリリース。&lt;br&gt;
&lt;code&gt;--strictFunctionTypes&lt;/code&gt;の追加、&lt;code&gt;// @ts-ignore&lt;/code&gt;でのエラーを抑制するコメントをサポート、&lt;code&gt;--locale&lt;/code&gt;でCLIの多言語対応、&lt;code&gt;tsc --watch&lt;/code&gt;の速度改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What&amp;#x27;s-new-in-TypeScript#typescript-26&quot; title=&quot;What&amp;amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.5.0-level-e-·-vuejs/vue&quot;&gt;Release v2.5.0 Level E · vuejs/vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.5.0&quot; title=&quot;Release v2.5.0 Level E · vuejs/vue&quot;&gt;github.com/vuejs/vue/releases/tag/v2.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 2.5.0リリース。&lt;br&gt;
&lt;code&gt;errorCaptured&lt;/code&gt; hookでのエラーハンドリングができるように、TypeScriptの型を改善(破壊的変更)、&lt;code&gt;v-on&lt;/code&gt;に&lt;code&gt;.exact&lt;/code&gt; modifierを追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/yyx990803/9bdff05e5468a60ced06c29c39114c6b&quot; title=&quot;Vue 2.5 release details&quot;&gt;Vue 2.5 release details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/the-vue-point/upcoming-typescript-changes-in-vue-2-5-e9bd7e2ecf08&quot; title=&quot;Upcoming TypeScript Changes in Vue 2.5 – The Vue Point – Medium&quot;&gt;Upcoming TypeScript Changes in Vue 2.5 – The Vue Point – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v4.9.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v4.9.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2017/10/eslint-v4.9.0-released&quot; title=&quot;ESLint v4.9.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2017/10/eslint-v4.9.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 4.9.0リリース。&lt;br&gt;
&lt;code&gt;--fix&lt;/code&gt;でdry-run実行を行う&lt;code&gt;--fix-dry-run&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eloquent-javascript-third-edition&quot;&gt;Eloquent JavaScript Third Edition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eloquentjavascript.net/3rd_edition/&quot; title=&quot;Eloquent JavaScript Third Edition&quot;&gt;eloquentjavascript.net/3rd_edition/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Eloquent JavaScripの第三版のCrowdfundingが開始された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prosemirror-1.0&quot;&gt;ProseMirror 1.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://marijnhaverbeke.nl/blog/prosemirror-1.html&quot; title=&quot;ProseMirror 1.0&quot;&gt;marijnhaverbeke.nl/blog/prosemirror-1.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ProseMirror 1.0リリース。&lt;br&gt;
ProseMirrorはよりよいWYSIWYG-styleのエディタを実装できるコアライブラリで、ProseMirror自体は特定のドキュメント形式には依存していないことが特徴。&lt;br&gt;
1.xからは安定版とRFCプロセスによる開発を行うという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.7.0-·-webpack/webpack&quot;&gt;Release v3.7.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v3.7.0&quot; title=&quot;Release v3.7.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v3.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack v3.7.0リリース。&lt;br&gt;
&lt;code&gt;CommonChunkPlugin&lt;/code&gt;プラグインに&lt;code&gt;deepChildren&lt;/code&gt;オプションを追加を追加、ES modulesのchunk graphのリファクタリングでパフォーマンスの改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/pull/5764&quot; title=&quot;Added deepChildren support from ArcEglos&amp;amp;amp;#39; pull request by ljcrapo · Pull Request #5764 · webpack/webpack&quot;&gt;Added deepChildren support from ArcEglos&amp;#39; pull request by ljcrapo · Pull Request #5764 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/common-chunk-grandchildren&quot; title=&quot;webpack/examples/common-chunk-grandchildren at master · webpack/webpack&quot;&gt;webpack/examples/common-chunk-grandchildren at master · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---glimmer.js-progress-report&quot;&gt;Ember.js - Glimmer.js Progress Report&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2017/10/10/glimmer-progress-report.html&quot; title=&quot;Ember.js - Glimmer.js Progress Report&quot;&gt;emberjs.com/blog/2017/10/10/glimmer-progress-report.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Glimmer.jsについてのステータスについて。&lt;br&gt;
タグが&lt;code&gt;&amp;lt;Button /&amp;gt;&lt;/code&gt;のようにCapitalスタイルとなるように、要素のプロパティと属性を&lt;code&gt;@&lt;/code&gt;で区別できるように、Portalのサポート。&lt;br&gt;
テンプレートをバイナリにするBinary Templatesのサポート予定やSSRについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/pulse/glimmers-optimizing-compiler-chad-hietala/&quot; title=&quot;Glimmer&amp;amp;amp;#39;s Optimizing Compiler | Chad Hietala | Pulse | LinkedIn&quot;&gt;Glimmer&amp;#39;s Optimizing Compiler | Chad Hietala | Pulse | LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cypress.io-|-javascript-end-to-end-testing-|-cypress-is-now-public-beta&quot;&gt;Cypress.io | JavaScript End to End Testing | Cypress is now public beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cypress.io/blog/2017/10/10/cypress-is-now-public-beta/&quot; title=&quot;Cypress.io | JavaScript End to End Testing | Cypress is now public beta&quot;&gt;www.cypress.io/blog/2017/10/10/cypress-is-now-public-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;E2EテストフレームワークのCypressがオープンソースとして公開された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress&quot; title=&quot;cypress-io/cypress: Cypress is a test runner that helps you write automated tests in the browser.&quot;&gt;cypress-io/cypress: Cypress is a test runner that helps you write automated tests in the browser.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dependency-inversion-with-redux-thunk-&amp;amp;-typescript-–-dave-l.-–-medium&quot;&gt;Dependency Inversion with Redux-Thunk &amp;amp; Typescript – Dave L. – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@david.losert_73564/dependency-inversion-with-redux-thunk-typescript-e09cebabdc1f&quot; title=&quot;Dependency Inversion with Redux-Thunk &amp;amp; Typescript – Dave L. – Medium&quot;&gt;medium.com/@david.losert_73564/dependency-inversion-with-redux-thunk-typescript-e09cebabdc1f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;redux-thunkの&lt;code&gt;thunk.withExtraArgument(deps)&lt;/code&gt;を使って依存関係逆転の原則(DIP)を適応する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#39;s-new-in-devtools-(chrome-63)- | -web- | -google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 63)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/10/devtools-release-notes&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 63)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/10/devtools-release-notes&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 63の開発者ツールについて。&lt;br&gt;
AuditsパネルにSynkDBを使った脆弱性情報の表示、Workspaces 2.0、remote debuggingが複数のクライアントの同時接続に対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v2.5.0&quot; title=&quot;Release 2.5.0 · GoogleChrome/lighthouse&quot;&gt;Release 2.5.0 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-task-running-techniques-–-netscape-–-medium&quot;&gt;NPM Task Running Techniques – Netscape – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/netscape/npm-task-running-techniques-15fe5b697f15&quot; title=&quot;NPM Task Running Techniques – Netscape – Medium&quot;&gt;medium.com/netscape/npm-task-running-techniques-15fe5b697f15&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm-run-allを使ったnpm-run-scriptsの実行管理や&lt;code&gt;wait-on&lt;/code&gt;を使ったサーバが起動するのを待ってからコマンドを処理する方法など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js---a-tale-of-two-bugs&quot;&gt;Node.js - a tale of two bugs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/mikeralphson/nodejs---a-tale-of-two-bugs-18c&quot; title=&quot;Node.js - a tale of two bugs&quot;&gt;dev.to/mikeralphson/nodejs---a-tale-of-two-bugs-18c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsで7.x以降にパフォーマンスリグレッションを見つけ、どのようにデバッグし問題を特定したかについて。&lt;br&gt;
原因としてはV8の&lt;code&gt;Error.captureStackTrace&lt;/code&gt;のリグレッションであり、Node.js 8.7.0で修正される予定。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-productive-developer-guide-to-react&quot;&gt;The productive developer guide to React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/mauricedb/the-productive-developer-guide-to-react-80642342&quot; title=&quot;The productive developer guide to React&quot;&gt;www.slideshare.net/mauricedb/the-productive-developer-guide-to-react-80642342&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使った開発についてのスライド。&lt;br&gt;
入門的な内容でReactの利点/問題点、create-react-appやRedux、ルーティング&lt;br&gt;
などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechrome/confluence:-service-and-api-for-web-api-confluence:-metrics-for-web-platform-health&quot;&gt;GoogleChrome/confluence: Service and API for Web API Confluence: Metrics for web platform health&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/confluence&quot; title=&quot;GoogleChrome/confluence: Service and API for Web API Confluence: Metrics for web platform health&quot;&gt;github.com/GoogleChrome/confluence&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;各ブラウザの特有のAPIの数や削除したAPIの数、Shipに失敗したAPIの数、ベロシティなどを可視化してくれるサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dt-fe/number-precision:-🚀1k-tiny-&amp;amp;-fast-lib-for-doing-addition,-subtraction,-multiplication-and-division-operations-precisely&quot;&gt;dt-fe/number-precision: 🚀1K tiny &amp;amp; fast lib for doing addition, subtraction, multiplication and division operations precisely&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dt-fe/number-precision&quot; title=&quot;dt-fe/number-precision: 🚀1K tiny &amp;amp; fast lib for doing addition, subtraction, multiplication and division operations precisely&quot;&gt;github.com/dt-fe/number-precision&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;浮動小数点数同士の演算を行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spireteam/whitelister:-simple,-basic-filtering-and-validation-tool-for-node.js.&quot;&gt;SpireTeam/whitelister: Simple, basic filtering and validation tool for Node.js.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SpireTeam/whitelister&quot; title=&quot;SpireTeam/whitelister: Simple, basic filtering and validation tool for Node.js.&quot;&gt;github.com/SpireTeam/whitelister&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存がないフィルタリング/バリデーションライブラリ。&lt;br&gt;
デフォルトでは結果をPromiseで返し、&lt;code&gt;sync&lt;/code&gt;メソッドで同期的に処理できる。&lt;br&gt;
ルールに違反した場合はカスタムエラーを投げるようになっている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;planttheidea/fast-equals:-a-blazing-fast-equality-comparison,-either-shallow-or-deep&quot;&gt;planttheidea/fast-equals: A blazing fast equality comparison, either shallow or deep&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/planttheidea/fast-equals&quot; title=&quot;planttheidea/fast-equals: A blazing fast equality comparison, either shallow or deep&quot;&gt;github.com/planttheidea/fast-equals&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;deep-equal、shallow-equalを行うライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;atomic-design-by-brad-frost&quot;&gt;Atomic Design by Brad Frost&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://atomicdesign.bradfrost.com/&quot; title=&quot;Atomic Design by Brad Frost&quot;&gt;atomicdesign.bradfrost.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Atomic Designについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 17 Oct 2017 09:54:58 +0900</pubDate>
        <link>https://jser.info/2017/10/17/vue-2.5.0-e2e-glimmerbinary-template/</link>
        <guid isPermaLink="true">https://jser.info/2017/10/17/vue-2.5.0-e2e-glimmerbinary-template/</guid>
        
        <category>Vue</category>
        
        <category>E2E</category>
        
        <category>Glimmer</category>
        
        <category>Template</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
