<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 07 Aug 2018 10:26:38 +0900</pubDate>
    <lastBuildDate>Tue, 07 Aug 2018 10:26:38 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>2018-08-07のJS: Chrome 69 Beta、React/Vue/PreactのSSR XSSの修正、Preact 8.3.0</title>
        <description>&lt;p&gt;JSer.info #395 - Chrome 69 Betaがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/08/chrome-69-beta-av1-video-decoder-css.html&quot;&gt;Chromium Blog: Chrome 69 Beta: CSS tricks, and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/08/chrome-69-media-updates&quot; title=&quot;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&quot;&gt;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/08/chrome-69-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 69  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 69  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D69&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSS conic gradients、CSS scroll snap、CSS &lt;code&gt;env()&lt;/code&gt; functionのサポートなどCSSの変更が多く行われています。&lt;br&gt;
またOffscreenCanvasや&lt;br&gt;
&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/reportingobserver&quot;&gt;ReportingObserver API&lt;/a&gt;、&lt;a href=&quot;https://github.com/WICG/keyboard-map&quot;&gt;Keyboard Map API&lt;/a&gt;のサポートなどが行われています。&lt;/p&gt;

&lt;p&gt;WebRTCやメディア系のアップデートは&lt;a href=&quot;https://developers.google.com/web/updates/2018/08/chrome-69-media-updates&quot; title=&quot;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&quot;&gt;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&lt;/a&gt;にまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React 16.4.2でSSR（サーバサイドレンダリング）時に発生するXSSが修正されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/08/01/react-v-16-4-2.html&quot;&gt;React v16.4.2: Server-side vulnerability fix - React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あまりないパターンだと思いますが、タグ文字列を含む任意の値を属性値として使っている場合に、SSR時にその属性値がタグとして出力されてしまう問題が修正されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userProvidedData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script&amp;gt;alert(&quot;hi&quot;)&amp;lt;/script&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userProvidedData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;
&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactDOMServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderToString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// &amp;lt;div &amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script&amp;gt;alert(&quot;hi&quot;)&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;VueとPreactの同様の問題が&lt;a href=&quot;https://github.com/facebook/react/pull/13302&quot;&gt;Reactチームによって報告&lt;/a&gt;されており、同時に修正がリリースされています。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;This issue affected Preact (-compat &amp;amp; -render-to-string) as well. It&amp;#39;s been patched in versions 3.18.1 / 3.7.1 of those libraries. Cheers to the React folks for the easy disclosure process. &lt;a href=&quot;https://t.co/pN9nnMBDEC&quot;&gt;https://t.co/pN9nnMBDEC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jason Miller 🦊⚛ (@_developit) &lt;a href=&quot;https://twitter.com/_developit/status/1024748991458762756?ref_src=twsrc%5Etfw&quot;&gt;August 1, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Fix for the same issue has been released in Vue 2.5.17. (only affects SSR). Thanks to the React team for coordinating this with us! &lt;a href=&quot;https://t.co/WnKS79FjfW&quot;&gt;https://t.co/WnKS79FjfW&lt;/a&gt;&lt;/p&gt;&amp;mdash; Vue.js (@vuejs) &lt;a href=&quot;https://twitter.com/vuejs/status/1024754536877973504?ref_src=twsrc%5Etfw&quot;&gt;August 1, 2018&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;Preact 8.3.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/developit/preact/releases/tag/8.3.0&quot;&gt;Release 8.3.0 · developit/preact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/03/29/react-v-16-3.html&quot;&gt;React v16.3.0&lt;/a&gt;で追加された&lt;br&gt;
&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;と&lt;code&gt;getSnapshotBeforeUpdate&lt;/code&gt;に対応しています。&lt;br&gt;
またmoduleを&lt;code&gt;.mjs&lt;/code&gt;で出力するように、&lt;code&gt;setState&lt;/code&gt;の挙動をReactに近づけるように修正などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-8-0-current-node-js&quot;&gt;Node v10.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.8.0/&quot; title=&quot;Node v10.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v10.8.0リリース。&lt;br&gt;
npm 6.2.0が同梱されるようになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v16-4-2-server-side-vulnerability-fix-react-blog&quot;&gt;React v16.4.2: Server-side vulnerability fix - React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/08/01/react-v-16-4-2.html&quot; title=&quot;React v16.4.2: Server-side vulnerability fix - React Blog&quot;&gt;reactjs.org/blog/2018/08/01/react-v-16-4-2.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.4.2リリース。&lt;br&gt;
SSRにおいてユーザー入力をコンポーネントの属性名に渡せるとXSSが発生する問題を修正。&lt;br&gt;
minorごとに同様のpatchリリースが公開されている。&lt;br&gt;
VueとPreactも同様の問題があり、合わせてsecurity fixがリリースされた。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-62-webkit&quot;&gt;Release Notes for Safari Technology Preview 62 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8384/release-notes-for-safari-technology-preview-62/&quot; title=&quot;Release Notes for Safari Technology Preview 62 | WebKit&quot;&gt;webkit.org/blog/8384/release-notes-for-safari-technology-preview-62/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 62リリース。&lt;br&gt;
ITPデバッグモードの試験的追加、&lt;code&gt;JSON.stringify&lt;/code&gt;の修正、HLSストリームのキャッシュを無効化、CSS Gridの&lt;code&gt;gap&lt;/code&gt;プロパティにおける&lt;code&gt;calc&lt;/code&gt;が動くように修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe-v0-21-0-released-testcafe&quot;&gt;TestCafe v0.21.0 Released | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html&quot; title=&quot;TestCafe v0.21.0 Released | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/testcafe-v0-21-0-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TestCafe v0.21.0リリース。&lt;br&gt;
テストページをHTTPSでアクセスできるように、スクリーンショットのパスに変数を使えるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dojo-version-3-0-dojo&quot;&gt;Dojo Version 3.0 | Dojo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dojo.io/blog/2018/07/27/2018-07-27-Dojo-version-3-release/&quot; title=&quot;Dojo Version 3.0 | Dojo&quot;&gt;dojo.io/blog/2018/07/27/2018-07-27-Dojo-version-3-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Dojo 3.0リリース。&lt;br&gt;
パッケージが細かく別れていたものを&lt;code&gt;@dojo/framework&lt;/code&gt;に統合して利用できるように変更。マイグレーションスクリプトも公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dojo/framework/blob/master/docs/V3-Migration-Guide.md&quot; title=&quot;framework/V3-Migration-Guide.md at master · dojo/framework&quot;&gt;framework/V3-Migration-Guide.md at master · dojo/framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-3-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.3.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/08/eslint-v5.3.0-released&quot; title=&quot;ESLint v5.3.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/08/eslint-v5.3.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.3.0リリース。&lt;br&gt;
正規表現に関するルールが2つ、Async Functionに関するルールが2つ追加された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/eb99e18d6cc7c3bf9317&quot; title=&quot;ESLint v5.3.0 - Qiita&quot;&gt;ESLint v5.3.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tyru.hatenablog.com/entry/2018/08/04/220530&quot; title=&quot;Promise のコンストラクタに渡した async function 内で throw しても rejected な Promise は作られない（常に fulfilled になる） - Humanity&quot;&gt;Promise のコンストラクタに渡した async function 内で throw しても rejected な Promise は作られない（常に fulfilled になる） - Humanity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-8-3-0-developit-preact&quot;&gt;Release 8.3.0 · developit/preact&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact/releases/tag/8.3.0&quot; title=&quot;Release 8.3.0 · developit/preact&quot;&gt;github.com/developit/preact/releases/tag/8.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Preact 8.3.0リリース。&lt;br&gt;
&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;と&lt;code&gt;getSnapshotBeforeUpdate&lt;/code&gt;に対応。moduleを&lt;code&gt;.mjs&lt;/code&gt;で出力するように、&lt;code&gt;setState&lt;/code&gt;の挙動をReactに近づけるように修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-69-beta-css-tricks-and-more&quot;&gt;Chromium Blog: Chrome 69 Beta: CSS tricks, and more&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2018/08/chrome-69-beta-av1-video-decoder-css.html&quot; title=&quot;Chromium Blog: Chrome 69 Beta: CSS tricks, and more&quot;&gt;blog.chromium.org/2018/08/chrome-69-beta-av1-video-decoder-css.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 69βリリース。 CSS conic gradients、CSS scroll snap、CSS &lt;code&gt;env()&lt;/code&gt; functionのサポート。&lt;br&gt;
ReportingObserver API、Keyboard Map APIのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/08/chrome-69-media-updates&quot; title=&quot;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&quot;&gt;Audio/Video Updates in Chrome 69  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/08/chrome-69-deps-rems&quot; title=&quot;Deprecations and removals in Chrome 69  |  Web  |  Google Developers&quot;&gt;Deprecations and removals in Chrome 69  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D69&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-js-xss-sst&quot;&gt;Vue.js で XSS を作り込まないために気を付けること - SSTエンジニアブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.securesky-tech.com/entry/2018/08/01/110000&quot; title=&quot;Vue.js で XSS を作り込まないために気を付けること - SSTエンジニアブログ&quot;&gt;techblog.securesky-tech.com/entry/2018/08/01/110000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsでXSSが発生するポイントについての解説。&lt;br&gt;
&lt;code&gt;v-html&lt;/code&gt;、&lt;code&gt;href&lt;/code&gt;のバインディグ、サーバサイドのテンプレートとCSRでのエスケープ漏れなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdoc-qiita&quot;&gt;JSDocで型チェックする - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/shisama/items/016288d38165d542fffd&quot; title=&quot;JSDocで型チェックする - Qiita&quot;&gt;qiita.com/shisama/items/016288d38165d542fffd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの&lt;code&gt;allowJs&lt;/code&gt;と&lt;code&gt;checkJs&lt;/code&gt;を使ったJavaScriptでの型チェックについて。&lt;br&gt;
JSDocで書いた型アノテーションや型定義ファイルを元に型チェックを行う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-cost-of-javascript-in-2018-addy-osmani-medium&quot;&gt;The Cost Of JavaScript In 2018 – Addy Osmani – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4&quot; title=&quot;The Cost Of JavaScript In 2018 – Addy Osmani – Medium&quot;&gt;medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのパフォーマンスコストについての記事。&lt;br&gt;
ファイルサイズ、ロード時間、インタラクティブになるまでの時間、モバイルや低スペックマシンでのコスト。&lt;br&gt;
またパフォーマンスを改善するパターンなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences&quot;&gt;I created the exact same app in React and Vue. Here are the differences.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-in-plain-english/i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences-e9a1ae8077fd&quot; title=&quot;I created the exact same app in React and Vue. Here are the differences.&quot;&gt;medium.com/javascript-in-plain-english/i-created-the-exact-same-app-in-react-and-vue-here-are-the-differences-e9a1ae8077fd&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;VueとReactで同じTodoアプリを作って比較する記事。&lt;br&gt;
処理ごとにそれぞれのやり方を比較して紹介している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;code-splitting-qiita&quot;&gt;ちゃんと理解するCode Splitting - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/seya/items/06b160adb7801ae9e66f&quot; title=&quot;ちゃんと理解するCode Splitting - Qiita&quot;&gt;qiita.com/seya/items/06b160adb7801ae9e66f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpackにおけるCode Splittingの動作の解説。Code Splittingのメリットとデメリット。&lt;br&gt;
Code SplittingするUIのパターンやDynamic Import、&lt;code&gt;webpackPrefetch&lt;/code&gt;オプション、VueやReactでの対応についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;storybook-tutorial&quot;&gt;Storybook Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.learnstorybook.com/&quot; title=&quot;Storybook Tutorial&quot;&gt;www.learnstorybook.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybookのチュートリアル。&lt;br&gt;
React、Angular、Vueに対応したStirybookでのコンポーネント開発やChromaticを使ったビジュアルテストなどについて書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromaticqa.com/&quot; title=&quot;Chromatic visual testing for React&quot;&gt;Chromatic visual testing for React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;frontend-news&quot;&gt;Frontend News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://frontendnews.io/&quot; title=&quot;Frontend News&quot;&gt;frontendnews.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドに関する1週間に1つのTipsについてを更新するサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fusion-js-documentation&quot;&gt;Fusion.js Documentation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fusionjs.com/&quot; title=&quot;Fusion.js Documentation&quot;&gt;fusionjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UberのプラグインベースなBrowser/Node.jsウェブフレームワーク。コアにプラグインの仕組みとDIの仕組みを持ち、ReactやRedux、KoaなどUberがよく利用しているものをプラグインとして導入できる。&lt;br&gt;
webpackやbabelなどをラップするcliがあり、create-react-appのように設定ファイルを触らずに開発ができる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eng.uber.com/fusionjs/&quot; title=&quot;Introducing Fusion.js: A Plugin-based Universal Web Framework&quot;&gt;Introducing Fusion.js: A Plugin-based Universal Web Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sasha240100-between-js-lightweight-javascript-es6-tweening-engine&quot;&gt;sasha240100/between.js: Lightweight JavaScript (ES6) tweening engine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sasha240100/between.js&quot; title=&quot;sasha240100/between.js: Lightweight JavaScript (ES6) tweening engine&quot;&gt;github.com/sasha240100/between.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AからBへ値の変化を扱えるライブラリ。&lt;br&gt;
Tweening animationのような特定のイージングやループでの値の変化を扱う。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Aug 2018 09:52:37 +0900</pubDate>
        <link>https://jser.info/2018/08/07/chrome-69-betareactvuepreactssr-xsspreact-8.3.0/</link>
        <guid isPermaLink="true">https://jser.info/2018/08/07/chrome-69-betareactvuepreactssr-xsspreact-8.3.0/</guid>
        
        <category>chrome</category>
        
        <category>react</category>
        
        <category>vue</category>
        
        <category>preact</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-07-31のJS: TypeScript 3.0、Chrome 68、Vueの内部技術</title>
        <description>&lt;p&gt;JSer.info #394 - TypeScript 3.0が正式にリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/&quot;&gt;Announcing TypeScript 3.0 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What&amp;#x27;s-new-in-TypeScript#typescript-30&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-30&quot;&gt;Breaking Changes · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;monorepoなどで複数パッケージ間のビルド関係などを扱うProject referencesの追加、Generic rest parametersのサポート、Tuple型の改善、&lt;code&gt;unknown&lt;/code&gt;型の追加、Reactの&lt;code&gt;defaultProps&lt;/code&gt;の型のサポートなどが行われています。&lt;/p&gt;

&lt;p&gt;次の記事でも具体的な動作について説明されているので合わせてみてみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/57a0559c45b88b2ae168&quot;&gt;TypeScript 3.0.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 68がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/nic68&quot;&gt;New in Chrome 68  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromereleases.googleblog.com/2018/07/stable-channel-update-for-desktop.html&quot; title=&quot;Chrome Releases: Stable Channel Update for Desktop&quot;&gt;Chrome Releases: Stable Channel Update for Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/06/chrome-68-beta-add-to-home-screen.html&quot; title=&quot;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&quot;&gt;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#browsers.chrome.desktop%3D68&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chrome 68から&lt;code&gt;http://&lt;/code&gt;なサイトの場合にアドレスバーには&amp;quot;Not Secure&amp;quot;（保護されていない通信）の表示がでるようになりました。&lt;br&gt;
逆に&lt;code&gt;https://&lt;/code&gt;のアドレスバーの表示が控えめになっていくなど、徐々にHTTPSがデフォルトとなるような表示に変化していく予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2018/02/a-secure-web-is-here-to-stay.html&quot;&gt;Google Online Security Blog: A secure web is here to stay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/05/evolving-chromes-security-indicators.html&quot;&gt;Chromium Blog: Evolving Chrome&amp;#39;s security indicators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Chrome 68ではPage Lifecycle APIのサポート、&lt;code&gt;customElements.upgrade()&lt;/code&gt;のサポート、Service WorkerにおけるHTTPキャッシュのデフォルトの挙動を変更などが行われています。&lt;/p&gt;

&lt;p&gt;Page Lifecycle API、&lt;code&gt;fetch&lt;/code&gt; APIの&lt;a href=&quot;https://fetch.spec.whatwg.org/#keep-alive-flag&quot;&gt;&lt;code&gt;keepalive&lt;/code&gt;&lt;/a&gt;オプション、&lt;code&gt;navigator.sendBeacon&lt;/code&gt;などが揃ってきたこともあり、将来的にChromeではページを閉じる際に同期的なXHR（ログ送信などに利用されていた）を使えなくする予定があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/LnqwTCiT9Gs/tO0IBO4PAwAJ&quot;&gt;Intent to Implement &amp;amp; Ship: Disallow Sync XHR in Page Dismissal - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&quot;&gt;Page Lifecycle API  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/07/logging-activity-web-beacon-api/&quot;&gt;Logging Activity With The Web Beacon API — Smashing Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://hcysun.me/vue-design/&quot;&gt;Vue技术内幕&lt;/a&gt;というサイトではVue.js本体のコード解説をしています。&lt;br&gt;
中国語で書かれていてまだ書き途中の部分もありますが、ディレクトリ構造、オプションや初期化処理、リアクティブシステムの実装、テンプレートのパースとコンパイルの仕組み、Virtual DOMについてなどに書かれています。&lt;/p&gt;

&lt;p&gt;コード解説なのでコードの動きを中心に解説されていて、特にテンプレートの処理周りの解説はかなり細かい印象です。&lt;br&gt;
Vue.jsのコード自体に興味がある人は読んでみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-1-14-yaml-support-prettier&quot;&gt;Prettier 1.14: YAML Support · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2018/07/29/1.14.0.html&quot; title=&quot;Prettier 1.14: YAML Support · Prettier&quot;&gt;prettier.io/blog/2018/07/29/1.14.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 1.14リリース。&lt;br&gt;
YAMLのサポート、Front matterをサポート、&lt;code&gt;requirePragma&lt;/code&gt;と&lt;code&gt;requirePragma&lt;/code&gt;を各言語でサポート、CJK処理を改善してパフォーマンスの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-v6-1-now-available-typescript-2-9-scroll-positioning-and-more&quot;&gt;Angular v6.1 Now Available — TypeScript 2.9, Scroll Positioning, and more&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/angular-v6-1-now-available-typescript-2-9-scroll-positioning-and-more-9f1c03007bb6&quot; title=&quot;Angular v6.1 Now Available — TypeScript 2.9, Scroll Positioning, and more&quot;&gt;blog.angular.io/angular-v6-1-now-available-typescript-2-9-scroll-positioning-and-more-9f1c03007bb6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular v6.1リリース。&lt;br&gt;
ルーターの&lt;code&gt;scrollPositionRestoration&lt;/code&gt;オプションでスクロール位置の保存に対応、TypeScript 2.9サポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-the-ionic-4-beta-the-official-ionic-blog&quot;&gt;Announcing the Ionic 4 Beta | The Official Ionic Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.ionicframework.com/announcing-ionic-4-beta/&quot; title=&quot;Announcing the Ionic 4 Beta | The Official Ionic Blog&quot;&gt;blog.ionicframework.com/announcing-ionic-4-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;クロスプラットフォームアプリ開発フレームワークのIonic 4 Betaリリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-0-typescript&quot;&gt;Announcing TypeScript 3.0 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/&quot; title=&quot;Announcing TypeScript 3.0 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.0リリース。&lt;br&gt;
Project references、可変長引数にGenerics型パラメータを適応できるように、Tuple型の改善、&lt;code&gt;unknown&lt;/code&gt;型の追加、Reactの&lt;code&gt;defaultProps&lt;/code&gt;の型のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/57a0559c45b88b2ae168&quot; title=&quot;TypeScript 3.0.0-RC 変更点 - Qiita&quot;&gt;TypeScript 3.0.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-68-web-google-developers&quot;&gt;New in Chrome 68  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/nic68&quot; title=&quot;New in Chrome 68  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/07/nic68&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 68リリース。&lt;br&gt;
HTTPなサイトにはNot Secureの表示がでるように。&lt;br&gt;
Page Lifecycle APIのサポート、&lt;code&gt;customElements.upgrade()&lt;/code&gt;のサポート、Service WorkerにおけるHTTPキャッシュのデフォルトの挙動を変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://chromereleases.googleblog.com/2018/07/stable-channel-update-for-desktop.html&quot; title=&quot;Chrome Releases: Stable Channel Update for Desktop&quot;&gt;Chrome Releases: Stable Channel Update for Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2018/06/chrome-68-beta-add-to-home-screen.html&quot; title=&quot;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&quot;&gt;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/06/fresher-sw&quot; title=&quot;Fresher service workers, by default  |  Web  |  Google Developers&quot;&gt;Fresher service workers, by default  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;page-lifecycle-api-web-google-developers&quot;&gt;Page Lifecycle API  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/page-lifecycle-api&quot; title=&quot;Page Lifecycle API  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/07/page-lifecycle-api&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Page Lifecycle APIについての解説。&lt;br&gt;
ウェブページにライフサイクルの概念を導入する。&lt;code&gt;visibilitychange&lt;/code&gt;など既存のイベントや新しく追加された&lt;code&gt;freeze&lt;/code&gt;、&lt;code&gt;resume&lt;/code&gt;などイベントの紹介、ライフサイクルにおけるStateについてを解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-one-year-pwa-retrospective-pinterest-engineering-medium&quot;&gt;A one year PWA retrospective – Pinterest Engineering – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@Pinterest_Engineering/a-one-year-pwa-retrospective-f4a2f4129e05&quot; title=&quot;A one year PWA retrospective – Pinterest Engineering – Medium&quot;&gt;medium.com/@Pinterest_Engineering/a-one-year-pwa-retrospective-f4a2f4129e05&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PinterestのモバイルサイトのPWA化についてのタイムライン。&lt;br&gt;
ログインユーザーからログアウトユーザーへの適応、GestaltとUIレイアウト、bundleサイズについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;time-travel-md&quot;&gt;time-travel.md&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/jasonLaster/1e220992c294a571dd9b59abd084ccf2&quot; title=&quot;time-travel.md&quot;&gt;gist.github.com/jasonLaster/1e220992c294a571dd9b59abd084ccf2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FirefoxのNightlyに入ったWebReplayの使い方や機能について。 一連の操作や状態を保存してブレークポイントからの状態をもどしていったり、リプレイできるデバッグ機能。バグの再現とデバッグなどに利用できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-vs-the-react-context-api&quot;&gt;Redux vs. The React Context API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/context-api-vs-redux/&quot; title=&quot;Redux vs. The React Context API&quot;&gt;daveceddia.com/context-api-vs-redux/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Contextの使い方や動作についての解説。Reduxでのステート管理との違いやContextはReduxを置き換えるものではない点についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;removing-babels-stage-presets-babel&quot;&gt;Removing Babel&amp;#39;s Stage Presets · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets&quot; title=&quot;Removing Babel&amp;#39;s Stage Presets · Babel&quot;&gt;babeljs.io/blog/2018/07/27/removing-babels-stage-presets&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7では&lt;code&gt;babel-preset-stage-0&lt;/code&gt;のようなStage Presetを公開しないことについて。&lt;br&gt;
Stage Presetを削除することにした背景やProposalへのフィードバックについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;logging-activity-with-the-web-beacon-api-smashing-magazine&quot;&gt;Logging Activity With The Web Beacon API — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/07/logging-activity-web-beacon-api/&quot; title=&quot;Logging Activity With The Web Beacon API — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/07/logging-activity-web-beacon-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;navigator.sendBeacon&lt;/code&gt;を使ってページを離脱する前にログを送信する方法について。&lt;br&gt;
またGDPRやDNTの対応について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thedaviddias-front-end-performance-checklist-the-only-front-end-performance-checklist-that-runs-faster-than-the-others&quot;&gt;thedaviddias/Front-End-Performance-Checklist: 🎮 The only Front-End Performance Checklist that runs faster than the others&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thedaviddias/Front-End-Performance-Checklist&quot; title=&quot;thedaviddias/Front-End-Performance-Checklist: 🎮 The only Front-End Performance Checklist that runs faster than the others&quot;&gt;github.com/thedaviddias/Front-End-Performance-Checklist&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドのパフォーマンスチェックリスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;perf-tools-performance-at-master-artifact-project-perf-tools&quot;&gt;perf-tools/performance at master · artifact-project/perf-tools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/artifact-project/perf-tools/tree/master/performance&quot; title=&quot;perf-tools/performance at master · artifact-project/perf-tools&quot;&gt;github.com/artifact-project/perf-tools/tree/master/performance&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;User Timing APIのpolyfillライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cozmo-jsqr-a-pure-javascript-qr-code-reading-library-this-library-takes-in-raw-images-and-will-locate-extract-and-parse-any-qr-code-found-within&quot;&gt;cozmo/jsQR: A pure javascript QR code reading library. This library takes in raw images and will locate, extract and parse any QR code found within.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cozmo/jsQR&quot; title=&quot;cozmo/jsQR: A pure javascript QR code reading library. This library takes in raw images and will locate, extract and parse any QR code found within.&quot;&gt;github.com/cozmo/jsQR&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存がないQRコードリーダライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue&quot;&gt;Vue技术内幕&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://hcysun.me/vue-design/&quot; title=&quot;Vue技术内幕&quot;&gt;hcysun.me/vue-design/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ebook&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsのソースコードを解説する電子書籍。&lt;br&gt;
ディレクトリ構造、オプションや初期化処理、リアクティブシステムの実装、テンプレートのパースとジェネレートの仕組み、Virtual DOMについてなど&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 31 Jul 2018 09:34:34 +0900</pubDate>
        <link>https://jser.info/2018/07/31/typescript-3.0chrome-68vue/</link>
        <guid isPermaLink="true">https://jser.info/2018/07/31/typescript-3.0chrome-68vue/</guid>
        
        <category>typescript</category>
        
        <category>chrome</category>
        
        <category>Vue</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-07-24のJS: Monthly Webの作り方、普通のHTMLの書き方</title>
        <description>&lt;p&gt;JSer.info #393 - &lt;a href=&quot;https://blog.jxck.io/entries/2018-07-18/how-to-logging-monthly-web.html&quot;&gt;Monthly Web の作り方 2018 年版 | blog.jxck.io&lt;/a&gt;という記事では、&lt;a href=&quot;https://mozaic.fm/&quot;&gt;mozaic.fm&lt;/a&gt;というPodcastにおいて毎月公開しているウェブ標準や実装の動向についてどうやって情報を集めるかについて書かれています。&lt;/p&gt;

&lt;p&gt;ブラウザ、WHATWG/W3C、TC39、IETFに関してどのようなスタイルで情報が公開されているかについてまとめられています。&lt;br&gt;
仕様や試験的な実装の動きについて興味がある人は見てみると良さそうです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://hail2u.net/documents/html-best-practices.html&quot;&gt;普通のHTMLの書き方&lt;/a&gt;というドキュメントでは、HTMLの現代的な書き方について書かれています。&lt;/p&gt;

&lt;p&gt;HTMLをメンテナンスしやすい簡潔な書き方、セマンティック、アクセシビリティを考慮した書き方などについてのドキュメントです。&lt;br&gt;
XHTMLやHTML4.01など古い仕様からくる非推奨な書き方をどのように避けるべきかについても書かれています。&lt;br&gt;
それぞれの項目に悪い例と良い例つきで解説されていて、よくある記述の仕様的な解説なども書かれています。&lt;/p&gt;

&lt;p&gt;以前公開されたドキュメントに解説がついたものとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hail2u/html-best-practices&quot;&gt;hail2u/html-best-practices: For writing maintainable and scalable HTML documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;part-2a003bb4b350ea2b&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;以前お知らせしたJSer.info 400回記念イベントの日付が2018年9月22日(土)に決まりました。&lt;br&gt;
2018年8月中にはイベントページを作ると思います。&lt;/p&gt;

&lt;p&gt;また、何かしたい/聞きたいことがある場合は次のIssueに書いてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/102&quot;&gt;JSer.info 400回記念イベント · Issue #102 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-61-webkit&quot;&gt;Release Notes for Safari Technology Preview 61 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8365/release-notes-for-safari-technology-preview-61/&quot; title=&quot;Release Notes for Safari Technology Preview 61 | WebKit&quot;&gt;webkit.org/blog/8365/release-notes-for-safari-technology-preview-61/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 61リリース。&lt;br&gt;
&lt;code&gt;Element.toggleAttribute&lt;/code&gt;のサポート、&lt;code&gt;fetch&lt;/code&gt;の&lt;code&gt;credentials&lt;/code&gt;のデフォルト値を&lt;code&gt;same-origin&lt;/code&gt;へ変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2018-07-20/toggle-attribute.html&quot; title=&quot;Element.toggleAttribute | blog.jxck.io&quot;&gt;Element.toggleAttribute | blog.jxck.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-7-0-current-node-js&quot;&gt;Node v10.7.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.7.0/&quot; title=&quot;Node v10.7.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.7.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.7.0リリース。&lt;br&gt;
&lt;code&gt;console.timeLog()&lt;/code&gt;の実装、&lt;code&gt;process.hrtime.bigint()&lt;/code&gt;の実装、&lt;code&gt;--title&lt;/code&gt;コマンドライン引数でプロセスのタイトルを指定できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-3-released&quot;&gt;Ember.js - Ember 3.3 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/07/16/ember-3-3-released.html&quot; title=&quot;Ember.js - Ember 3.3 Released&quot;&gt;emberjs.com/blog/2018/07/16/ember-3-3-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.3リリース。&lt;br&gt;
jQueryの依存をオプショナルにできるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/releases/tag/v3.3.0&quot; title=&quot;Release v3.3.0 · emberjs/ember.js&quot;&gt;Release v3.3.0 · emberjs/ember.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;support-the-native-graal-packages-by-chadkillingsworth-pull-request-90-google-closure-compiler-npm&quot;&gt;Support the native graal packages by ChadKillingsworth · Pull Request #90 · google/closure-compiler-npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/closure-compiler-npm/pull/90&quot; title=&quot;Support the native graal packages by ChadKillingsworth · Pull Request #90 · google/closure-compiler-npm&quot;&gt;github.com/google/closure-compiler-npm/pull/90&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Java&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Closure Compilerにネイティブバイナリが同梱された(macOSとLinux)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/google/closure-compiler-npm/releases/tag/20180716.0.0&quot; title=&quot;Release 20180716.0.0 · google/closure-compiler-npm&quot;&gt;Release 20180716.0.0 · google/closure-compiler-npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;canjs-5-0&quot;&gt;CanJS 5.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bitovi.com/blog/canjs-5&quot; title=&quot;CanJS 5.0&quot;&gt;www.bitovi.com/blog/canjs-5&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CanJS 5.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;connection-aware-components-max-b-ck-frontend-web-developer&quot;&gt;Connection-Aware Components | Max Böck - Frontend Web Developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mxb.at/blog/connection-aware-components/&quot; title=&quot;Connection-Aware Components | Max Böck - Frontend Web Developer&quot;&gt;mxb.at/blog/connection-aware-components/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Network Information APIや&lt;code&gt;navigator.onLine&lt;/code&gt;などを使った接続情報を考慮したReactコンポーネントの作り方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;compiler-in-javascript-using-antlr-dailyjs-medium&quot;&gt;Compiler in JavaScript using ANTLR – DailyJS – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dailyjs/compiler-in-javascript-using-antlr-9ec53fd2780f&quot; title=&quot;Compiler in JavaScript using ANTLR – DailyJS – Medium&quot;&gt;medium.com/dailyjs/compiler-in-javascript-using-antlr-9ec53fd2780f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ANTLRを使ってコンパイラを作る話。&lt;br&gt;
ECMAScriptを入力にしてPythonのコードを出力するコンパイラをどうのように作るかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/antlr4&quot; title=&quot;antlr4 - npm&quot;&gt;antlr4 - npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;element-toggleattribute-blog-jxck-io&quot;&gt;Element.toggleAttribute | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2018-07-20/toggle-attribute.html&quot; title=&quot;Element.toggleAttribute | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2018-07-20/toggle-attribute.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;属性の値をトグルをする&lt;code&gt;Element.prototype.toggleAttribute&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pwacompat-the-web-app-manifest-for-all-browsers-web-google-developers&quot;&gt;PWACompat: the Web App Manifest for all browsers  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/pwacompat&quot; title=&quot;PWACompat: the Web App Manifest for all browsers  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/07/pwacompat&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web App Manifestから古いSafariやレガシーブラウザ向けにメタ要素を追加するライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/pwacompat&quot; title=&quot;GoogleChromeLabs/pwacompat: PWACompat to bring Web App Manifest to older browsers&quot;&gt;GoogleChromeLabs/pwacompat: PWACompat to bring Web App Manifest to older browsers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;operationalizing-node-js-for-server-side-rendering-airbnb-engineering-data-science-medium&quot;&gt;Operationalizing Node.js for Server Side Rendering – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/operationalizing-node-js-for-server-side-rendering-c5ba718acfc9&quot; title=&quot;Operationalizing Node.js for Server Side Rendering – Airbnb Engineering &amp;amp; Data Science – Medium&quot;&gt;medium.com/airbnb-engineering/operationalizing-node-js-for-server-side-rendering-c5ba718acfc9&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AirbnbにおけるReactのサーバサイドレンダリングのパフォーマンスについての記事。JavaScriptがどのように非同期処理をしているかやボトルネックとなる場所についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;monthly-web-2018-blog-jxck-io&quot;&gt;Monthly Web の作り方 2018 年版 | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2018-07-18/how-to-logging-monthly-web.html&quot; title=&quot;Monthly Web の作り方 2018 年版 | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2018-07-18/how-to-logging-monthly-web.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブ標準に関する仕様や実装の一次情報について。&lt;br&gt;
ブラウザ、WHATWG/W3C、TC39、IETFに関して、それぞれどのような形で情報が公開されているかについてまとめられている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechromelabs-ndb-ndb-is-an-improved-debugging-experience-for-node-js-enabled-by-chrome-devtools&quot;&gt;GoogleChromeLabs/ndb: ndb is an improved debugging experience for Node.js, enabled by Chrome DevTools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/ndb&quot; title=&quot;GoogleChromeLabs/ndb: ndb is an improved debugging experience for Node.js, enabled by Chrome DevTools&quot;&gt;github.com/GoogleChromeLabs/ndb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteerを使ったNode.jsのデバッガーツール。&lt;br&gt;
Node.jsのアプリに対してChrome開発者ツールでデバッグできる。&lt;br&gt;
&lt;code&gt;node --inspect&lt;/code&gt;に比べてコンソールパネルでの実行、ブレークポイントの対応、プロファイル周りなどが追加されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html&quot;&gt;普通のHTMLの書き方&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hail2u.net/documents/html-best-practices.html&quot; title=&quot;普通のHTMLの書き方&quot;&gt;hail2u.net/documents/html-best-practices.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML5&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLの避けるべき非推奨な書き方、簡潔な書き方、セマンティック、アクセシビリティを考慮した書き方などについてのドキュメント。&lt;br&gt;
それぞれの項目に悪い例と良い例つきで解説されている。よくある記述の仕様的な解説なども書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nathan-pax-the-fastest-javascript-bundler-in-the-galaxy&quot;&gt;nathan/pax: The fastest JavaScript bundler in the galaxy.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nathan/pax&quot; title=&quot;nathan/pax: The fastest JavaScript bundler in the galaxy.&quot;&gt;github.com/nathan/pax&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Rust製のJavaScript Bundler&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ramhejazi-draxt-draxt-js-nodelist-like-jquery-like-package-for-file-system-node-js&quot;&gt;ramhejazi/draxt: draxt.js – NodeList-like/jQuery-like package for File System (node.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ramhejazi/draxt&quot; title=&quot;ramhejazi/draxt: draxt.js – NodeList-like/jQuery-like package for File System (node.js)&quot;&gt;github.com/ramhejazi/draxt&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの&lt;code&gt;fs&lt;/code&gt;を配列などのようにメソッドチェーンで操作できるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;imbrn-v8n-javascript-fluent-validation-library&quot;&gt;imbrn/v8n: JavaScript fluent validation library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imbrn/v8n&quot; title=&quot;imbrn/v8n: JavaScript fluent validation library.&quot;&gt;github.com/imbrn/v8n&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;メソッドチェーンでバリデーションルールを書けるライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 24 Jul 2018 09:40:57 +0900</pubDate>
        <link>https://jser.info/2018/07/24/monthly-webhtml/</link>
        <guid isPermaLink="true">https://jser.info/2018/07/24/monthly-webhtml/</guid>
        
        <category>Web</category>
        
        <category>HTML</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-07-17のJS: TypeScript 3.0.0 RC、ウイルスとnpmパッケージ、Property based testing</title>
        <description>&lt;p&gt;JSer.info #392 - TypeScript 3.0 RCが公開されています。&lt;br&gt;
TypeScriptは&lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;ではないため、いわゆるメジャーアップデートとは違いますが、monorepoなど大きなリポジトリ向けの変更が入っています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/07/12/announcing-typescript-3-0-rc/&quot;&gt;Announcing TypeScript 3.0 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/57a0559c45b88b2ae168&quot;&gt;TypeScript 3.0.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#typescript-30&quot;&gt;Breaking Changes · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Project Referencesによりmonorepo内の別パッケージの型定義を参照できるようになり、Build modeによって関連するパッケージのインクリメンタルビルドできます。&lt;br&gt;
今までも&lt;a href=&quot;https://github.com/Quramy/lerna-yarn-workspaces-example&quot;&gt;&lt;code&gt;paths&lt;/code&gt;&lt;/a&gt;を使ってmonorepo内の別パッケージのソースコード(&lt;code&gt;.ts&lt;/code&gt;)を直接参照できていましたが、&lt;a href=&quot;https://github.com/textlint/textlint/issues/440&quot;&gt;module resolution&lt;/a&gt;や&lt;code&gt;outDir&lt;/code&gt;に必要ないものまで含まれるなどの問題がありました。&lt;/p&gt;

&lt;p&gt;TypeScript 3.0ではこれらの問題を解決するメタIssueがあり、フィードバックを募集しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/25600&quot;&gt;tsc --build / Project References Feedback &amp;amp; Discussion · Issue #25600 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他にもTuple型の改善、&lt;code&gt;unknown&lt;/code&gt;型の追加、Reactのdefault propsの型チェックのサポートなどが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;2018年7月12日の18:00〜22:00（JST）に&lt;code&gt;eslint-scope@3.7.2&lt;/code&gt;または&lt;code&gt;eslint-config-eslint@5.0.2&lt;/code&gt;を含むパッケージをインストールすると&lt;code&gt;.npmrc&lt;/code&gt;を盗み取られるウイルス入りのパッケージが公開されていたインシデントがありました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eslint-scope@3.x&lt;/code&gt;に依存していたパッケージには&lt;code&gt;webpack&lt;/code&gt;、&lt;code&gt;eslint@4&lt;/code&gt;、&lt;code&gt;babel-eslint&lt;/code&gt;などがあり影響範囲が広がりました。&lt;/p&gt;

&lt;p&gt;より正確な時間や影響範囲については次の記事を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot; title=&quot;Postmortem for Malicious Packages Published on July 12th, 2018 - ESLint - Pluggable JavaScript linter&quot;&gt;Postmortem for Malicious Packages Published on July 12th, 2018 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/0141657e4478d9cf4614&quot; title=&quot;2018/07/12 に発生したセキュリティ インシデント (eslint-scope@3.7.2) について - Qiita&quot;&gt;2018/07/12 に発生したセキュリティ インシデント (eslint-scope@3.7.2) について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npmによれば4,500のnpmアカウントがこの問題の影響を受けたと推測されており、またこの問題の後にすべてのユーザーのnpmのアクセストークンを無効化しています。そのため、ほとんどのユーザーはもう一度&lt;code&gt;npm login&lt;/code&gt;などをしてアクセストークンを再発行する必要があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175824896885/incident-report-npm-inc-operations-incident-of&quot;&gt;The npm Blog — Incident report: npm, Inc. operations incident of...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;問題のパッケージ（&lt;code&gt;eslint-scope@3.7.2&lt;/code&gt;と&lt;code&gt;eslint-config-eslint@5.0.2&lt;/code&gt;）は既にunpublishされているため、インストールする可能性はほぼありません。しかし、npmのregistryには&lt;a href=&quot;https://www.jfrog.com/confluence/display/RTF/Npm+Registry&quot;&gt;Artifactory&lt;/a&gt;などのミラーを利用しているユーザーもいるため、ミラーのregistryには残っている可能性もあるので確認してください。仮に実行した場合でも&lt;a href=&quot;https://gist.github.com/hzoo/51cb84afdc50b14bffa6c6dc49826b3e&quot;&gt;eslint-scope attack&lt;/a&gt;で解説されているように、実際の攻撃スクリプトがすでに利用できないため影響はほぼありません。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot;&gt;Postmortem for Malicious Packages Published on July 12th, 2018 - ESLint - Pluggable JavaScript linter&lt;/a&gt;の記事では、パッケージのメンテナー側の対策として2要素認証をする、パスワードを使い回さないなどの対策などについて書かれています。&lt;br&gt;
またパッケージの利用する側の対策として&lt;code&gt;pacakge-lock.json&lt;/code&gt;や&lt;code&gt;yarn.lock&lt;/code&gt;などでパッケージのバージョンをロックして今回の問題のようなパッケージを自動的には入らないようにするといったことについて書かれています。&lt;/p&gt;

&lt;p&gt;今回の攻撃に使われたパッケージのインストール時に&lt;code&gt;postinstall&lt;/code&gt;のhookで悪意あるコードを実行するという手法は以前も同様の問題が報告されていました。この問題の対策の一環として&lt;a href=&quot;https://blog.npmjs.org/post/166039777883/protect-your-npm-account-with-two-factor&quot;&gt;read-only tokenや2要素認証&lt;/a&gt;が導入されていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.npmjs.org/post/141702881055/package-install-scripts-vulnerability&quot;&gt;The npm Blog — Package install scripts vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npmの2要素認証はユーザー単位であるため、メンテナーが複数人いる場合は全員が2要素認証を有効化していないと、パッケージ自体は攻撃の影響を受ける可能性があります。&lt;br&gt;
そのため今回の問題をうけてnpmでは、ユーザーではなくパッケージごとに2要素認証を設定可能にすることやTime-limited tokensについての提案などが行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175861857230/two-factor-authentication-protection-for-packages&quot;&gt;The npm Blog — Two-factor authentication protection for packages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://npm.community/t/time-limited-tokens/502&quot;&gt;Time-limited tokens - 💡 ideas - npm forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-v6-2-0&quot;&gt;The npm Blog — v6.2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175871462900/v620&quot; title=&quot;The npm Blog — v6.2.0&quot;&gt;blog.npmjs.org/post/175871462900/v620&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 6.2.0リリース。&lt;br&gt;
&lt;code&gt;npm audit&lt;/code&gt;にawkなどでパースしやすい&lt;code&gt;--parseable&lt;/code&gt;オプションの追加、&lt;code&gt;sign-git-commit&lt;/code&gt;の設定を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-3-0-rc-typescript&quot;&gt;Announcing TypeScript 3.0 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2018/07/12/announcing-typescript-3-0-rc/&quot; title=&quot;Announcing TypeScript 3.0 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2018/07/12/announcing-typescript-3-0-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 3.0 RCリリース。&lt;br&gt;
monorepo向けのサポートがメイン。&lt;br&gt;
Project Referencesによりmonorepo内の別パッケージの型定義を参照できるようになり、Build modeによって関連するパッケージのビルドをインクリメンタルに行える。&lt;br&gt;
tuples型の改善、&lt;code&gt;unknown&lt;/code&gt;型の追加、Reactのdefault propsのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/vvakame/items/57a0559c45b88b2ae168&quot; title=&quot;TypeScript 3.0.0-RC 変更点 - Qiita&quot;&gt;TypeScript 3.0.0-RC 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-6-0-googlechrome-puppeteer&quot;&gt;Release v1.6.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.6.0&quot; title=&quot;Release v1.6.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.6.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer v1.6.0リリース。&lt;br&gt;
&lt;code&gt;page.waitForRequest&lt;/code&gt;と&lt;code&gt;page.waitForResponse&lt;/code&gt;のサポート。&lt;br&gt;
要素が現在のviewportに表示されているかを判定する&lt;code&gt;elementHandle.isIntersectingViewport&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-9-0-a-mari-usque-ad-mare-postcss-autoprefixer&quot;&gt;Release 9.0 “A Mari Usque Ad Mare” · postcss/autoprefixer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer/releases/tag/9.0.0&quot; title=&quot;Release 9.0 “A Mari Usque Ad Mare” · postcss/autoprefixer&quot;&gt;github.com/postcss/autoprefixer/releases/tag/9.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Autoprefixer 9.0、Browserslist 4.0、PostCSS 7.0.0リリース。&lt;br&gt;
Node.js 4のサポート終了など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postmortem-for-malicious-packages-published-on-july-12th-2018-eslint-pluggable-javascript-linter&quot;&gt;Postmortem for Malicious Packages Published on July 12th, 2018 - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&quot; title=&quot;Postmortem for Malicious Packages Published on July 12th, 2018 - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/07/postmortem-for-malicious-package-publishes&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.npmrc&lt;/code&gt;の内容を盗み取る&lt;code&gt;eslint-scope@3.7.2&lt;/code&gt;と&lt;code&gt;eslint-config-eslint@5.0.2&lt;/code&gt;が公開された問題についてのレポート。&lt;br&gt;
パスワードリスト攻撃で取られてたアカウントのtokenから直接publishされ、その後npm incによって全ユーザーのtokenがリセットされた。&lt;br&gt;
攻撃手法や対策について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175824896885/incident-report-npm-inc-operations-incident-of&quot; title=&quot;The npm Blog — Incident report: npm, Inc. operations incident of...&quot;&gt;The npm Blog — Incident report: npm, Inc. operations incident of...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/0141657e4478d9cf4614&quot; title=&quot;2018/07/12 に発生したセキュリティ インシデント (eslint-scope@3.7.2) について - Qiita&quot;&gt;2018/07/12 に発生したセキュリティ インシデント (eslint-scope@3.7.2) について - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;site-isolation-for-web-developers-web-google-developers&quot;&gt;Site Isolation for web developers  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/07/site-isolation&quot; title=&quot;Site Isolation for web developers  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/07/site-isolation&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 67でデフォルト有効化されたSite Isolationについて。&lt;br&gt;
レンダラープロセスを分離することで、サイドチャネル攻撃やオリジン超えの攻撃によって機密情報が盗まれるのを防止する。&lt;br&gt;
CORB、iframeなどにおけるloadとunloadにおける挙動の違いなどについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2018/07/mitigating-spectre-with-site-isolation.html&quot; title=&quot;Google Online Security Blog: Mitigating Spectre with Site Isolation in Chrome&quot;&gt;Google Online Security Blog: Mitigating Spectre with Site Isolation in Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-css-paint-api-css-tricks&quot;&gt;The CSS Paint API | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/the-css-paint-api/&quot; title=&quot;The CSS Paint API | CSS-Tricks&quot;&gt;css-tricks.com/the-css-paint-api/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Paint APIについての記事。&lt;br&gt;
新しいShapeの追加、カスタムプロパティとの連携方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;life-of-a-pixel-2018-google&quot;&gt;Life of a Pixel 2018 - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1boPxbgNrTU0ddsc144rcXayGA_WF53k96imRH8Mp34Y/mobilepresent#slide=id.p&quot; title=&quot;Life of a Pixel 2018 - Google スライド&quot;&gt;docs.google.com/presentation/d/1boPxbgNrTU0ddsc144rcXayGA_WF53k96imRH8Mp34Y/mobilepresent#slide&amp;#x3D;id.p&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeのレンダリングの仕組みについてのスライド。&lt;br&gt;
DOM、Style、Layout、Paint、Rasterization。&lt;br&gt;
変更があったときに再レンダリングやCompositingなどの処理の流れなどについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-js-cheat-sheet&quot;&gt;Vue.js Cheat Sheet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://flaviocopes.com/vue-cheat-sheet/&quot; title=&quot;Vue.js Cheat Sheet&quot;&gt;flaviocopes.com/vue-cheat-sheet/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;チートシート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueチートシート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;browsh&quot;&gt;Browsh&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.brow.sh/&quot; title=&quot;Browsh&quot;&gt;www.brow.sh/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefoxをバックエンド(WebExtensions)に使ったテキストブラウザ。&lt;br&gt;
CSSやWebGL、画像や動画などの描画結果をテキストベースで閲覧できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dubzzz-fast-check-property-based-testing-framework-for-javascript-like-quickcheck-written-in-typescript&quot;&gt;dubzzz/fast-check: Property based testing framework for JavaScript (like QuickCheck) written in TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dubzzz/fast-check&quot; title=&quot;dubzzz/fast-check: Property based testing framework for JavaScript (like QuickCheck) written in TypeScript&quot;&gt;github.com/dubzzz/fast-check&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Property based testingを行うテストライブラリ。&lt;br&gt;
値のパターンや組み合わせを定義してランダムな値を生成してテストできる。&lt;br&gt;
またテストが失敗した際には&lt;code&gt;seed&lt;/code&gt;値を使って同じ組み合わせを再現してテストできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;joshwcomeau-guppy&quot;&gt;joshwcomeau/guppy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/joshwcomeau/guppy&quot; title=&quot;joshwcomeau/guppy&quot;&gt;github.com/joshwcomeau/guppy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React向けのアプリケーション管理、タスク実行を行えるGUIアプリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;teadjs-tead-lighting-the-way-to-simpler-testing&quot;&gt;teadjs/tead: Lighting the way to simpler testing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/teadjs/tead&quot; title=&quot;teadjs/tead: Lighting the way to simpler testing&quot;&gt;github.com/teadjs/tead&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シンプルなテストフレームワーク。&lt;br&gt;
&lt;code&gt;[actual, expected]&lt;/code&gt;の組み合わせを返すだけでテストできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;programming-typescript-making-your-javascript-applications-scale-boris-cherny-9781492037651-amazon-com-books&quot;&gt;Programming TypeScript: Making Your JavaScript Applications Scale: Boris Cherny: 9781492037651: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/1492037656/&quot; title=&quot;Programming TypeScript: Making Your JavaScript Applications Scale: Boris Cherny: 9781492037651: Amazon.com: Books&quot;&gt;www.amazon.com/dp/1492037656/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2019年4月4日発売&lt;br&gt;
TypeScriptでのアプリケーション開発についての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 17 Jul 2018 11:20:17 +0900</pubDate>
        <link>https://jser.info/2018/07/17/typescript-3.0.0-rcnpmproperty-based-testing/</link>
        <guid isPermaLink="true">https://jser.info/2018/07/17/typescript-3.0.0-rcnpmproperty-based-testing/</guid>
        
        <category>TypeScript</category>
        
        <category>eslint</category>
        
        <category>npmjs</category>
        
        <category>testing</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-07-10のJS: Jest 23.3.0 インラインスナップショット、npm.community</title>
        <description>&lt;p&gt;JSer.info #391 - テストフレームワークのJest 23.3.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest/blob/v23.3.0/CHANGELOG.md&quot;&gt;jest/CHANGELOG.md at v23.3.0 · facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jest 23.3.0では&lt;code&gt;toMatchInlineSnapshot&lt;/code&gt;と&lt;code&gt;toThrowErrorMatchingInlineSnapshot&lt;/code&gt;が追加されています。&lt;br&gt;
いままでの&lt;a href=&quot;https://jestjs.io/docs/snapshot-testing.html&quot;&gt;スナップショットテスト&lt;/a&gt;は、スナップショットを外部ファイルとして保存していましたが、このInlineSnapshotはテストを実行するとテストコードを書き換えてコード内にスナップショットを保存します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/98d26f2884ec3280f89c2402ed2a397bd96709e3/68747470733a2f2f692e696d6775722e636f6d2f563651565934332e676966&quot; alt=&quot;`expect(x).toMatchInlineSnapshot()`&quot;&gt;&lt;/p&gt;

&lt;p&gt;このInlineSnapshotは&lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt;で整形されるのが前提となっているのため、プロジェクトにはprettierの依存が必要となっています。&lt;br&gt;
また、JavaScript以外にもTypeScriptでも動作するようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/jest/pull/6380&quot;&gt;[RFC] Inline Snapshots by azz · Pull Request #6380 · facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175587538995/announcing-npmcommunity&quot;&gt;The npm Blog — Announcing npm.community&lt;/a&gt;という記事では今後のnpmのIssueの扱い方について書かれています。&lt;/p&gt;

&lt;p&gt;今までは&lt;a href=&quot;https://github.com/npm/npm&quot;&gt;npm/npm&lt;/a&gt;などのIssueに問題を報告されていましたが、今後は&lt;a href=&quot;https://npm.community/&quot;&gt;npm.community&lt;/a&gt;というフォーラムでIssueを取り扱うことについて書かれています。&lt;br&gt;
そのため、Pull Requestはリポジトリに対して行いますが、Issueはフォーラムの特定のカテゴリに投稿することが推奨されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;お知らせ&lt;/p&gt;

&lt;p&gt;そろそろ400回目が近づいてきたので、400回記念イベントのIssueを立てました。&lt;br&gt;
まだ何をするかやどこでするかも決まっていませんが、意見があればIssue、&lt;a href=&quot;https://twitter.com/search?f=realtime&amp;q=%20%23jserinfo&quot;&gt;Twitter#jserinfo&lt;/a&gt;、&lt;a href=&quot;https://gitter.im/jser/jser.info?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;などにどうぞ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/102&quot;&gt;JSer.info 400回記念イベント · Issue #102 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember-js-ember-3-2-released&quot;&gt;Ember.js - Ember 3.2 Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/blog/2018/06/29/ember-3-2-released.html&quot; title=&quot;Ember.js - Ember 3.2 Released&quot;&gt;emberjs.com/blog/2018/06/29/ember-3-2-released.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Ember 3.2リリース。&lt;br&gt;
テンプレートに&lt;code&gt;let&lt;/code&gt;ヘルパーの追加、&lt;code&gt;Ember.Logger&lt;/code&gt;などが非推奨に&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-changelog-md-at-v23-3-0-facebook-jest&quot;&gt;jest/CHANGELOG.md at v23.3.0 · facebook/jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/jest/blob/v23.3.0/CHANGELOG.md&quot; title=&quot;jest/CHANGELOG.md at v23.3.0 · facebook/jest&quot;&gt;github.com/facebook/jest/blob/v23.3.0/CHANGELOG.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jest 23.3.0リリース。&lt;br&gt;
インラインでスナップショットテストをする&lt;code&gt;toMatchInlineSnapshot&lt;/code&gt;と&lt;code&gt;toThrowErrorMatchingInlineSnapshot&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-6-0-current-node-js&quot;&gt;Node v10.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.6.0/&quot; title=&quot;Node v10.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.6.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.6.0リリース。&lt;br&gt;
&lt;code&gt;require(&amp;#39;dns&amp;#39;).promises&lt;/code&gt;の追加、&lt;code&gt;Atomics.wake&lt;/code&gt;を&lt;code&gt;Atomics.notify&lt;/code&gt;にリネームするECMAScriptの仕様追従など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-announcing-npm-community&quot;&gt;The npm Blog — Announcing npm.community&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.npmjs.org/post/175587538995/announcing-npmcommunity&quot; title=&quot;The npm Blog — Announcing npm.community&quot;&gt;blog.npmjs.org/post/175587538995/announcing-npmcommunity&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npmに関するIssueはDiscourse(npm.community)で扱うようにするという話。&lt;br&gt;
既存のnpmリポジトリに立てられたIssueはアーカイブ化され、新規のIssueはnpm.communityの特定のカテゴリで扱うようになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://npm.community/&quot; title=&quot;npm forum&quot;&gt;npm forum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-1-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.1.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/07/eslint-v5.1.0-released&quot; title=&quot;ESLint v5.1.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/07/eslint-v5.1.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.1.0リリース。&lt;br&gt;
&lt;code&gt;no-catch-shadow&lt;/code&gt;はdeprecatedとなり、代わりに&lt;code&gt;no-shadow&lt;/code&gt;の利用を推奨している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;official-google-webmaster-central-blog-using-page-speed-in-mobile-search-ranking&quot;&gt;Official Google Webmaster Central Blog: Using page speed in mobile search ranking&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2018/01/using-page-speed-in-mobile-search.html&quot; title=&quot;Official Google Webmaster Central Blog: Using page speed in mobile search ranking&quot;&gt;webmasters.googleblog.com/2018/01/using-page-speed-in-mobile-search.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SEO&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Googleのモバイル検索で&amp;quot;Speed Update&amp;quot;が有効化された。&lt;br&gt;
表示が遅いサイトは表示ランキングに影響する仕組み。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report/&quot; title=&quot;Chrome User Experience Report  |  Tools for Web Developers  |  Google Developers&quot;&gt;Chrome User Experience Report  |  Tools for Web Developers  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tips&quot;&gt;フロントエンドの「想定外」に対応する考え方とTipsいくつか | ダーシマ・ヱンヂニヤリング&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://necomesi.jp/blog/tsmd/posts/229&quot; title=&quot;フロントエンドの「想定外」に対応する考え方とTipsいくつか | ダーシマ・ヱンヂニヤリング&quot;&gt;necomesi.jp/blog/tsmd/posts/229&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザの設定により使わない機能を考慮したデザインについて。&lt;br&gt;
デフォルトフォント、Adblock、拡張機能、JavaScriptの無効化、Cookieの無効化/プライベートモードに対する対応などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-is-redux-a-designer-s-guide-smashing-magazine&quot;&gt;What Is Redux: A Designer’s Guide — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/07/redux-designers-guide/&quot; title=&quot;What Is Redux: A Designer’s Guide — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/07/redux-designers-guide/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Designer向けのReduxとはどういうもの？という解説。&lt;br&gt;
データ受け取りどのようにコンポーネントの表示に反映させるかやデータ(State)変更、Optimistic UIなどについて図とともに概念を説明している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;face-api-js-javascript-api-for-face-recognition-in-the-browser-with-tensorflow-js&quot;&gt;face-api.js — JavaScript API for Face Recognition in the Browser with tensorflow.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://itnext.io/face-api-js-javascript-api-for-face-recognition-in-the-browser-with-tensorflow-js-bcc2a6c4cf07&quot; title=&quot;face-api.js — JavaScript API for Face Recognition in the Browser with tensorflow.js&quot;&gt;itnext.io/face-api-js-javascript-api-for-face-recognition-in-the-browser-with-tensorflow-js-bcc2a6c4cf07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;tensorflow.jsベースの顔検出/認識ライブラリであるface-api.jsについての記事。Face DetectionとFace Recognitionの実装方法や使い方についての解説&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/justadudewhohacks/face-api.js&quot; title=&quot;justadudewhohacks/face-api.js: JavaScript API for face detection and face recognition in the browser with tensorflow.js&quot;&gt;justadudewhohacks/face-api.js: JavaScript API for face detection and face recognition in the browser with tensorflow.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimization-auditing-a-deep-dive-into-chromes-dev-console-sitepoint&quot;&gt;Optimization Auditing: A Deep Dive into Chrome&amp;#39;s Dev Console — SitePoint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/optimization-auditing-a-deep-dive-into-chromes-dev-console/&quot; title=&quot;Optimization Auditing: A Deep Dive into Chrome&amp;#39;s Dev Console — SitePoint&quot;&gt;www.sitepoint.com/optimization-auditing-a-deep-dive-into-chromes-dev-console/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeの開発者ツールの機能についての解説。&lt;br&gt;
コンソールやパフォーマンスなどのツールについてスクリーンショットとともに紹介している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-adventure-in-sparse-arrays&quot;&gt;An adventure in sparse arrays&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://remysharp.com/2018/06/26/an-adventure-in-sparse-arrays&quot; title=&quot;An adventure in sparse arrays&quot;&gt;remysharp.com/2018/06/26/an-adventure-in-sparse-arrays&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの配列におけるsparse array(疎の配列)についての記事。 配列に穴があるときに、ループやメソッドなど列挙する際の扱いなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;seva-zaikov-node-js-repl-in-depth&quot;&gt;Seva Zaikov - Node.js REPL in Depth&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.bloomca.me/2018/07/09/nodejs-repl-in-depth.html&quot; title=&quot;Seva Zaikov - Node.js REPL in Depth&quot;&gt;blog.bloomca.me/2018/07/09/nodejs-repl-in-depth.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのREPLについての記事。&lt;br&gt;
REPLで利用できる特別なコマンド、自動的に使えるモジュールやモジュールとして&lt;code&gt;repl&lt;/code&gt;を使う方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;justadudewhohacks-face-api-js-javascript-api-for-face-detection-and-face-recognition-in-the-browser-with-tensorflow-js&quot;&gt;justadudewhohacks/face-api.js: JavaScript API for face detection and face recognition in the browser with tensorflow.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/justadudewhohacks/face-api.js&quot; title=&quot;justadudewhohacks/face-api.js: JavaScript API for face detection and face recognition in the browser with tensorflow.js&quot;&gt;github.com/justadudewhohacks/face-api.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MachineLearning&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;tensorflow.jsを使った顔検出/認識ライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microstates-microstates-js-composable-state-primitives-for-javascript&quot;&gt;microstates/microstates.js: Composable State Primitives for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microstates/microstates.js&quot; title=&quot;microstates/microstates.js: Composable State Primitives for JavaScript&quot;&gt;github.com/microstates/microstates.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Immutableなオブジェクトをデータ型とオブジェクトの指定をして作成するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;retejs-rete-javascript-framework-for-visual-programming-and-creating-node-editor&quot;&gt;retejs/rete: JavaScript framework for visual programming and creating node editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/retejs/rete&quot; title=&quot;retejs/rete: JavaScript framework for visual programming and creating node editor&quot;&gt;github.com/retejs/rete&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;program&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ビジュアルプログラミングのためのフレームワーク。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jamiemccrindle-axax-async-iterator-extensions-for-javascript-e-g-map-reduce-filter-flatmap-etc&quot;&gt;jamiemccrindle/axax: Async Iterator Extensions for JavaScript e.g. map, reduce, filter, flatMap, etc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jamiemccrindle/axax&quot; title=&quot;jamiemccrindle/axax: Async Iterator Extensions for JavaScript e.g. map, reduce, filter, flatMap, etc.&quot;&gt;github.com/jamiemccrindle/axax&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Async Iteratorを使った&lt;code&gt;map&lt;/code&gt;、&lt;code&gt;reduce&lt;/code&gt;、&lt;code&gt;filter&lt;/code&gt;、&lt;code&gt;flatMap&lt;/code&gt;、&lt;code&gt;pipe&lt;/code&gt;などの実装ライブラリ。&lt;br&gt;
RxJSやコレクション系ライブラリと似たメソッドを提供するライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 10 Jul 2018 10:59:55 +0900</pubDate>
        <link>https://jser.info/2018/07/10/jest-23.3.0-npm.community/</link>
        <guid isPermaLink="true">https://jser.info/2018/07/10/jest-23.3.0-npm.community/</guid>
        
        <category>jest</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-07-02のJS: Firefox 61、ECMAScript 2018リリース、CSS4はどこにある？</title>
        <description>&lt;p&gt;JSer.info #390 - Firefox 61がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/61.0/releasenotes/&quot; title=&quot;Firefox — Notes (61.0) — Mozilla&quot;&gt;Firefox — Notes (61.0) — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/61&quot; title=&quot;Firefox 61 for developers - Mozilla | MDN&quot;&gt;Firefox 61 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/61/&quot; title=&quot;Firefox 61 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 61 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TLS 1.3のサポートをデフォルトで有効化、アクセシビリティインスペクタの実装、&lt;br&gt;
&lt;code&gt;PerformanceServerTiming&lt;/code&gt;のサポートなどが行われています。&lt;/p&gt;

&lt;p&gt;AvastやAVGを使っている場合にTLS 1.3での接続に問題が出るケースもあるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1468892&quot;&gt;1468892 - SSL&lt;em&gt;ERROR&lt;/em&gt;RX&lt;em&gt;RECORD&lt;/em&gt;TOO_LONG with Avast intercepting TLS 1.3 connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またFetch APIの&lt;code&gt;credentials&lt;/code&gt;のデフォルト値を&lt;code&gt;omit&lt;/code&gt;から&lt;code&gt;same-origin&lt;/code&gt;に変更する仕様への追従が行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/whatwg/fetch/pull/585&quot;&gt;Make fetch() use &amp;quot;same-origin&amp;quot; credentials by default by annevk · Pull Request #585 · whatwg/fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;same-originに対するXHRのデフォルトの挙動とFetch APIのデフォルトの挙動が異なったため（Fetchではクッキーを渡さないなど）、XHRからFetch APIにシームレスな切り替えができないという混乱を生んでいたため、仕様が変更されました。&lt;/p&gt;

&lt;p&gt;その他では、Touch系のイベントがChromeと同様にデフォルトで&lt;code&gt;passive&lt;/code&gt;となるように変更されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2018/touch-event-listeners-are-now-passive-by-default-making-scrolling-faster-on-mobile/&quot;&gt;モバイル上のスクロールを高速化するため、タッチイベントリスナーが標準でパッシブとなりました | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/01/scrolling-intervention&quot;&gt;Making touch scrolling fast by default  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/news/index.html&quot;&gt;2018年6月27日のEcma GA（総会）&lt;/a&gt;でECMAScript 2018が正式に承認されリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;Standard ECMA-262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptはLiving Standardであるため最新版は&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;GitHub&lt;/a&gt;に公開されており、&lt;a href=&quot;https://tc39.github.io/ecma262/2018/&quot;&gt;ES2018のスナップショット&lt;/a&gt;も公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://asciidwango.github.io/js-primer/basic/ecmascript/&quot; title=&quot;ECMAScript · JavaScriptの入門書 #jsprimer&quot;&gt;ECMAScript · JavaScriptの入門書 #jsprimer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://efcl.info/2018/03/07/ecmascript-usage/&quot;&gt;ECMAScriptの仕様/プロポーザルの調べ方を知る | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2018で入ったプロポーザルについては次の記事などで紹介されています。&lt;br&gt;
Object Rest/Spread Properties、Async Iteration、&lt;code&gt;Promise#finally&lt;/code&gt;、正規表現の拡張などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/front-end-hacking/javascript-whats-new-in-ecmascript-2018-es2018-17ede97f36d5&quot;&gt;JavaScript: What’s new in ECMAScript 2018 (ES2018)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://exploringjs.com/es2018-es2019/index.html&quot;&gt;Exploring ES2018 and ES2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Jtmkk6odggs&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Jtmkk6odggs&quot;&gt;Where is CSS4? When is it coming out?&lt;/a&gt;という動画でCSS4はなぜないのかについてをわかりやすく解説しています。&lt;/p&gt;

&lt;p&gt;CSS3のときに仕様がModuleへ分解され、それぞれのModuleはLevel 3となりました。（全体をCSS3と呼んでいました）&lt;br&gt;
その後のCSSの仕様はModuleごとにLevelをあげる(CSS Selectors Level 4になるなど)、また新しく追加されたModuleはLevel 1から開始するという形になっています。&lt;br&gt;
そのため、CSS4という全体を表すものはないという話がされています。&lt;/p&gt;

&lt;p&gt;次の記事も合わせて読むと良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rachelandrew.co.uk/archives/2016/09/13/why-there-is-no-css4-explaining-css-levels/&quot;&gt;Why there is no CSS4 - explaining CSS Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/Style/2011/CSS-process&quot;&gt;Levels, snapshots, modules…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在のCSS moduleのLevelやステータスについては次のページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/Style/CSS/current-work&quot;&gt;CSS current work &amp;amp; how to participate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-notes-61-0-mozilla&quot;&gt;Firefox — Notes (61.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/61.0/releasenotes/&quot; title=&quot;Firefox — Notes (61.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/61.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 61.0リリース。&lt;br&gt;
TLS 1.3のドラフトサポートをデフォルトで有効化、アクセシビリティインスペクタの実装。&lt;br&gt;
&lt;code&gt;PerformanceServerTiming&lt;/code&gt;のサポート、Fetch APIの&lt;code&gt;credentials&lt;/code&gt;のデフォルト値を&lt;code&gt;same-origin&lt;/code&gt;に変更、WebVRがmacOSで有効化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/61&quot; title=&quot;Firefox 61 for developers - Mozilla | MDN&quot;&gt;Firefox 61 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev-opera-what-s-new-in-chromium-67-and-opera-54&quot;&gt;Dev.Opera — What’s new in Chromium 67 and Opera 54&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-54/&quot; title=&quot;Dev.Opera — What’s new in Chromium 67 and Opera 54&quot;&gt;dev.opera.com/blog/opera-54/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Opera 54 (based on Chromium 67)リリース。&lt;br&gt;
Generic Sensors、Custom Elementが既存のHTML Elementを拡張できるように、Stream APIがtransformをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lighthouse-changelog-md-at-v3-0-0-googlechrome-lighthouse&quot;&gt;lighthouse/changelog.md at v3.0.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/blob/v3.0.0/changelog.md&quot; title=&quot;lighthouse/changelog.md at v3.0.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/blob/v3.0.0/changelog.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 3.0リリース。&lt;br&gt;
レポートUIの変更、それぞれのスコアのWeightの変更、First Contentful Paintの追加、RTTのコスト表示の追加など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/05/lighthouse3&quot; title=&quot;Announcing Lighthouse 3.0  |  Web  |  Google Developers&quot;&gt;Announcing Lighthouse 3.0  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecma-latest-news&quot;&gt;Ecma latest news&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ecma-international.org/news/index.html&quot; title=&quot;Ecma latest news&quot;&gt;www.ecma-international.org/news/index.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMA-262 9th edition - ECMAScript® 2018リリース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/9.0/&quot; title=&quot;ECMAScript® 2018 Language Specification&quot;&gt;ECMAScript® 2018 Language Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;e2e-phantomjs-puppeteer-headless-chrome-lcl-engineers-blog&quot;&gt;E2EテストをPhantomJSから、Puppeteer + Headless Chromeへ移行しました - LCL Engineers&amp;#39; Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://techblog.lclco.com/entry/2018/06/28/080000&quot; title=&quot;E2EテストをPhantomJSから、Puppeteer + Headless Chromeへ移行しました - LCL Engineers&amp;#39; Blog&quot;&gt;techblog.lclco.com/entry/2018/06/28/080000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Capybara + PhantomJSで行っていたテストを、Puppeteer + Headless Chromeに移行していくという話。&lt;br&gt;
Puppeteerの機能紹介やデバッグ方法について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-performance-checklist-itnext&quot;&gt;Web Performance Checklist – ITNEXT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://itnext.io/web-performance-checklist-6b616f3c6f0d&quot; title=&quot;Web Performance Checklist – ITNEXT&quot;&gt;itnext.io/web-performance-checklist-6b616f3c6f0d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブアプリにおけるパフォーマンスのチェック項目のまとめ。&lt;br&gt;
最適化のアプローチについての概要まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-web-components-work-mixpanel-engineering&quot;&gt;Making Web Components Work | Mixpanel Engineering&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://engineering.mixpanel.com/2018/06/12/making-web-components-work/&quot; title=&quot;Making Web Components Work | Mixpanel Engineering&quot;&gt;engineering.mixpanel.com/2018/06/12/making-web-components-work/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsを使って作ったパネルコンポーネントについての記事。&lt;br&gt;
snabbdomを使ったVirtual DOMを使い描画し、Web Conponentsでのステート管理についてなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;audioworklet-design-pattern-web-google-developers&quot;&gt;AudioWorklet Design Pattern  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/06/audio-worklet-design-pattern&quot; title=&quot;AudioWorklet Design Pattern  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/06/audio-worklet-design-pattern&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AudioWorkletのデザインパターンについて。&lt;br&gt;
WebAssembly、SharedArrayBufferとの組み合わせての利用についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-feature-policy-web-google-developers&quot;&gt;Introduction to Feature Policy  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/06/feature-policy&quot; title=&quot;Introduction to Feature Policy  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2018/06/feature-policy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSP&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Feature Policyについて。&lt;br&gt;
CSPはセキュリティのコントールをし、Feature Policyは機能に対してのコントールをする点について。&lt;br&gt;
Feature Policyの指定方法やどのようなときに使うべきかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;where-is-css4-when-is-it-coming-out-youtube&quot;&gt;Where is CSS4? When is it coming out? - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Jtmkk6odggs&quot; title=&quot;Where is CSS4? When is it coming out? - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;Jtmkk6odggs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS4はどこにあるのという問いに対する説明の動画。&lt;br&gt;
CSS3のときに仕様がmoduleに分解され、それぞれのModuleはLevel 3となった。&lt;br&gt;
その後のSpecはModuleごとにLevelをあげ、また新しく追加されたModuleはLevel 1から開始する。&lt;br&gt;
そのためCSS4という全体を表すものはないという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-js-ichigayageek-how-to-explosion-vue-js-project-speaker-deck&quot;&gt;Vue.js プロジェクトの爆発させかた #ichigayageek / How to explosion Vue.js project - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/potato4d/how-to-explosion-vue-dot-js-project&quot; title=&quot;Vue.js プロジェクトの爆発させかた #ichigayageek / How to explosion Vue.js project - Speaker Deck&quot;&gt;speakerdeck.com/potato4d/how-to-explosion-vue-dot-js-project&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueを使ったプロジェクトで遭遇する問題についてのスライド。&lt;br&gt;
規模が大きくなってきたときのステートの管理方法、デザイナーとの協業、既存のウェブアプリへの部分的な適応、別のテンプレートエンジンとの組み合わせなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wg-effectiveness-process_jp-md-at-master-w3c-wg-effectiveness&quot;&gt;wg-effectiveness/process_jp.md at master · w3c/wg-effectiveness&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/w3c/wg-effectiveness/blob/master/process_jp.md&quot; title=&quot;wg-effectiveness/process\_jp.md at master · w3c/wg-effectiveness&quot;&gt;github.com/w3c/wg-effectiveness/blob/master/process_jp.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&amp;quot;忙しい人のためのW3Cプロセス入門&amp;quot;&lt;br&gt;
W3C Process for Busy Peopleの日本語訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kay-is-react-from-zero-a-simple-99-es2015-less-tutorial-for-react&quot;&gt;kay-is/react-from-zero: A simple (99% ES2015 less) tutorial for React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kay-is/react-from-zero&quot; title=&quot;kay-is/react-from-zero: A simple (99% ES2015 less) tutorial for React&quot;&gt;github.com/kay-is/react-from-zero&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを一から学ぶチュートリアル。&lt;br&gt;
ブラウザだけで動くReactのコードを見ながら、Reactについてを解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;swiip-compo-compo-sing-web-compo-nents&quot;&gt;Swiip/compo: 🎼Compo·sing Web Compo·nents&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Swiip/compo&quot; title=&quot;Swiip/compo: 🎼Compo·sing Web Compo·nents&quot;&gt;github.com/Swiip/compo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebComponentでUIを作成するための関数を提供するライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@Swiip_51904/announcing-compo-3ba9e15890a7&quot; title=&quot;Announcing: compo – Matthieu Lux (@Swiip) – Medium&quot;&gt;Announcing: compo – Matthieu Lux (@Swiip) – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mizchi-trans-loader-webpack-less-frontend-with-service-worker&quot;&gt;mizchi/trans-loader: webpack-less frontend with service-worker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mizchi/trans-loader&quot; title=&quot;mizchi/trans-loader: webpack-less frontend with service-worker&quot;&gt;github.com/mizchi/trans-loader&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Service Workerを使ってBabelやTypeScriptでの変換を行うスクリプト。&lt;br&gt;
npmのモジュールをjspm.ioを使ってロードできる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mizchi/items/796a5c392d306a44a918&quot; title=&quot;trans-loader: node/webpack なしではじめるフロントエンドプロジェクト - Qiita&quot;&gt;trans-loader: node/webpack なしではじめるフロントエンドプロジェクト - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jspm.io/&quot; title=&quot;jspm.io - Native ES Modules CDN&quot;&gt;jspm.io - Native ES Modules CDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kitze-jsui-a-powerful-ui-toolkit-for-managing-javascript-apps&quot;&gt;kitze/JSUI: A powerful UI toolkit for managing JavaScript apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kitze/JSUI&quot; title=&quot;kitze/JSUI: A powerful UI toolkit for managing JavaScript apps&quot;&gt;github.com/kitze/JSUI&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GUI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;project&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのプロジェクト管理GUI。&lt;br&gt;
GUIでアプリの作成、プロジェクトのダッシュボード、タスクの実行などができる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 03 Jul 2018 07:40:14 +0900</pubDate>
        <link>https://jser.info/2018/07/03/firefox-61ecmascript-2018css4/</link>
        <guid isPermaLink="true">https://jser.info/2018/07/03/firefox-61ecmascript-2018css4/</guid>
        
        <category>firefox</category>
        
        <category>ECMAScript</category>
        
        <category>CSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-06-25のJS: Node.js 10.5.0 Workerサポート、ESLint 5.0.0、AirbnbとReact Native</title>
        <description>&lt;p&gt;JSer.info #389 - Node.js 10.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.5.0/&quot;&gt;Node v10.5.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この中で&lt;code&gt;--experimental-worker&lt;/code&gt;の試験的なフラグ付きで&lt;code&gt;worker_threads&lt;/code&gt;モジュールが利用できるようになっています。&lt;br&gt;
このWorker Threadsについては次のPRとFAQでまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/20876&quot; title=&quot;worker: initial implementation by addaleax · Pull Request #20876 · nodejs/node&quot;&gt;worker: initial implementation by addaleax · Pull Request #20876 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://gist.github.com/benjamingr/3d5e86e2fb8ae4abe2ab98ffe4758665&quot; title=&quot;workers-faq.md&quot;&gt;workers-faq.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在は、1 Worker Thread = 1 Threadとなっていることや、現在は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel&quot;&gt;MessageChannel&lt;/a&gt; APIに沿った作りとなっていること、Transferring dataや&lt;code&gt;SharedArrayBuffer&lt;/code&gt;をサポートしていることなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ESLint 5.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/blog/2018/06/eslint-v5.0.0-released&quot;&gt;ESLint v5.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ESLint 4.xから具体的な変更点やマイグレーション方法については次のページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-5.0.0&quot;&gt;Migrating to v5.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/mysticatea/items/f34097961bf2827b675d&quot;&gt;ESLint v5.0.0 変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 4のサポート終了、&lt;code&gt;eslint:recommended&lt;/code&gt;の更新、ルールのデフォルトオプションの変更、Lint対象がないときにfatal errorとなるように変更されています。&lt;br&gt;
また、ルールを作成する側のAPIなども一部変更がはいっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c&quot;&gt;React Native at Airbnb – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/a&gt;（&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation&quot;&gt;日本語訳&lt;/a&gt;）という一連の記事ではAirbnbでReact Nativeを使った結果について書かれています。&lt;/p&gt;

&lt;p&gt;Airbnbでは、開発速度、品質、クロスプラットフォーム対応、開発者の体感を良くするのを目的にReact Nativeを使ったアプリを開発した経験と結果について5パートに分けた記事が書かれています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c&quot;&gt;React Native at Airbnb&lt;/a&gt;/&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation/blob/master/1-alt-react-native-at-airbnb.md&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/react-native-at-airbnb-the-technology-dafd0b43838&quot;&gt;React Native at Airbnb: The Technology&lt;/a&gt;
/&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation/blob/master/2-react-native-at-airbnb-the-technology.md&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/building-a-cross-platform-mobile-team-3e1837b40a88&quot;&gt;Building a Cross-Platform Mobile Team&lt;/a&gt;/&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation/blob/master/3-building-a-cross-platform-mobile-team.md&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/sunsetting-react-native-1868ba28e30a&quot;&gt;Sunsetting React Native&lt;/a&gt;/&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation/blob/master/4-sunsetting-react-native.md&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/whats-next-for-mobile-at-airbnb-5e71618576ab&quot;&gt;What’s Next for Mobile at Airbnb&lt;/a&gt;/&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation/blob/master/5-what%E2%80%99s-next-for-mobile-at-airbnb.md&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;React Nativeの技術的解説、上手くいった点、上手くいかなかった点。&lt;br&gt;
クロスプラットフォームアプリ開発の技術的/組織的な難しさなどから、当初の目標を達成できなかったためAirbnbではReact Nativeからネイティブに移行するという決断をした話。&lt;br&gt;
また、Airbnbが採用したReact Nativeのアプローチ（ハイブリッドモデル）からくる問題とアプローチによってはまた異なる結果になるだろうという話。&lt;/p&gt;

&lt;p&gt;最後のパートではAirbnbでの&amp;quot;次の&amp;quot;モバイル開発に向けてのコンポーネントや手法など将来の予定について書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine-v8-release-v6-8&quot;&gt;V8 JavaScript Engine: V8 release v6.8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8project.blogspot.com/2018/06/v8-release-68.html&quot; title=&quot;V8 JavaScript Engine: V8 release v6.8&quot;&gt;v8project.blogspot.com/2018/06/v8-release-68.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v6.8リリース。&lt;br&gt;
関数自身が外の関数の不要な情報を持っていたのをリファクタリングしてメモリの改善。&lt;br&gt;
&lt;code&gt;Object.assign&lt;/code&gt;をC++からJSの実装に変更してパフォーマンス改善、&lt;code&gt;TypedArray.prototype.sort&lt;/code&gt;のパフォーマンス改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v10-5-0-current-node-js&quot;&gt;Node v10.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v10.5.0/&quot; title=&quot;Node v10.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v10.5.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10.5.0リリース。&lt;br&gt;
&lt;code&gt;fs.stat&lt;/code&gt;などがBigIntをサポート、&lt;code&gt;--experimental-worker&lt;/code&gt;のフラグ付きでWorkerのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-59-webkit&quot;&gt;Release Notes for Safari Technology Preview 59 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8332/release-notes-for-safari-technology-preview-59/&quot; title=&quot;Release Notes for Safari Technology Preview 59 | WebKit&quot;&gt;webkit.org/blog/8332/release-notes-for-safari-technology-preview-59/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 59リリース。&lt;br&gt;
ITP 2.0への更新、Web Animationsのデフォルト有効化。&lt;br&gt;
ES Proposalの&lt;code&gt;Symbol.prototype.description&lt;/code&gt;のサポート、BitIntの実装など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/8343/web-animations-in-webkit/&quot; title=&quot;Web Animations in WebKit | WebKit&quot;&gt;Web Animations in WebKit | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v5-0-0-released-eslint-pluggable-javascript-linter&quot;&gt;ESLint v5.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eslint.org/blog/2018/06/eslint-v5.0.0-released&quot; title=&quot;ESLint v5.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2018/06/eslint-v5.0.0-released&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint 5.0.0リリース。&lt;br&gt;
Node.js 4のサポート終了、&lt;code&gt;eslint:recommended&lt;/code&gt;の更新、ルールのデフォルトオプションの変更、Lint対象がないときにfatal errorとなるように。&lt;br&gt;
プラグイン周りの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://eslint.org/docs/user-guide/migrating-to-5.0.0&quot; title=&quot;Migrating to v5.0.0 - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v5.0.0 - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-winston-3-0-0-godaddy-open-source-center&quot;&gt;Announcing winston@3.0.0! — GoDaddy Open Source Center&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://godaddy.github.io/2018/06/12/announcing-winston-3/&quot; title=&quot;Announcing winston@3.0.0! — GoDaddy Open Source Center&quot;&gt;godaddy.github.io/2018/06/12/announcing-winston-3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ロガーライブラリであるwinston 3.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/winstonjs/winston/blob/master/CONTRIBUTING.md#what-makes-up-winston300&quot; title=&quot;winston/CONTRIBUTING.md at master · winstonjs/winston&quot;&gt;winston/CONTRIBUTING.md at master · winstonjs/winston&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/winstonjs/winston/blob/master/CHANGELOG.md#v300--2018-06-12&quot; title=&quot;winston/CHANGELOG.md at master · winstonjs/winston&quot;&gt;winston/CHANGELOG.md at master · winstonjs/winston&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-native-at-airbnb-airbnb-engineering-data-science-medium&quot;&gt;React Native at Airbnb – Airbnb Engineering &amp;amp; Data Science – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c&quot; title=&quot;React Native at Airbnb – Airbnb Engineering &amp;amp; Data Science – Medium&quot;&gt;medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ios&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AirbnbでのReact Nativeについて。&lt;br&gt;
React Nativeの技術的解説、上手くいった点、上手くいかなかった点。&lt;br&gt;
クロスプラットフォームアプリ開発の技術的/組織的な難しさなどから、当初の目標を達成できないためAirbnbではReact Nativeからネイティブに移行するという話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/react-native-jp/react-native-at-airbnb-jp-translation&quot; title=&quot;react-native-jp/react-native-at-airbnb-jp-translation&quot;&gt;react-native-jp/react-native-at-airbnb-jp-translation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;techlunch-javascript-ast-medley-developer-blog&quot;&gt;社内勉強会TechLunchで&amp;quot;JavaScript ASTことはじめ&amp;quot;という発表をしました - Medley Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.medley.jp/entry/2018/06/22/130000&quot; title=&quot;社内勉強会TechLunchで\&amp;quot;JavaScript ASTことはじめ\&amp;quot;という発表をしました - Medley Developer Blog&quot;&gt;developer.medley.jp/entry/2018/06/22/130000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのASTやAST Explorerの使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-jest-mocks-rick-hanlon-ii-medium&quot;&gt;Understanding Jest Mocks – Rick Hanlon II – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@rickhanlonii/understanding-jest-mocks-f0046c68e53c&quot; title=&quot;Understanding Jest Mocks – Rick Hanlon II – Medium&quot;&gt;medium.com/@rickhanlonii/understanding-jest-mocks-f0046c68e53c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jestのmock機能について解析。&lt;br&gt;
&lt;code&gt;jest.mock&lt;/code&gt;、&lt;code&gt;jest.spy&lt;/code&gt;などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-ideal-image-introduction-md-at-master-stereobooster-react-ideal-image&quot;&gt;react-ideal-image/introduction.md at master · stereobooster/react-ideal-image&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stereobooster/react-ideal-image/blob/master/introduction.md&quot; title=&quot;react-ideal-image/introduction.md at master · stereobooster/react-ideal-image&quot;&gt;github.com/stereobooster/react-ideal-image/blob/master/introduction.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;react-ideal-imageの画像表示の実装について。&lt;br&gt;
Lazy Loading、プレースホルダー、LQIP、レスポンシブ、アダプティブな表示方法について解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-critical-request-speaker-deck&quot;&gt;The Critical Request - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/benschwarz/the-critical-request&quot; title=&quot;The Critical Request - Speaker Deck&quot;&gt;speakerdeck.com/benschwarz/the-critical-request&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;First Meaningful Paintまでに必要なリソースへのリクエストと優先度についてのスライド。&lt;br&gt;
preloadなどによるwebfontの読み込み改善について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;automated-dependency-updates-with-renovate&quot;&gt;Automated Dependency Updates with Renovate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/teppeis/automated-dependency-updates-with-renovate-102769685&quot; title=&quot;Automated Dependency Updates with Renovate&quot;&gt;www.slideshare.net/teppeis/automated-dependency-updates-with-renovate-102769685&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;リポジトリが依存するパッケージのバージョン更新をRenovateを使って自動化することについてのスライド。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://renovatebot.com/&quot; title=&quot;Renovate | Automated Dependency Updates&quot;&gt;Renovate | Automated Dependency Updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-refactoring-patterns-with-ngrx-platform-speaker-deck&quot;&gt;Redux Refactoring Patterns with @ngrx/platform - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/gregonnet/platform&quot; title=&quot;Redux Refactoring Patterns with @ngrx/platform - Speaker Deck&quot;&gt;speakerdeck.com/gregonnet/platform&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ngrxについてのスライド。&lt;br&gt;
Reduxのパターン、switch-caseのパターンとFactoryパターン、どのようにStateを扱うかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-web-apps-app-center-mdn&quot;&gt;Progressive web apps - App Center | MDN&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Progressive&quot; title=&quot;Progressive web apps - App Center | MDN&quot;&gt;developer.mozilla.org/en-US/Apps/Progressive&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PWA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNのPWAチュートリアルガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-license-checker-webpack-plugin-webpack-plugin-that-verifies-licenses-of-all-external-dependencies-in-a-compilation-and-outputs-them-to-a-file&quot;&gt;Microsoft/license-checker-webpack-plugin: Webpack plugin that verifies licenses of all external dependencies in a compilation, and outputs them to a file.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/license-checker-webpack-plugin&quot; title=&quot;Microsoft/license-checker-webpack-plugin: Webpack plugin that verifies licenses of all external dependencies in a compilation, and outputs them to a file.&quot;&gt;github.com/Microsoft/license-checker-webpack-plugin&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;license&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;利用してるライブラリのライセンスチェックやまとめたライセンスファイルを生成するwebpackプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simonwep-pickr-flat-simple-and-hackable-color-picker-no-dependencies-no-jquery-compatible-with-all-css-frameworks-e-g-bootstrap-materialize&quot;&gt;Simonwep/pickr: Flat, simple and hackable Color-Picker. No dependencies, no jQuery. Compatible with all CSS Frameworks e.g. Bootstrap, Materialize.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Simonwep/pickr&quot; title=&quot;Simonwep/pickr: Flat, simple and hackable Color-Picker. No dependencies, no jQuery. Compatible with all CSS Frameworks e.g. Bootstrap, Materialize.&quot;&gt;github.com/Simonwep/pickr&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないカラーピッカーライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon-com-mastering-javascript-design-patterns-third-edition-create-scalable-and-reliable-applications-with-advanced-javascript-design-patterns-using-reliable-code-ebook-tomas-corral-kindle-store&quot;&gt;Amazon.com: Mastering JavaScript Design Patterns - Third Edition: Create scalable and reliable applications with advanced JavaScript Design Patterns using reliable code. eBook: Tomas Corral: Kindle Store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/dp/B07D6LQNK3/&quot; title=&quot;Amazon.com: Mastering JavaScript Design Patterns - Third Edition: Create scalable and reliable applications with advanced JavaScript Design Patterns using reliable code. eBook: Tomas Corral: Kindle Store&quot;&gt;www.amazon.com/dp/B07D6LQNK3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2019年1月9日発売&lt;br&gt;
Mastering JavaScript Design Patternsの第3版&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-js-es2016-amazon&quot;&gt;動かしながらさくっと身につく 今こそホンキで覚えるJavaScript[JS/ES2016対応] | 狩野 祐東 |本 | 通販 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4802611242/&quot; title=&quot;動かしながらさくっと身につく 今こそホンキで覚えるJavaScript\[JS/ES2016対応\] | 狩野 祐東 |本 | 通販 | Amazon&quot;&gt;www.amazon.co.jp/dp/4802611242/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年7月17日発売&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jun 2018 08:32:36 +0900</pubDate>
        <link>https://jser.info/2018/06/26/node.js-10.5.0-workereslint-5.0.0airbnbreact-native/</link>
        <guid isPermaLink="true">https://jser.info/2018/06/26/node.js-10.5.0-workereslint-5.0.0airbnbreact-native/</guid>
        
        <category>Node.js</category>
        
        <category>ESLint</category>
        
        <category>ReactNative</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-06-19のJS: Parcel v1.9.0、puppeteer 1.5.0、JavaScript modulesの今後</title>
        <description>&lt;p&gt;JSer.info #388 - bundlerであるParcel v1.9.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@devongovett/parcel-v1-9-0-tree-shaking-2x-faster-watcher-and-more-87f2e1a70f79&quot;&gt;📦 Parcel v1.9.0 — Tree Shaking, 2x faster watcher, and more! 🚀&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parcel-bundler/parcel/blob/master/changelog.md#190---2018-06-14&quot;&gt;parcel/changelog.md at master · parcel-bundler/parcel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今までParcelにはwebpackやrollupのようなTree Shakingが実装されていませんでしたが、Parcel v1.9.0では&lt;code&gt;--experimental-scope-hoisting&lt;/code&gt;のフラグ付きでTree Shakingが実装されています。&lt;br&gt;
これによってbundle後のファイルサイズが小さくなるように改善されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kabuku.co.jp/developers/tree-shaking-in-2018&quot;&gt;2018 年の tree shaking | 株式会社カブク&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またファイル監視の仕組みをBackground workerに移動させるなどして速度の改善、Sassなどで&lt;code&gt;~/tilde&lt;/code&gt;のようなチルダを使ったimportに対応などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Headless ChromeのHigh Level APIライブラリである&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;/a&gt; 1.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.5.0&quot;&gt;Release v1.5.0 · GoogleChrome/puppeteer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Browser Contexts APIが追加され複数の独立したブラウザセッションを扱えるようになっています。また&lt;code&gt;Worker&lt;/code&gt;クラスの追加などが行われています。&lt;/p&gt;

&lt;p&gt;公式サイトがGoogleのもつgTLDである&lt;a href=&quot;https://icannwiki.org/.dev&quot;&gt;.dev&lt;/a&gt;へ移行しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pptr.dev/&quot;&gt;https://pptr.dev/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot;&gt;Using JavaScript modules on the web  |  Web Fundamentals  |  Google Developers&lt;/a&gt;という記事ではJavaScript modules(ES modules)の現状やChromeでの今後の実装について書かれています。&lt;/p&gt;

&lt;p&gt;ブラウザでのscriptとmoduleの挙動の違い、Dynamic importと&lt;code&gt;import.meta&lt;/code&gt;についてといった挙動について。&lt;br&gt;
bundleした場合とのそのままJavaScript modulesとしてロードしたときのパフォーマンスの差、小さくexportしたモジュールの方がキャッシュやツールにおいて有利な点やHTTP/2とPreloadについて。&lt;/p&gt;

&lt;p&gt;また、Chromeで検討が進められているWeb Packaging、Layered API、Workerとの連携などJavaScript modulesに関係する仕様や実装についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;parcel-v1-9-0-tree-shaking-2x-faster-watcher-and-more&quot;&gt;📦 Parcel v1.9.0 — Tree Shaking, 2x faster watcher, and more! 🚀&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@devongovett/parcel-v1-9-0-tree-shaking-2x-faster-watcher-and-more-87f2e1a70f79&quot; title=&quot;📦 Parcel v1.9.0 — Tree Shaking, 2x faster watcher, and more! 🚀&quot;&gt;medium.com/@devongovett/parcel-v1-9-0-tree-shaking-2x-faster-watcher-and-more-87f2e1a70f79&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Parcel v1.9.0リリース。&lt;br&gt;
Tree Shakingの実装、&lt;code&gt;sideEffects&lt;/code&gt;のサポート、ファイル監視の改善、Sassの&lt;code&gt;~/&lt;/code&gt; importのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/parcel-bundler/parcel/blob/master/changelog.md#190---2018-06-14&quot; title=&quot;parcel/changelog.md at master · parcel-bundler/parcel&quot;&gt;parcel/changelog.md at master · parcel-bundler/parcel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-5-0-googlechrome-puppeteer&quot;&gt;Release v1.5.0 · GoogleChrome/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/puppeteer/releases/tag/v1.5.0&quot; title=&quot;Release v1.5.0 · GoogleChrome/puppeteer&quot;&gt;github.com/GoogleChrome/puppeteer/releases/tag/v1.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer v1.5.0リリース。&lt;br&gt;
&lt;code&gt;BrowserContext&lt;/code&gt;が追加され複数の独立したブラウザセッションを扱えるように、&lt;code&gt;Worker&lt;/code&gt;クラスの追加、公式サイトが&lt;code&gt;pptr.dev&lt;/code&gt;となるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-greenkeeper-3-greenkeeper-blog&quot;&gt;Announcing: Greenkeeper 3 – Greenkeeper Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.greenkeeper.io/announcing-greenkeeper-3-1504f5113998&quot; title=&quot;Announcing: Greenkeeper 3 – Greenkeeper Blog&quot;&gt;blog.greenkeeper.io/announcing-greenkeeper-3-1504f5113998&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存パッケージの管理サービスであるGreenkeeper 3リリース。&lt;br&gt;
monorepoのサポート、&lt;code&gt;greenkeeper.json&lt;/code&gt;の設定ファイルをサポート、コミットメッセージのカスタマイズができるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-tsconfig-json-vscode-qiita&quot;&gt;素のJavaScriptプロジェクトにtsconfig.jsonを置いといてVSCodeの便利さを享受する - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/terrierscript/items/a9826bc58d550d1b2764&quot; title=&quot;素のJavaScriptプロジェクトにtsconfig.jsonを置いといてVSCodeの便利さを享受する - Qiita&quot;&gt;qiita.com/terrierscript/items/a9826bc58d550d1b2764&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScritptをJavaScript/JSDocの型チェックツールとして利用する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;keeping-node-js-fast-tools-techniques-and-tips-for-making-high-performance-node-js-servers-smashing-magazine&quot;&gt;Keeping Node.js Fast: Tools, Techniques, And Tips For Making High-Performance Node.js Servers — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2018/06/nodejs-tools-techniques-performance-servers/&quot; title=&quot;Keeping Node.js Fast: Tools, Techniques, And Tips For Making High-Performance Node.js Servers — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2018/06/nodejs-tools-techniques-performance-servers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsサーバの&lt;code&gt;autocannon&lt;/code&gt;を使ったベンチマーク、パフォーマンスのボトルネック調査、メモリリークの調査や改善などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;detecting-autofilled-fields-in-javascript-tommy-brunn-medium&quot;&gt;Detecting autofilled fields in Javascript – Tommy Brunn – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7&quot; title=&quot;Detecting autofilled fields in Javascript – Tommy Brunn – Medium&quot;&gt;medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フォームのautofillを検知する方法について。&lt;br&gt;
autofillにCSS animationをつけて、&lt;code&gt;animtaionstart&lt;/code&gt;で発生を検知する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-akita-a-new-state-management-pattern-for-angular-applications&quot;&gt;🚀 Introducing Akita: A New State Management Pattern for Angular Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://netbasal.com/introducing-akita-a-new-state-management-pattern-for-angular-applications-f2f0fab5a8&quot; title=&quot;🚀 Introducing Akita: A New State Management Pattern for Angular Applications&quot;&gt;netbasal.com/introducing-akita-a-new-state-management-pattern-for-angular-applications-f2f0fab5a8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular向けのステート管理ライブラリであるAkitaについての記事。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/datorama/akita&quot; title=&quot;datorama/akita: 🚀 Simple and Effective State Management for Angular Applications&quot;&gt;datorama/akita: 🚀 Simple and Effective State Management for Angular Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-engine-fundamentals-shapes-and-inline-caches-mathias-bynens&quot;&gt;JavaScript engine fundamentals: Shapes and Inline Caches · Mathias Bynens&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/shapes-ics&quot; title=&quot;JavaScript engine fundamentals: Shapes and Inline Caches · Mathias Bynens&quot;&gt;mathiasbynens.be/notes/shapes-ics&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptエンジンがどのようにJavaScriptのコードを処理しているかについての解説。&lt;br&gt;
それぞれのブラウザがもつJavaScript VMにおける最適化のパイプライン処理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-node-js-qiita&quot;&gt;Node.jsでつくるNode.js - もくじ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/massie_g/items/3ee11c105b4458686bc1&quot; title=&quot;Node.jsでつくるNode.js - もくじ - Qiita&quot;&gt;qiita.com/massie_g/items/3ee11c105b4458686bc1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでJavaScriptのサブセットを作る話。&lt;br&gt;
「RubyでつくるRuby ゼロから学びなおすプログラミング言語入門」のNode.jsでの実装について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-the-almighty-reducer-css-tricks&quot;&gt;Understanding the Almighty Reducer | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/understanding-the-almighty-reducer/&quot; title=&quot;Understanding the Almighty Reducer | CSS-Tricks&quot;&gt;css-tricks.com/understanding-the-almighty-reducer/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Array.prototype.reduce&lt;/code&gt;についての記事。&lt;br&gt;
&lt;code&gt;reduce&lt;/code&gt;メソッドの動作イメージや、動きについて動画を混じえて解説している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-javascript-modules-on-the-web-web-fundamentals-google-developers&quot;&gt;Using JavaScript modules on the web  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/modules&quot; title=&quot;Using JavaScript modules on the web  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/primers/modules&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptモジュールの挙動や実装についての記事。&lt;br&gt;
ブラウザでのscriptとmoduleの挙動の違い、Dynamic importと&lt;code&gt;import.meta&lt;/code&gt;について。&lt;br&gt;
また、bundleした場合とのパフォーマンスの差や小さくexportしたモジュールの方が有利な点やHTTP/2とPreload。&lt;br&gt;
Chromeで検討が進められてるWeb Packaging、Layered API、Workerとの連携などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-codezine&quot;&gt;基礎からはじめるReact入門連載一覧：CodeZine（コードジン）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codezine.jp/article/corner/688&quot; title=&quot;基礎からはじめるReact入門連載一覧：CodeZine（コードジン）&quot;&gt;codezine.jp/article/corner/688&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React入門に関する連載記事。&lt;br&gt;
Reactの基礎からRedux、Storybookなど外部ライブラリなどについて扱っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;isomorphic-es-modules-the-blog-of-ada-rose-cannon&quot;&gt;Isomorphic ES Modules - The blog of Ada Rose Cannon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ada.is/blog/2018/06/15/isomorphic-es-modules/&quot; title=&quot;Isomorphic ES Modules - The blog of Ada Rose Cannon&quot;&gt;ada.is/blog/2018/06/15/isomorphic-es-modules/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ES module形式で配布されているHyperHTMLを使ってブラウザとNode.jsで同じライブラリをそのまま&lt;code&gt;import&lt;/code&gt;してウェブアプリを作成する話。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;netflix-pollyjs-record-replay-and-stub-http-interactions&quot;&gt;Netflix/pollyjs: Record, Replay, and Stub HTTP Interactions.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Netflix/pollyjs&quot; title=&quot;Netflix/pollyjs: Record, Replay, and Stub HTTP Interactions.&quot;&gt;github.com/Netflix/pollyjs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTPリクエスト/レスポンスの記録、再生を行うJavaScriptライブラリとNode.jsサーバ。&lt;br&gt;
またHTTPリクエストのインターセプトして任意のレスポンスを返せる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snipsco-yett-a-small-webpage-library-to-control-the-execution-of-third-party-scripts&quot;&gt;snipsco/yett: 🔐A small webpage library to control the execution of (third party) scripts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/snipsco/yett&quot; title=&quot;snipsco/yett: 🔐A small webpage library to control the execution of (third party) scripts&quot;&gt;github.com/snipsco/yett&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの読み込みをブラックリストで管理するライブラリ。&lt;br&gt;
&lt;code&gt;MutationObserver&lt;/code&gt;や&lt;code&gt;document.create&lt;/code&gt;をhookし、指定URLのJavaScriptを読み込みをブロックできる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecrmnn-collect-js-convenient-and-dependency-free-wrapper-for-working-with-arrays-and-objects&quot;&gt;ecrmnn/collect.js: 💎 Convenient and dependency free wrapper for working with arrays and objects&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ecrmnn/collect.js&quot; title=&quot;ecrmnn/collect.js: 💎 Convenient and dependency free wrapper for working with arrays and objects&quot;&gt;github.com/ecrmnn/collect.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;配列やオブジェクトに対するユーティリティ関数のライブラリ。&lt;br&gt;
Laravelが持つCollectionsをJavaScriptにportしたもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://laravel.com/docs/5.4/collections&quot; title=&quot;Collections - Laravel - The PHP Framework For Web Artisans&quot;&gt;Collections - Laravel - The PHP Framework For Web Artisans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-kindle-amazon&quot;&gt;スラスラ読める JavaScriptふりがなプログラミング | 及川卓也, リブロワークス | 工学 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B07DR76HSG/&quot; title=&quot;スラスラ読める JavaScriptふりがなプログラミング | 及川卓也, リブロワークス | 工学 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B07DR76HSG/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2018年6月22日発売&lt;br&gt;
JavaScriptのコードにルビでふりがなをつけて解説する書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 19 Jun 2018 10:43:49 +0900</pubDate>
        <link>https://jser.info/2018/06/19/parcel-v1.9.0puppeteer-1.5.0javascript-modules/</link>
        <guid isPermaLink="true">https://jser.info/2018/06/19/parcel-v1.9.0puppeteer-1.5.0javascript-modules/</guid>
        
        <category>Parcel</category>
        
        <category>Chrome</category>
        
        <category>puppeteer</category>
        
        <category>javascript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2018-06-12のJS: MobX 5.0.0、PhantomJS EOL、Node.jsにおける設計ミス</title>
        <description>&lt;p&gt;JSer.info #387 - ステート管理ライブラリのMobX 5.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/blob/master/CHANGELOG.md#500&quot;&gt;mobx/CHANGELOG.md at master · mobxjs/mobx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MobX 5.0.0ではObservableの実装にデフォルトでES &lt;code&gt;Proxy&lt;/code&gt;が利用されるようになりました。&lt;br&gt;
これによりgetterではできなかった、宣言時になかったプロパティを動的に追加した場合も検知できるようになっています。&lt;br&gt;
詳しくは次の記事でも解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lealog.hateblo.jp/entry/2018/06/08/105219&quot;&gt;MobX 5.0.0 について - console.lealog();&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また&lt;code&gt;Proxy&lt;/code&gt;をサポートしてないブラウザ(IE)はサポート対象外となり、npmで配布されるパッケージもES2015のコードベースで配布されるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy - JavaScript | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IEなどでも利用したい場合は&lt;a href=&quot;https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da&quot;&gt;MobX 4&lt;/a&gt;を利用することが推奨されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;QtWebKitベースのヘッドレスブラウザである&lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;のリポジトリがアーカイブ化されました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs&quot;&gt;&lt;img src=&quot;https://jser.info/uploads/media/2018/06/11-1528724137.png&quot; alt=&quot;ariya/phantomjs&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs&quot;&gt;ariya/phantomjs: Scriptable Headless Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs/issues/15344&quot;&gt;Archiving the project: suspending the development · Issue #15344 · ariya/phantomjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Securityリリースの予定なども特にないことから事実上のEOL(End Of Life)になっています。&lt;/p&gt;

&lt;p&gt;次の記事で詳細を書いています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2018/06/11/phantomjs-ended/&quot;&gt;PhantomJSの開発が終了しリポジトリがアーカイブ化された - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=M3BM9TB-8yA&amp;feature=youtu.be&quot;&gt;10 Things I Regret About Node.js - Ryan Dahl - JSConf EU 2018 - YouTube&lt;/a&gt;という発表ではNode.jsのオリジナルの作者である&lt;a href=&quot;https://github.com/ry&quot;&gt;@ry (Ryan Dahl)&lt;/a&gt;によるNode.js初期におけるデザインミスついての発表がされています。&lt;br&gt;
また現在開発中のTypeScriptのruntimeとして作成してる&lt;a href=&quot;https://github.com/ry/deno&quot;&gt;Deno&lt;/a&gt;の紹介も行われています。&lt;br&gt;
Denoのゴールはsandbox firstのセキュリティ、モジュールシステムの簡素化、ブラウザとの互換性などがあげられています。&lt;/p&gt;

&lt;p&gt;次の記事で補足も合わせた抜粋訳が公開されているので見てみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2018/06/07/080335&quot;&gt;Node.js における設計ミス By Ryan Dahl - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-technology-preview-58-with-safari-12-features-is-now-available-webkit&quot;&gt;Safari Technology Preview 58, with Safari 12 Features, is Now Available | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8327/safari-technology-preview-58-with-safari-12-features-is-now-available/&quot; title=&quot;Safari Technology Preview 58, with Safari 12 Features, is Now Available | WebKit&quot;&gt;webkit.org/blog/8327/safari-technology-preview-58-with-safari-12-features-is-now-available/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 58リリース。&lt;br&gt;
Safari 12相当の機能が含まれている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/safari/whats-new/&quot; title=&quot;What’s New in Safari - Apple Developer&quot;&gt;What’s New in Safari - Apple Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-1-0-npm-npm&quot;&gt;Release v6.1.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v6.1.0&quot; title=&quot;Release v6.1.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v6.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 6.1.0リリース。&lt;br&gt;
&lt;code&gt;npm audit fix&lt;/code&gt;の追加、&lt;code&gt;npm init &amp;lt;pkg&amp;gt;&lt;/code&gt;がgit urlをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-68-beta-add-to-home-screen-payment-handler-page-lifecycle&quot;&gt;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2018/06/chrome-68-beta-add-to-home-screen.html&quot; title=&quot;Chromium Blog: Chrome 68 Beta: add to home screen, payment handler, page lifecycle&quot;&gt;blog.chromium.org/2018/06/chrome-68-beta-add-to-home-screen.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 68βリリース。&lt;br&gt;
Payment Handler API、Page Lifecycle API、&lt;code&gt;customElements.upgrade()&lt;/code&gt;、 Keyboard lock APIのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mobx-changelog-md-at-master-mobxjs-mobx&quot;&gt;mobx/CHANGELOG.md at master · mobxjs/mobx&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/blob/master/CHANGELOG.md#500&quot; title=&quot;mobx/CHANGELOG.md at master · mobxjs/mobx&quot;&gt;github.com/mobxjs/mobx/blob/master/CHANGELOG.md#500&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MobX 5.0.0リリース。&lt;br&gt;
Observableに&lt;code&gt;Proxy&lt;/code&gt;を利用するようになり、IEなどProxyがない環境は非サポートに。&lt;br&gt;
また、公開されるパッケージのコード自体もES2015となった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-inferno-v5-1-0-infernojs-inferno&quot;&gt;Release Inferno v5.1.0 · infernojs/inferno&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/infernojs/inferno/releases/tag/v5.1.0&quot; title=&quot;Release Inferno v5.1.0 · infernojs/inferno&quot;&gt;github.com/infernojs/inferno/releases/tag/v5.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Inferno v5.1.0 リリース。&lt;br&gt;
&lt;code&gt;Inferno-devtools&lt;/code&gt;の書き直しなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yarn-import-now-uses-package-lock-json-yarn-blog&quot;&gt;Yarn import now uses package-lock.json | Yarn Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2018/06/04/yarn-import-package-lock/&quot; title=&quot;Yarn import now uses package-lock.json | Yarn Blog&quot;&gt;yarnpkg.com/blog/2018/06/04/yarn-import-package-lock/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;yarn 1.7.0で&lt;code&gt;package-lock.json&lt;/code&gt;を&lt;code&gt;yarn.lock&lt;/code&gt;としてimportできるようになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yarnpkg/yarn/issues/5654&quot; title=&quot;Competing lockfiles create poor UX · Issue #5654 · yarnpkg/yarn&quot;&gt;Competing lockfiles create poor UX · Issue #5654 · yarnpkg/yarn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;you-probably-dont-need-derived-state-react-blog&quot;&gt;You Probably Don&amp;#39;t Need Derived State - React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&quot; title=&quot;You Probably Don&amp;#39;t Need Derived State - React Blog&quot;&gt;reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 16.3で導入された&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;のケーススタディ。&lt;br&gt;
&lt;code&gt;getDerivedStateFromProps&lt;/code&gt;はpropsの変化を元にstateを更新するために利用する。どのような時に利用するべきか、しないべきかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow-typescript&quot;&gt;Flow から TypeScript に移行しました - てくすた&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://texta.pixta.jp/entry/2018/06/07/120000&quot; title=&quot;Flow から TypeScript に移行しました - てくすた&quot;&gt;texta.pixta.jp/entry/2018/06/07/120000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;FlowからTypeScriptへの移行について。&lt;br&gt;
移行の理由、移行の手順やツールの組み合わせについてなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;assessing-loading-performance-in-real-life-with-navigation-and-resource-timing-web-fundamentals-google-developers&quot;&gt;Assessing Loading Performance in Real Life with Navigation and Resource Timing  |  Web Fundamentals  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/&quot; title=&quot;Assessing Loading Performance in Real Life with Navigation and Resource Timing  |  Web Fundamentals  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/navigation-and-resource-timing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Navigation TimingとResource Timingについて。&lt;br&gt;
それぞれのAPIの使い方や取得できるデータの意味、クロスオリジンのリソースの&lt;code&gt;Timing-Allow-Origin&lt;/code&gt;ヘッダによる対応。&lt;br&gt;
またRUMのデータとして集める場合のデータの送信方法として&lt;code&gt;navigation.sendBeacon&lt;/code&gt;の使い方やfailbackについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pjax-design-report&quot;&gt;これからpjaxを使う人に知っておいてほしいこと – Design Report – デザインレポート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glitter-style.jp/labo/web-resource/master-the-pjax/&quot; title=&quot;これからpjaxを使う人に知っておいてほしいこと – Design Report – デザインレポート&quot;&gt;glitter-style.jp/labo/web-resource/master-the-pjax/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ajax&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pjaxについての連載記事。&lt;br&gt;
pjaxの動作原理や利点、代表的な実装方法、利用する際の注意点、イベント管理、メモリリークの問題など、設計について書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;almin-0-17-execute-react-context-web-scratch&quot;&gt;Almin 0.17リリース – executeの型付け、新しいReact Contextのサポート | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://efcl.info/2018/06/11/almin-0.17/&quot; title=&quot;Almin 0.17リリース – executeの型付け、新しいReact Contextのサポート | Web Scratch&quot;&gt;efcl.info/2018/06/11/almin-0.17/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;almin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Almin 0.17リリース。&lt;br&gt;
TypeScriptで&lt;code&gt;execute&lt;/code&gt;の引数の型チェックができるように、React Context APIを使ったモジュールの公開、ファイルサイズの削減など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deprecating-cssnext&quot;&gt;Deprecating cssnext&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://moox.io/blog/deprecating-cssnext/&quot; title=&quot;Deprecating cssnext&quot;&gt;moox.io/blog/deprecating-cssnext/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cssnext&lt;/code&gt;がdeprecatedとなり、&lt;code&gt;postcss-preset-env&lt;/code&gt;の利用が推奨されるようになった。&lt;br&gt;
マイグレーション方法や違いについてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://preset-env.cssdb.org/&quot; title=&quot;postcss-preset-env&quot;&gt;postcss-preset-env&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/csstools/postcss-preset-env/issues/32&quot; title=&quot;A notice to cssnext users · Issue #32 · csstools/postcss-preset-env&quot;&gt;A notice to cssnext users · Issue #32 · csstools/postcss-preset-env&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2018-tree-shaking&quot;&gt;2018 年の tree shaking | 株式会社カブク&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kabuku.co.jp/developers/tree-shaking-in-2018&quot; title=&quot;2018 年の tree shaking | 株式会社カブク&quot;&gt;www.kabuku.co.jp/developers/tree-shaking-in-2018&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tree Shakingと呼ばれるビルドの最適化がどのように行われるかについて。 webpackにおいてES modulesで書いてもTree Shankingされない場合について。 またRxJsでの例など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;phantomjs-jser-info&quot;&gt;PhantomJSの開発が終了しリポジトリがアーカイブ化された - JSer.info&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/2018/06/11/phantomjs-ended/&quot; title=&quot;PhantomJSの開発が終了しリポジトリがアーカイブ化された - JSer.info&quot;&gt;jser.info/2018/06/11/phantomjs-ended/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PhantomJSのリポジトリがArchived(read-only)になり正式に開発が終了となった。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;10-things-i-regret-about-node-js-ryan-dahl-jsconf-eu-2018-youtube&quot;&gt;10 Things I Regret About Node.js - Ryan Dahl - JSConf EU 2018 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=M3BM9TB-8yA&amp;feature=youtu.be&quot; title=&quot;10 Things I Regret About Node.js - Ryan Dahl - JSConf EU 2018 - YouTube&quot;&gt;www.youtube.com/watch?v&amp;#x3D;M3BM9TB-8yA&amp;amp;feature&amp;#x3D;youtu.be&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの作成者であるryによるNode.js初期のデザインミスついての発表。&lt;br&gt;
またTypeScriptのruntimeとして作成してるDenoの紹介。&lt;br&gt;
Denoのゴールはsandbox firstのセキュリティ、モジュールシステムの簡素化、ブラウザとの互換性など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2018/06/07/080335&quot; title=&quot;Node.js における設計ミス By Ryan Dahl - from scratch&quot;&gt;Node.js における設計ミス By Ryan Dahl - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconf-eu-2018-youtube-youtube&quot;&gt;JSConf EU 2018 - YouTube - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL37ZVnwpeshG2YXJkun_lyNTtM-Qb3MKa&quot; title=&quot;JSConf EU 2018 - YouTube - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PL37ZVnwpeshG2YXJkun_lyNTtM-Qb3MKa&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSConf EU 2018の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;waldojeffers-conductor-mix-both-synchronous-and-asynchronous-code-without-hassle&quot;&gt;WaldoJeffers/conductor: Mix both synchronous and asynchronous code without hassle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WaldoJeffers/conductor&quot; title=&quot;WaldoJeffers/conductor: Mix both synchronous and asynchronous code without hassle&quot;&gt;github.com/WaldoJeffers/conductor&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;syncとasyncな処理を同様のコードフローで扱うためのUtilityライブラリ。&lt;br&gt;
map、compose、pluckなど LodashやRamdaによく似たAPIを持つライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@achille.urbain/why-im-building-conductor-fa780da821cd&quot; title=&quot;Why I’m building Conductor – Achille Urbain – Medium&quot;&gt;Why I’m building Conductor – Achille Urbain – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;garris-backstopjs-catch-css-curve-balls&quot;&gt;garris/BackstopJS: Catch CSS curve balls.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/garris/BackstopJS&quot; title=&quot;garris/BackstopJS: Catch CSS curve balls.&quot;&gt;github.com/garris/BackstopJS&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのリグレッションテストツール。&lt;br&gt;
ヘッドレスブラウザでレンダリングして、描画結果の違いをテストできる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-react&quot;&gt;Introduction · React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chrisnoring.gitbooks.io/react/content/&quot; title=&quot;Introduction · React&quot;&gt;chrisnoring.gitbooks.io/react/content/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactやRedux、MobXなどについての電子書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-graphql-guide&quot;&gt;The GraphQL Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://graphql.guide/&quot; title=&quot;The GraphQL Guide&quot;&gt;graphql.guide/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 12 Jun 2018 10:00:43 +0900</pubDate>
        <link>https://jser.info/2018/06/12/mobx-5.0.0phantomjs-eolnode.js/</link>
        <guid isPermaLink="true">https://jser.info/2018/06/12/mobx-5.0.0phantomjs-eolnode.js/</guid>
        
        <category>mobx</category>
        
        <category>phantomjs</category>
        
        <category>Node.js</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>PhantomJSの開発が終了しリポジトリがアーカイブ化された</title>
        <description>&lt;p&gt;QtWebKitをベースにしたヘッドレスブラウザである&lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;の開発が終了され、2018年6月2日にリポジトリもアーカイブされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs&quot;&gt;ariya/phantomjs: Scriptable Headless Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs&quot;&gt;&lt;img src=&quot;https://jser.info/uploads/media/2018/06/11-1528724137.png&quot; alt=&quot;ariya/phantomjs&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;以前にもお伝えしていましたが、PhantomJSはQtWebKitをベースにしていて安定版が利用しているバージョンも古いままでした。&lt;br&gt;
また、&lt;a href=&quot;https://groups.google.com/forum/#!topic/phantomjs/AefOuwkgBh0&quot;&gt;QtWebKitの新しいバージョンへアップデートを行うベータ版&lt;/a&gt;も開発されていましたが、&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/headless/README.md&quot;&gt;Headless Chromium&lt;/a&gt;が公開されたことや&lt;a href=&quot;https://groups.google.com/forum/#!topic/phantomjs/9aI5d-LDuNE&quot;&gt;個人でPhantomJSのメンテナンスを続けていくの難しい&lt;/a&gt;という問題もあり開発は停止していました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/05/03/headless-chromefirefoxphantomjsslimerjs-es-modules/&quot; title=&quot;2017-05-03のJS: Headless Chrome/FirefoxとPhantomJS/SlimerJS、ES modules - JSer.info&quot;&gt;2017-05-03のJS: Headless Chrome/FirefoxとPhantomJS/SlimerJS、ES modules - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/09/05/headless-browser-browserify/&quot; title=&quot;2017-09-05のJS: Headless Browserの対応、Browserifyの再開 - JSer.info&quot;&gt;2017-09-05のJS: Headless Browserの対応、Browserifyの再開 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのまま非アクティブな状態が続いたためリポジトリもアーカイブする提案がされ、2018年6月2日にリポジトリがアーカイブされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ariya/phantomjs/issues/15344&quot;&gt;Archiving the project: suspending the development · Issue #15344 · ariya/phantomjs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Securityリリースの予定なども特にないことから事実上のEOL(End Of Life)になりました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;は2011年1月23日に公開されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ariya.blogspot.com/2011/01/phantomjs-minimalistic-headless-webkit.html&quot;&gt;don&amp;#39;t code today what you can&amp;#39;t debug tomorrow: PhantomJS: minimalistic headless WebKit-based JavaScript-driven tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSer.infoではPhantomJSがリリースされた日にPhantomJSを紹介する記事を書いていました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/post/2888913234&quot;&gt;WebkitベースのJavaScriptコマンドラインツール「PhantomJS」 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在ではChromeとFirefoxそれぞれでヘッドレスモードが公式にサポートされています。&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/azu/c4206d94f18f35f6fe2fe303f988e7d5.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;ブラウザに同様の機能が実装され開発を終了したものとしては、開発者ツールの元となったFirebugがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/10/saying-goodbye-to-firebug/&quot;&gt;Saying Goodbye to Firebug – Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PhantomJSは&lt;a href=&quot;https://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt;のような自動テストをはじめ、&lt;a href=&quot;https://github.com/phantombuster/nickjs&quot;&gt;スクレイピング&lt;/a&gt;、&lt;a href=&quot;https://github.com/prerender/prerender&quot;&gt;Prerender&lt;/a&gt;、&lt;a href=&quot;http://phantomjs.org/screen-capture.html&quot;&gt;キャプチャやPDF化&lt;/a&gt;、&lt;a href=&quot;http://yslow.org/&quot;&gt;パフォーマンス分析&lt;/a&gt;などさまざまな用途で利用されていました。&lt;/p&gt;

&lt;p&gt;PhantomJSはバイナリ1つでヘッドレスなブラウザを動かせることから、CIなどいろいろな環境で手軽にブラウザを実行できるツールとして使われ、また自動テストにおいては実際のブラウザよりも自動化がしやすかったため大きな意味をもっていたと思います。&lt;/p&gt;

&lt;p&gt;今回のリポジトリのアーカイブ化でPhantomJSは1つの役目を終えたと言えます。&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/ariya/phantomjs/graphs/contributors&quot;&gt;PhantomJS and contributors&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jun 2018 22:31:00 +0900</pubDate>
        <link>https://jser.info/2018/06/11/phantomjs-ended/</link>
        <guid isPermaLink="true">https://jser.info/2018/06/11/phantomjs-ended/</guid>
        
        <category>PhantomJS</category>
        
        <category>JavaScript</category>
        
        
        <category>雑記</category>
        
      </item>
    
  </channel>
</rss>
