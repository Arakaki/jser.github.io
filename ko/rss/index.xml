<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/ko/</link>
    <atom:link href="https://jser.info/ko/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 19 Mar 2017 21:30:35 +0900</pubDate>
    <lastBuildDate>Sun, 19 Mar 2017 21:30:35 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2017-02-14 JS: V8 5.7와 ES2015+의 성능, npm입문, TypeScript 가이드라인</title>
        <description>&lt;p&gt;JSer.info #318 - V8 version 5.7이 릴리즈됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2017/02/v8-release-57.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.7&quot;&gt;V8 JavaScript Engine: V8 Release 5.7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Promise와 RegExp 그리고 &lt;a href=&quot;http://v8project.blogspot.jp/2016/10/v8-release-55.html&quot; title=&quot;version 5.5&quot;&gt;version 5.5&lt;/a&gt;에서 공개됐었던 async/await의 성능 개선이 이뤄졌습니다. 그리고 WebAssembly가 기본적으로 활성화 되도록 변경됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2017/01/speeding-up-v8-regular-expressions.html&quot; title=&quot;V8 JavaScript Engine: Speeding up V8 Regular Expressions&quot;&gt;V8 JavaScript Engine: Speeding up V8 Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5453022515691520&quot; title=&quot;WebAssembly - Chrome Platform Status&quot;&gt;WebAssembly - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;ES6 code currently is substantially slower than ES&lt;br&gt;
-- &lt;a href=&quot;https://groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&quot;&gt;An update on strong mode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;V8에서는 ES2015 이후의 기능을 충실히 구현하고는 있었지만 성능 최적화는 ES5에 비해 크게 진행되지 않았습니다.&lt;br&gt;
때문에 네이티브의 ES2015+ 보다 해당 코드를 ES5으로 변환한 경우에 성능이 더 좋은 경우도 있습니다.&lt;br&gt;
아래 문서에 그러한 경우에 대해 소개돼 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fhinkel.github.io/six-speed/&quot;&gt;fhinkel.github.io/six-speed/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mohayonao/items/34e66fd37a66830cf941&quot; title=&quot;Babel를 사용했지만 빠르다 - Qiita&quot;&gt;Babel를 사용했지만 빠르다 - Qiita&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그래서 V8에서는 네이티브 ES2015+ 기능의 실행 속도를 개선할 계획을 세우고 있으며 이번에 그 일부분이 반영된 것입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1EA9EbfnydAmmU_lM8R_uEMQ-U_v4l9zulePSBkeYWmY/edit#heading=h.x1cv1fi5g42q&quot;&gt;ES2015 and beyond performance plan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(마이크로 벤치 같은)실행 속도만이 아닌 파일 사이즈나 파서 및 컴파일 속도가 성능에 미치는 영향에 관해서는 아래 문서를 읽어보면 좋을 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/dev-channel/javascript-start-up-performance-69200f43b201#.3f965db3p&quot;&gt;JavaScript Start-up Performance – Dev Channel – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&quot;&gt;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&quot; title=&quot;npm for Beginners: A Guide for Front-end Developers&quot;&gt;npm for Beginners: A Guide for Front-end Developers&lt;/a&gt;에는 &lt;code&gt;npm&lt;/code&gt;에 관해 자세하게 소개 및 설명 돼 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;이라는 단어는 웹 사이트, npm registry, npm client 이 세 가지를 가리킨다는 것과 &lt;code&gt;npm&lt;/code&gt;의 사용법,  모듈의 설치 방법, 커멘드 사용법, npm과 관련된 도구 등이 자세히 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yux3.net/entry/2017/02/05/000805&quot; title=&quot;개인적인 TypeScript와 친해지는 가이드라인&quot;&gt;개인적인 TypeScript와 친해지는 가이드라인&lt;/a&gt;(일본어)라는 문서에는 평소 JavaScript를 사용하고 있는 사람이 TypeScript를 사용하게 될 경우 가져야할 관점이나 자세 그리고 기본 정보 등에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;any&lt;/code&gt;를 다루는 방법, 컴파일 옵션, TypeScript 독자적인 키워드나 함께 읽으면 좋을 문서 등이 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.7&quot;&gt;V8 JavaScript Engine: V8 Release 5.7&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2017/02/v8-release-57.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.7&quot;&gt;v8project.blogspot.com/2017/02/v8-release-57.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
V8 5.7이 릴리즈됐습니다.&lt;br&gt;
async/await나 ES2015의 성능이 개선 됐으며 &lt;code&gt;String#padStart&lt;/code&gt;, &lt;code&gt;Intl.DateTimeFormat#formatToParts&lt;/code&gt;을 지원합니다. 또, wasm가 기본적으로 활성화 되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.3.0-·-npm/npm&quot;&gt;Release v4.3.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.3.0&quot; title=&quot;Release v4.3.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v4.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm 4.3.0이 프레스 릴리즈(Press release) 됐습니다.&lt;br&gt;
&lt;code&gt;--auth-type&lt;/code&gt;이 추가됐고 실행 속도가 개선됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js1k-2017---a-magical-javascript-golfing-competition&quot;&gt;JS1k 2017 - A magical JavaScript golfing competition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://js1k.com/2017-magic/&quot; title=&quot;JS1k 2017 - A magical JavaScript golfing competition&quot;&gt;js1k.com/2017-magic/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;이벤트&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JS1k의 2017년도 모집이 시작됐습니다. JS1k는 1024bytes로 JavaScript의 데모를 만들고 공개하는 컨테스트입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-for-beginners:-a-guide-for-front-end-developers&quot;&gt;npm for Beginners: A Guide for Front-end Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&quot; title=&quot;npm for Beginners: A Guide for Front-end Developers&quot;&gt;www.impressivewebs.com/npm-for-beginners-a-guide-for-front-end-developers/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm의 정의와 사용법을 소개하는 튜토리얼 문서입니다.&lt;br&gt;
보편적인 패키지 디렉터리 구조, &lt;code&gt;node_modules&lt;/code&gt; 디렉터리, npm 커멘드와 옵션에 관해 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snapshot-testing-the-hard-way-|-better-world-by-better-software&quot;&gt;Snapshot testing the hard way | Better world by better software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/snapshot-testing/&quot; title=&quot;Snapshot testing the hard way | Better world by better software&quot;&gt;glebbahmutov.com/blog/snapshot-testing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Jest에는 Snapshot 테스트가 있습니다. 하지만 Jest와 같은 특정 테스트 프레임워크에 의존하지 않고 Snapshot 테스트를 시행하는 방법에 관해 소개돼 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bahmutov/snap-shot&quot; title=&quot;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&quot;&gt;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;개인적인-typescript와-친해지는-가이드라인&quot;&gt;개인적인 TypeScript와 친해지는 가이드라인&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.yux3.net/entry/2017/02/05/000805&quot; title=&quot;개인적인 TypeScript와 친해지는 가이드라인&quot;&gt;blog.yux3.net/entry/2017/02/05/000805&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
평소 JavaScript를 사용하고 있는 사람이 TypeScript를 어떻게 바라봐야 하는지 소개하고 있습니다.&lt;/p&gt;

&lt;p&gt;전형적인 에러의 의미나, 컴파일 옵션, &lt;code&gt;_&lt;/code&gt; prefix나 &lt;code&gt;this&lt;/code&gt;에서의 타입 등 TypeScript의 특징적인 부분에 관해 작성돼 있습니다.&lt;br&gt;
또, TypeScript 특징적인 키워드나 참고되는 문서에 관해서도 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-start-up-performance-–-dev-channel-–-medium&quot;&gt;JavaScript Start-up Performance – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@addyosmani/javascript-start-up-performance-69200f43b201&quot; title=&quot;JavaScript Start-up Performance – Dev Channel – Medium&quot;&gt;medium.com/@addyosmani/javascript-start-up-performance-69200f43b201&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScript의 실행 속도에 관해 작성돼 있습니다.&lt;br&gt;
모바일 같은 저사양의 CPU일 경우 파서와 컴파일 속도가 상대적으로 더 걸리게 됩니다. 따라서 CPU나 메모리 자원이 한정된 디바이스 일 경우 파일사이즈 뿐만 아니라 파서와 컴파일 시간도 더욱 중요해집니다.&lt;br&gt;
해당 글에는 이러한 사실과 함께 개발자 도구를 사용해 파서나 컴파일 시간을 측정하는 방법, User Timing API, V8의 Code Caching, script의 로드 방법을 최적화 하는 방법 등에 관해 작성돼 있습니다. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1Lq2DD28CGa7bxawVH_2OcmyiTiBn74dvC6vn2essroY/edit#slide&amp;amp;#x3D;id.g1a504e63c9_2_84&quot; title=&quot;V8 Stats in Chrome - Google 슬라이드&quot;&gt;V8 Stats in Chrome - Google 슬라이드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;이벤트-구동형-서비스-환경에서의-service-worker---qiita&quot;&gt;이벤트 구동형 서비스 환경에서의 Service Worker - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/nhiroki/items/65efc9e41ec1d928afcd&quot; title=&quot;이벤트 구동형 서비스 환경에서의 Service Worker - Qiita&quot;&gt;qiita.com/nhiroki/items/65efc9e41ec1d928afcd&lt;/a&gt;(일본어)&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;역사&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Better AppCache에서 시작된 Service Worker가 페이지에 의존하지 않고 생명 주기에 따라 변화하도록 발전하여 fetch 이외에도 이벤트를 핸들링 할 수 있는 기반 기술이 된 과정 즉, Service Worker의 발전 흐름에 관해 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;roundup:-vue.js-state-management-libraries-←-alligator.io&quot;&gt;Roundup: Vue.js State Management Libraries ← Alligator.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://alligator.io/vuejs/roundup-state-management-libraries/&quot; title=&quot;Roundup: Vue.js State Management Libraries ← Alligator.io&quot;&gt;alligator.io/vuejs/roundup-state-management-libraries/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vue.js에서 사용할 수 있는 스테이트 관리 라이브러리를 비교한 글입니다. 각 라이브러리의 특징이나 장점 및 단점 등에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;advanced-javascript-es2015-template-strings-with-tagged-templates-|-appendto&quot;&gt;Advanced JavaScript ES2015 Template Strings with Tagged Templates | appendTo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://appendto.com/2017/02/advanced-javascript-es2015-template-strings-with-tagged-templates/&quot; title=&quot;Advanced JavaScript ES2015 Template Strings with Tagged Templates | appendTo&quot;&gt;appendto.com/2017/02/advanced-javascript-es2015-template-strings-with-tagged-templates/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Tagged Template Literal에 관해 설명돼 있는 글입니다. 예제 코드와 함께 태그 함수의 인수가 어떻게 동작하는지 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production-//-speaker-deck&quot;&gt;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&quot; title=&quot;Progressive Transpilation at Netflix and the road to running native ES2015 in production // Speaker Deck&quot;&gt;speakerdeck.com/betaorbust/progressive-transpilation-at-netflix-and-the-road-to-running-native-es2015-in-production&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Netfilx의 브라우저 용으로 Transpile한 JavaScript를 전달하기 위해 하고 있는 처리에 관해 소개합니다.&lt;br&gt;
모던한 브라우저는 ES2015를 대응하고 있기 때문에 변환이나 polyfill 등을 제거해 20 ~ 40% 정도 payload 사이즈를 줄일 수 있다고 합니다. 또, 압축 도구와 ES2015를 대응하고 있는지를 판정하는 문제 등에 관해서도 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ava-casts&quot;&gt;AVA Casts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://avacasts.com/&quot; title=&quot;AVA Casts&quot;&gt;avacasts.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AVA에 관한 스크린캐스트입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bahmutov/snap-shot:-jest-like-snapshot-feature-for-the-rest-of-us,-works-magically-by-finding-the-right-caller-function&quot;&gt;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bahmutov/snap-shot&quot; title=&quot;bahmutov/snap-shot: Jest-like snapshot feature for the rest of us, works magically by finding the right caller function&quot;&gt;github.com/bahmutov/snap-shot&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Jest 같은 Snapshot 테스트를 지원하는 테스트 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mnemonist&quot;&gt;Mnemonist&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yomguithereal.github.io/mnemonist/&quot; title=&quot;Mnemonist&quot;&gt;yomguithereal.github.io/mnemonist/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
여러가지 데이터 구조를 구현한 JavaScript 라이브러리입니다.&lt;br&gt;
Queue, Trie, Linked List, Bloom Filter 등이 구현돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;harksys/npmvet:-a-simple-cli-tool-for-vetting-npm-package-versions&quot;&gt;harksys/npmvet: A simple CLI tool for vetting npm package versions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/harksys/npmvet&quot; title=&quot;harksys/npmvet: A simple CLI tool for vetting npm package versions&quot;&gt;github.com/harksys/npmvet&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;과 &lt;code&gt;node_modules&lt;/code&gt;에 설치돼 있는 패키지의 버전을 비교하고 해당 패키지가 잠겨(lock)있는지 검사할 수 있는 도구입니다. 직접 또는 매번 새롭게 설치되는 CI에서 패키지의 버전을 맞추는데 목적을 두고 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://harksys.com/labs/npm-vet-a-simple-cli-tool-for-checking-npm-package-versions/&quot; title=&quot;NPM Vet, a simple CLI tool for checking npm package versions - Hark.&quot;&gt;NPM Vet, a simple CLI tool for checking npm package versions - Hark.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mgol/check-dependencies&quot; title=&quot;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&quot;&gt;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simple-statistics&quot;&gt;Simple Statistics&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://simplestatistics.org/&quot; title=&quot;Simple Statistics&quot;&gt;simplestatistics.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;통계&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
sum, sort, quantile, mean 등 통계 용 메서드를 구현 및 제공하는 자바스크립트 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;abrahamjagadeesh/npm-module-stats:-get-recursive-file-size-and-dependencies-of-any-npm-module-without-installing-the-module&quot;&gt;abrahamjagadeesh/npm-module-stats: Get recursive file size and dependencies of any NPM module without installing the module&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/abrahamjagadeesh/npm-module-stats&quot; title=&quot;abrahamjagadeesh/npm-module-stats: Get recursive file size and dependencies of any NPM module without installing the module&quot;&gt;github.com/abrahamjagadeesh/npm-module-stats&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
특정 모듈이 의존하고 있는 각 npm 모듈의 파일 사이즈를 테이블로 정리해 볼 수 있는 도구입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;davidmfoley/node-trucker:-hauls-your-node.js-source-files-around&quot;&gt;davidmfoley/node-trucker: Hauls your node.js source files around&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/davidmfoley/node-trucker&quot; title=&quot;davidmfoley/node-trucker: Hauls your node.js source files around&quot;&gt;github.com/davidmfoley/node-trucker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;리팩터링&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
JavaScript 파일 간의 의존 관계를 고려해 파일을 이동시킬 수 있는 리팩터링 도구입니다.&lt;br&gt;
특정 파일을 이동 시키면 해당 파일을 의존하고 있는 각 파일의 import 구문도 함께 수정됩니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Feb 2017 11:02:33 +0900</pubDate>
        <link>https://jser.info/ko/2017/02/14/v8-5.7es2015-npm-typescript/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/02/14/v8-5.7es2015-npm-typescript/</guid>
        
        <category>V8</category>
        
        <category>ES2015</category>
        
        <category>npm</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-02-05 JS: AVA 0.18.0, Mithril 1.0, ES modules과 webpack의 모듈</title>
        <description>&lt;p&gt;JSer.info #317 - 테스팅 프레임워크 AVA 0.18.0이 릴리즈됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.18.0&quot; title=&quot;Release 0.18.0 · avajs/ava&quot;&gt;Release 0.18.0 · avajs/ava&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 0.10와 0.12의 지원을 종료하고 &lt;a href=&quot;https://github.com/avajs/ava#snapshot-testing&quot; title=&quot;Snapshot testing&quot;&gt;Snapshot testing&lt;/a&gt;(JSX)용 &lt;code&gt;t.snapshot&lt;/code&gt;이 추가됐습니다.&lt;/p&gt;

&lt;p&gt;지금까지는 &lt;a href=&quot;https://github.com/power-assert-js/power-assert&quot; title=&quot;power-assert&quot;&gt;power-assert&lt;/a&gt;를 사용(동봉)하여 테스트가 실패했을때의 출력을 비쥬얼라이즈를 했습니다만, 0.18.0부터는 &lt;a href=&quot;https://github.com/avajs/ava#magic-assert&quot; title=&quot;Magic assert&quot;&gt;Magic assert&lt;/a&gt;를 추가하여 Mocha나 Jest 처럼 같지 않은 부분을 &lt;code&gt;actual&lt;/code&gt;과 &lt;code&gt;expect&lt;/code&gt;로 나눠 diff 출력이 가능 하도록 변경 됐습니다(Jest의 &lt;a href=&quot;https://github.com/facebook/jest/tree/master/packages/pretty-format&quot; title=&quot;pretty-format&quot;&gt;pretty-format&lt;/a&gt;을 fork한 것을 이용하고 있습니다).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/170270/22558318/d782e9a4-e99f-11e6-889e-62fd4ad36e66.png&quot; alt=&quot;Magic assert&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript 프레임워크 &lt;a href=&quot;http://mithril.js.org/&quot; title=&quot;Mithril&quot;&gt;Mithril 1.0&lt;/a&gt;이 릴리즈됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&quot; title=&quot;mithril.js/change-log.md at rewrite · lhorie/mithril.js&quot;&gt;mithril.js/change-log.md at rewrite · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 마이그레이션 가이드 겸 릴리트 노트를 통해 다양한 변경이 이뤄졌음을 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;라이프 사이클 메서드 추가, 컴포넌트를 인자로 전달 시 필수적으로 &lt;code&gt;m()&lt;/code&gt;으로 wrap 하도록, &lt;code&gt;m.sync&lt;/code&gt; 삭제, 동기적 redraw 삭제 등이 이뤄졌습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/lifecycle-methods.md&quot; title=&quot;mithril.js/lifecycle-methods.md at rewrite · lhorie/mithril.js&quot;&gt;mithril.js/lifecycle-methods.md at rewrite · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;시그니처가 변경된 부분도 많기 때문에 위 마이그레이션 가이드를 살펴보는게 좋을 것 같습니다.&lt;br&gt;
또, 마이그레이션 도구도 공개돼 있기 때문에 함께 이용하면 될 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tivac/mithril-codemods&quot; title=&quot;tivac/mithril-codemods: jscodeshift-powered mithril@0.2.x to mithril@1.x transformations&quot;&gt;tivac/mithril-codemods: jscodeshift-powered mithril@0.2.x to mithril@1.x transformations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-new-features&quot; title=&quot;Native ECMAScript modules: the new features and differences from Webpack modules&quot;&gt;Native ECMAScript modules: the new features and differences from Webpack modules&lt;/a&gt;에는 ECMAScript modules와 webpack이 지원하는 모듈 시스템의 차이점에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;MSEdge나 WebKit 등 실제 ECMAScript modules가 동작하는 환경도 슬슬 나오고 있고, 모듈에 의한 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소의 속성과 관련된 부분도 정리돼 있기 때문에 한번 읽어보기 좋은 글인 것 같습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;공지사항&quot;&gt;공지사항&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/2017/01/15/jser-info-6years/&quot; title=&quot;JSer.info 6주년 기념 이벤트&quot;&gt;JSer.info 6주년 기념 이벤트&lt;/a&gt;(일본어)에서도 이야기했던 &lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;의 1회 째를 공개했습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/31/bundler-testing-framework-report/&quot; title=&quot;JSer 레포트 #1 Bundler의 미래, 테스팅 프레임워크의 현상 - JSer.info&quot;&gt;JSer 레포트 #1 Bundler의 미래, 테스팅 프레임워크의 현상 - JSer.info&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSer 레포트는 방향성이나 테마 그리고 비용을 줄이는 방법 등 해결해야할 과제가 많습니다.&lt;br&gt;
이와 관련된 의견이 있다면 자유롭게 해쉬태그 &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?f=tweets&amp;amp;vertical=default&amp;amp;src=hash&quot; title=&quot;#jserinfo&quot;&gt;#jserinfo&lt;/a&gt; 혹은 &lt;a href=&quot;https://twitter.com/jser_info&quot; title=&quot;@jser_info&quot;&gt;@jser_info&lt;/a&gt;에 멘션을 주시거나 &lt;a href=&quot;https://github.com/jser/report&quot; title=&quot;jser/report&quot;&gt;jser/report&lt;/a&gt;에 이슈를 작성해주세요.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.5.0-(current)-|-node.js&quot;&gt;Node v7.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.5.0/&quot; title=&quot;Node v7.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.5.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Node v7.5.0이 릴리즈됐습니다.&lt;br&gt;
npm 업데이트, &lt;code&gt;NODE_NO_WARNINGS&lt;/code&gt;의 환경변수 (&lt;code&gt;--no-warnings&lt;/code&gt;과 같은)를 추가하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-0.18.0-·-avajs/ava&quot;&gt;Release 0.18.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.18.0&quot; title=&quot;Release 0.18.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v0.18.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
AVA 0.18.0이 릴리즈됐습니다.&lt;br&gt;
Node.js 0.10과 0.12의 지원 종류하고 Snapshot testing(JSX)과 Magic assert를 추가하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.2-rc-|-typescript&quot;&gt;Announcing TypeScript 2.2 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2017/02/02/announcing-typescript-2-2-rc/&quot; title=&quot;Announcing TypeScript 2.2 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2017/02/02/announcing-typescript-2-2-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TypeScript 2.2 RC가 릴리즈됐습니다.&lt;br&gt;
기본형(primitive) 이 외의 타입을 표현하는 &lt;code&gt;object&lt;/code&gt; type 추가, class expresson을 사용한 mixin 지원, JSX의 react-native 지원하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap#22-february-2017&quot; title=&quot;Roadmap · Microsoft/TypeScript Wiki&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-57-beta:-css-grid-layout,-improved-add-to-home-screen,-media-session-api&quot;&gt;Chromium Blog: Chrome 57 Beta: CSS Grid Layout, Improved Add to Home screen, Media Session API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2017/02/chrome-57-beta-css-grid-layout-improved.html&quot; title=&quot;Chromium Blog: Chrome 57 Beta: CSS Grid Layout, Improved Add to Home screen, Media Session API&quot;&gt;blog.chromium.org/2017/02/chrome-57-beta-css-grid-layout-improved.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 57 Beta가 릴리즈됐습니다.&lt;br&gt;
CSS Grid, _Media Session API, &lt;code&gt;String#padStart&lt;/code&gt;를 지원합니다.&lt;br&gt;
반복되는 out-of-view 애니메이션에 &lt;code&gt;setTimeout()&lt;/code&gt; 사용하면 &lt;code&gt;setTimeout()&lt;/code&gt;이 제한(throttle)되도록 변경됐으며 XSS Auditor(필터)가 기본적으로 mode block이 되도록 변경됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;setTimeout()&lt;/code&gt; 제한 : 이미 크롬에서는 백그라운 탭일 경우 &lt;code&gt;timer&lt;/code&gt;를 1Hz로 제한하고 있었는데 이를 뷰포트를 벗어나 있는(outside visible viewport) iframe 같은 경우에도 제한을 확장함.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/interventions/issues/9&quot; title=&quot;&amp;amp;amp;#34;Out of view&amp;amp;amp;#34; cross-origin iframes align/clamp setTimeout/setInterval to 1 second · Issue #9 · WICG/interventions&quot;&gt;&amp;#34;Out of view&amp;#34; cross-origin iframes align/clamp setTimeout/setInterval to 1 second · Issue #9 · WICG/interventions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mithril.js/change-log.md-at-rewrite-·-lhorie/mithril.js&quot;&gt;mithril.js/change-log.md at rewrite · lhorie/mithril.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&quot; title=&quot;mithril.js/change-log.md at rewrite · lhorie/mithril.js&quot;&gt;github.com/lhorie/mithril.js/blob/rewrite/docs/change-log.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Mithril 1.0이 릴리즈됐습니다.&lt;br&gt;
라이플 사이클 메서드 추가됐고 컴포넌트를 인자로 전달 시 필수적으로 &lt;code&gt;m()&lt;/code&gt;으로 wrap 하도록 변경됐습니다. 또, &lt;code&gt;m.sync&lt;/code&gt;와 동기적 redraw를 삭제하는 등 많은 부분이 크게 변경 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lhorie/mithril.js/issues/1090&quot; title=&quot;Rewrite Status · Issue #1090 · lhorie/mithril.js&quot;&gt;Rewrite Status · Issue #1090 · lhorie/mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mithril.js.org/&quot; title=&quot;Introduction - Mithril.js&quot;&gt;Introduction - Mithril.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;native-ecmascript-modules:-the-new-features-and-differences-from-webpack-modules&quot;&gt;Native ECMAScript modules: the new features and differences from Webpack modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-new-features&quot; title=&quot;Native ECMAScript modules: the new features and differences from Webpack modules&quot;&gt;blog.hospodarets.com/native-ecmascript-modules-new-features&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpack 등의 모듈과 네이티브 ES module의 차이점에 관해 정리 돼 있는 글입니다. 모듈 패스, CORS, &lt;code&gt;script&lt;/code&gt; 요소의 속성, 에러 판정, ES module의 동작, feature detection 방법, fallback, &lt;code&gt;script&lt;/code&gt; 요소의 &lt;code&gt;type&lt;/code&gt;을 취하는 방법 등 다양하고 자세히 해당 주제를 다루고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-beginners-guide-to-webpack-2-and-module-bundling&quot;&gt;A Beginners Guide to Webpack 2 and Module Bundling&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/beginners-guide-to-webpack-2-and-module-bundling/&quot; title=&quot;A Beginners Guide to Webpack 2 and Module Bundling&quot;&gt;www.sitepoint.com/beginners-guide-to-webpack-2-and-module-bundling/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
webpack의 기본적인 사용 방법에 관해 소개 돼 있습니다.&lt;br&gt;
module의 취급 방법, loader, plugin, 코드 분할, dev server, Hot reloading에 관해 정리 돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-on-next.js&quot;&gt;Next on Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsmantra.com/next-on-next-js-1a134505f346&quot; title=&quot;Next on Next.js&quot;&gt;jsmantra.com/next-on-next-js-1a134505f346&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;서버&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React를 사용한 프레임워크인 Next.js 2β에 관해 작성돼 있습니다.&lt;br&gt;
라우팅, 코드 분할, webpack 2 지원, webpack이나 babel의 설정을 커스텀하는 방법 등 Next.js 2β의 변경점에 관해 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-grid-–-table-layout-is-back.-be-there-and-be-square.- | -web- | -google-developers&quot;&gt;CSS Grid – Table layout is back. Be there and be square.  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/01/css-grid&quot; title=&quot;CSS Grid – Table layout is back. Be there and be square.  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/01/css-grid&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
CSS Grid의 개요가 소개 돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-set-up-e2e-browser-testing-for-your-github-project&quot;&gt;How to set up E2E browser testing for your GitHub project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84&quot; title=&quot;How to set up E2E browser testing for your GitHub project&quot;&gt;hackernoon.com/how-to-set-up-e2e-browser-testing-for-your-github-project-89c24e15a84&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
TestCafe를 사용한 E2E 테스트 설정 및 활용 방법에 관해 소개 돼 있습니다. &lt;br&gt;
PageObject 패턴, Travis CI나 Sauce Labs와의 연동 방법이 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;api-deprecations-and-removals-in-chrome-57- | -web- | -google-developers&quot;&gt;API Deprecations and Removals in Chrome 57  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/02/chrome-57-deprecations&quot; title=&quot;API Deprecations and Removals in Chrome 57  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/02/chrome-57-deprecations&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 57에서 비권장되거나 삭제되는 API에 관해 작성돼 있습니다. webkitCancleAnimationFrame 처럼 &lt;strong&gt;Vendor-prefix&lt;/strong&gt;가 붙은 &lt;code&gt;cancelAnimationFrame&lt;/code&gt;, &lt;code&gt;IndexedDB&lt;/code&gt;, &lt;code&gt;AudioContext&lt;/code&gt; 관련 API가 삭제되며 &lt;code&gt;BluetoothDevice.uuids&lt;/code&gt;, &lt;code&gt;&amp;lt;keygen&amp;gt;&lt;/code&gt;, &lt;code&gt;OfflineAudioContext&lt;/code&gt; 등도 함께 삭제 됩니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-feature-detection.js&quot;&gt;es6-feature-detection.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/DaBs/89ccc2ffd1d435efdacff05248514f38&quot; title=&quot;es6-feature-detection.js&quot;&gt;gist.github.com/DaBs/89ccc2ffd1d435efdacff05248514f38&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
실행 환경이 ES2015 대부분의 기능(Classes, let, const, Unicode 등)을 지원하고 있는지를 판정하는 단, 몇 줄만으로 작성한 스니펫 코드입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blinkon-7-information---google-문서&quot;&gt;BlinkOn 7 Information - Google 문서&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1jlpsfv0kXCveOEX5l75aATgRXbcAvwyse4Tn6jVprWs/edit#&quot; title=&quot;BlinkOn 7 Information - Google 문서&quot;&gt;docs.google.com/document/d/1jlpsfv0kXCveOEX5l75aATgRXbcAvwyse4Tn6jVprWs/edit#&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;이벤트&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Google의 BlinkOn7 이벤트 관련 정보가 정리돼 있습니다.&lt;br&gt;
각 세션 별 슬라이드가 공개 돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-npm-scripts-as-your-build-tool---course-by-@elijahmanor-@eggheadio&quot;&gt;How to Use npm Scripts as Your Build Tool - Course by @elijahmanor @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/how-to-use-npm-scripts-as-your-build-tool&quot; title=&quot;How to Use npm Scripts as Your Build Tool - Course by @elijahmanor @eggheadio&quot;&gt;egghead.io/courses/how-to-use-npm-scripts-as-your-build-tool&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
npm scripts를 사용해 빌드 환경을 구성하는 방법을 소개하는 스크린캐스트 입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsmpeg-–-decode-it-like-it&amp;#39;s-1999&quot;&gt;JSMpeg – Decode it like it&amp;#39;s 1999&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jsmpeg.com/&quot; title=&quot;JSMpeg – Decode it like it&amp;#39;s 1999&quot;&gt;jsmpeg.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
MPEG1/MP2를 자바스크립트 레벨에서 디코딩할 수 있는 라이브러리입니다.&lt;br&gt;
WebSockets를 사용한 영상 스트림 전송 목적으로 개발됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-·-gitbook(일본어)&quot;&gt;Introduction · GitBook(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vuex.vuejs.org/ja/&quot; title=&quot;Introduction · GitBook&quot;&gt;vuex.vuejs.org/ja/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;번역&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Vuex의 문서를 일본어로 번역한 사이트입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-platform-tests-dashboard&quot;&gt;Web Platform Tests Dashboard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://wptdashboard.appspot.com/&quot; title=&quot;Web Platform Tests Dashboard&quot;&gt;wptdashboard.appspot.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;a href=&quot;https://github.com/w3c/web-platform-tests&quot; title=&quot;w3c/web-platform-tests: Test Suites for Web Platform specifications—including WHATWG, W3C and others&quot;&gt;w3c/web-platform-tests: Test Suites for Web Platform specifications—including WHATWG, W3C and others&lt;/a&gt;를 브라우저 별로 실행한 결과가 정리돼 있는 페이지입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1s2Dick89wvJsuNJb4ia3pPt84NtMv8rZr0E_GFXJLrk/edit#slide&amp;amp;#x3D;id.p&quot; title=&quot;Web Platform Tests in Blink and Beyond - Google スライド&quot;&gt;Web Platform Tests in Blink and Beyond - Google 슬라이드&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webvr-rocks-•-your-guide-to-virtual-reality-in-the-browser.&quot;&gt;WebVR Rocks • Your guide to Virtual Reality in the browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webvr.rocks/&quot; title=&quot;WebVR Rocks • Your guide to Virtual Reality in the browser.&quot;&gt;webvr.rocks/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
브라우저 별 WebVR 지원 현황을 정리한 사이트입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oliver-moran/jimp:-an-image-processing-library-written-entirely-in-javascript-for-node,-with-zero-external-or-native-dependencies.&quot;&gt;oliver-moran/jimp: An image processing library written entirely in JavaScript for Node, with zero external or native dependencies.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/oliver-moran/jimp&quot; title=&quot;oliver-moran/jimp: An image processing library written entirely in JavaScript for Node, with zero external or native dependencies.&quot;&gt;github.com/oliver-moran/jimp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
의존 라이브러리 없는 이미지 처리 라이브러리입니다. &lt;br&gt;
리사이즈나 회전, 회색 처리 등 이미지 관련 가공을 할 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist/sao:-futuristic-scaffolding-tool.&quot;&gt;egoist/sao: Futuristic scaffolding tool.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/sao&quot; title=&quot;egoist/sao: Futuristic scaffolding tool.&quot;&gt;github.com/egoist/sao&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Git 저장소나 npm 패키지 등을 기반으로 프로젝트를 생성할 수 있는 scaffolding 도구 입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ide/mux:-creates-a-promise-that-waits-for-the-promises-in-nested-data-structures-and-resolves-to-data-structures-of-the-same-form.-it-recursively-traverses-the-input-data-structure-and-multiplexes-its-promises.&quot;&gt;ide/mux: Creates a promise that waits for the promises in nested data structures and resolves to data structures of the same form. It recursively traverses the input data structure and multiplexes its promises.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ide/mux&quot; title=&quot;ide/mux: Creates a promise that waits for the promises in nested data structures and resolves to data structures of the same form. It recursively traverses the input data structure and multiplexes its promises.&quot;&gt;github.com/ide/mux&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Array, Map, Set 등이 갖는 프로퍼티의 Promise를 해결하고, 그 결과를 똑같은 구조로 반환해 주는 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-&amp;quot;learning-aurelia&amp;quot;-from-packt-publishing&quot;&gt;Announcing &amp;quot;Learning Aurelia&amp;quot; from Packt Publishing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.aurelia.io/2017/02/01/announcing-learning-aurelia-from-packt-publishing/&quot; title=&quot;Announcing &amp;quot;Learning Aurelia&amp;quot; from Packt Publishing&quot;&gt;blog.aurelia.io/2017/02/01/announcing-learning-aurelia-from-packt-publishing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Aurelia에 관해 소개하는 서적입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/learning-aurelia&quot; title=&quot;Learning Aurelia | PACKT Books&quot;&gt;Learning Aurelia | PACKT Books&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-es2016-and-es2017&quot;&gt;Exploring ES2016 and ES2017&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://exploringjs.com/es2016-es2017.html&quot; title=&quot;Exploring ES2016 and ES2017&quot;&gt;exploringjs.com/es2016-es2017.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ExploringJS의 속편으로 ECMAScript 2016과 2017에 관해 소개하는 서적입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leanpub.com/exploring-es2016-es2017&quot; title=&quot;Exploring ES2016 and… by Axel Rauschmayer \[PDF/iPad/Kindle\]&quot;&gt;Exploring ES2016 and… by Axel Rauschmayer [PDF/iPad/Kindle]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Sun, 05 Feb 2017 18:37:59 +0900</pubDate>
        <link>https://jser.info/ko/2017/02/05/ava-0.18.0-mithril-1.0-es-moduleswebpack/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/02/05/ava-0.18.0-mithril-1.0-es-moduleswebpack/</guid>
        
        <category>AVA</category>
        
        <category>Testing</category>
        
        <category>modules</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-01-30 JS: Safari 10.1, Firefox51.0, 점진적으로 타입을 작성하며 리팩터링</title>
        <description>&lt;p&gt;JSer.info #316 - &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html&quot; title=&quot;Safari 10.1&quot;&gt;Safari 10.1&lt;/a&gt;이 릴리즈됐습니다.&lt;/p&gt;

&lt;p&gt;Fetch API, IndexedDB 2.0, Custom Elements, Pointer Lock/Gamepad API, ES2016/2017 등을 지원합니다.&lt;br&gt;
또, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 요소의 &lt;code&gt;download&lt;/code&gt; 속성과 CSS Grid 등도 이번 버전부터 지원합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/51.0/releasenotes/&quot; title=&quot;Firefox — Notes (51.0) — Mozilla&quot;&gt;Firefox 51.0&lt;/a&gt;이 릴리즈됐습니다.&lt;/p&gt;

&lt;p&gt;WebGL 2, IndexedDB 2, FLAC 형식 등을 지원하며 XHR이 사양에 맞춰 수정됐습니다.&lt;br&gt;
또, &lt;code&gt;DOMImplementation.hasFeature()&lt;/code&gt;가 항상 &lt;code&gt;true&lt;/code&gt;를 반환하도록, 비표준인 &lt;code&gt;for each in&lt;/code&gt;을 사용 시 경고가 출력돼도록 변경됐습니다.&lt;/p&gt;

&lt;p&gt;자세한 내용은 아래 문서를 참고해주세요.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/51&quot; title=&quot;Firefox 51 for developers - Mozilla | MDN&quot;&gt;Firefox 51 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/en-CA/versions/51/&quot; title=&quot;Firefox 51 Site Compatibility | Firefox Site Compatibility&quot;&gt;Firefox 51 Site Compatibility | Firefox Site Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reaktor.com/blog/refactoring-30000-lines-js-types/&quot; title=&quot;Refactoring 30000 lines of JS with types - Reaktor.com&quot;&gt;Refactoring 30000 lines of JS with types - Reaktor.com&lt;/a&gt;에는 3만 줄의 JavaScript를 어떻게 리팩터링 했는지에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;일종의 리팩터링 접근법으로써 형을 붙여나가면서 코드를 수정하는 할 때 FlowType이나 TypeScript를 사용한 경우의 문제점을 소개하고 각 도구의 어떤 기능을 활용할 수 있는지 이야기합니다.&lt;br&gt;
Flow의 경우엔 weak mode를 사용하고 TypeScript의 경우엔 &lt;code&gt;.js&lt;/code&gt;를 &lt;code&gt;.ts&lt;/code&gt;로 변경해 나가는 방법으로 점진적으로 타입을 추가해 나가는데 취할 수 있는 전략을 소개합니다.&lt;br&gt;
최종적으로 TypeScript를 사용하기로 결정하고 이를 사용하면서 만나게 되는 에러에 관해서도 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-10.1&quot;&gt;Safari 10.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html&quot; title=&quot;Safari 10.1&quot;&gt;developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Safari 10.1이 릴리즈됐습니다.&lt;br&gt;
Fetch API, IndexedDB 2.0, Custom Elements, Pointer Lock/Gamepad API, ES2016, 2017 등을 지원합니다.&lt;br&gt;
또, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 요소의 &lt;code&gt;download&lt;/code&gt; 속성과 CSS Grid도 이번 버전부터 지원합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(51.0)-—-mozilla&quot;&gt;Firefox — Notes (51.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/51.0/releasenotes/&quot; title=&quot;Firefox — Notes (51.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/51.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Firefox 51.0이 릴리즈됐습니다.&lt;br&gt;
WebGL 2, IndexedDB 2, FLAC 형식을 지원하며 XHR가 사양을 따르도록 변경됐고 &lt;code&gt;DOMImplementation.hasFeature()&lt;/code&gt;는 항상 &lt;code&gt;true&lt;/code&gt;를 반환하도록 변경됐습니다. 또, 비표준 API를 삭제하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox/Releases/51&quot; title=&quot;Firefox 51 for developers - Mozilla | MDN&quot;&gt;Firefox 51 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/en-CA/versions/51/&quot; title=&quot;Firefox 51 Site Compatibility | Firefox Site Compatibility&quot;&gt;Firefox 51 Site Compatibility | Firefox Site Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-browserify/changelog.markdown-at-master-·-substack/node-browserify&quot;&gt;node-browserify/changelog.markdown at master · substack/node-browserify&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/blob/master/changelog.markdown&quot; title=&quot;node-browserify/changelog.markdown at master · substack/node-browserify&quot;&gt;github.com/substack/node-browserify/blob/master/changelog.markdown&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Browserify 14.0.0이 릴리즈됐습니다.&lt;br&gt;
buffer polyfill이 업데이트 됐습니다. 업데이트 된 buffer 패키지에서 TypedArray를 사용하고 있기 때문에 그 영향으로 IE10 이하의 지원이 종료됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/pull/1678&quot; title=&quot;Update &amp;amp;amp;#39;buffer&amp;amp;amp;#39; to v5.x by feross · Pull Request #1678 · substack/node-browserify&quot;&gt;Update &amp;amp;#39;buffer&amp;amp;#39; to v5.x by feross · Pull Request #1678 · substack/node-browserify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-22-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 22 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7354/release-notes-for-safari-technology-preview-22/&quot; title=&quot;Release Notes for Safari Technology Preview 22 | WebKit&quot;&gt;webkit.org/blog/7354/release-notes-for-safari-technology-preview-22/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Safari Technology Preview Release 22가 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;scroll-snap-type:proximity&lt;/code&gt; 지원를 지원하며 &lt;code&gt;innerText&lt;/code&gt;가 사양을 따르도록 변경됐습니다. 또, &lt;code&gt;URLSearchParams&lt;/code&gt;가 iterable이 되는 등 여러가지 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;video.js-6.0.0-rc.0:-the-first-release-candidate-|-video.js-blog&quot;&gt;Video.js 6.0.0-RC.0: The first Release Candidate | Video.js Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.videojs.com/Video-js-6-0-0-RC-0-The-first-RC/&quot; title=&quot;Video.js 6.0.0-RC.0: The first Release Candidate | Video.js Blog&quot;&gt;blog.videojs.com/Video-js-6-0-0-RC-0-The-first-RC/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
video.js v6.0 RC가 릴리즈됐습니다.&lt;br&gt;
Flash를 Core에서 제거됐으며 React에서 영감받아 디자인된 플러그인 아키텍처 추가됐습니다. 또, 접근성을 개성하는 등 다양한 변경 사항이 있습니다.&lt;br&gt;
- &lt;a href=&quot;http://blog.videojs.com/the-end-of-html-first/&quot; title=&quot;The End of &amp;amp;amp;#34;HTML-First&amp;amp;amp;#34; | Video.js Blog&quot;&gt;The End of &amp;amp;#34;HTML-First&amp;amp;#34; | Video.js Blog&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;refactoring-30000-lines-of-js-with-types---reaktor.com&quot;&gt;Refactoring 30000 lines of JS with types - Reaktor.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.reaktor.com/blog/refactoring-30000-lines-js-types/&quot; title=&quot;Refactoring 30000 lines of JS with types - Reaktor.com&quot;&gt;www.reaktor.com/blog/refactoring-30000-lines-js-types/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;리팩터링&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
3만 줄의 JavaScript를 점진적으로 타입을 붙여나가며 리팩토링하는 접근법에 관해 소개돼 있습니다.&lt;br&gt;
Flow의 week mode와 코멘트로 타입을 선언하는 방법과 문제점, TypeScript를 사용 시 네임스페이스 오브젝트를 이용한 접근법과 장/단점 등을 이야기합니다.&lt;br&gt;
또, 최종적으로 TypeScript를 사용하고 그 때 만나게 된 문제에 관해서도 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-touch-scrolling-fast-by-default- | -web- | -google-developers&quot;&gt;Making touch scrolling fast by default  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/01/scrolling-intervention&quot; title=&quot;Making touch scrolling fast by default  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/01/scrolling-intervention&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;event&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Chrome 56부터는 doucment, documentElement, window 등에서 &lt;code&gt;touchevent&lt;/code&gt;를 구독할 때 &lt;code&gt;{passive: true}&lt;/code&gt;가 기본적으로 설정됩니다. 이때, &lt;code&gt;touchstart&lt;/code&gt; 리스너 안에서 &lt;code&gt;event.preventDefault()&lt;/code&gt;를 호출하면 무시되고 경고가 콘솔에 출력됩니다.&lt;br&gt;
- &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/defaultPrevented&quot; title=&quot;Event.defaultPrevented - Web APIs | MDN&quot;&gt;Event.defaultPrevented - Web APIs | MDN&lt;/a&gt;&lt;br&gt;
- &lt;a href=&quot;https://www.chromestatus.com/features/5093566007214080&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-react-applications-with-jest&quot;&gt;Testing React Applications with Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/testing-react-applications-with-jest/&quot; title=&quot;Testing React Applications with Jest&quot;&gt;auth0.com/blog/testing-react-applications-with-jest/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Jest를 사용한 React 테스트 방법에 관해 소개돼 있습니다.&lt;br&gt;
설치부터 테스트 작성법, 목(Mock)하는 방법에 대해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es-proposal:-shared-memory-and-atomics&quot;&gt;ES proposal: Shared memory and atomics&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2017/01/shared-array-buffer.html&quot; title=&quot;ES proposal: Shared memory and atomics&quot;&gt;www.2ality.com/2017/01/shared-array-buffer.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ES2017에 들어가게된 Shared memory and stomics에 대한 소개 글입니다.&lt;br&gt;
Shared Array Buffers로 Worker(agent)와 데이터를 공유하는 것이 가능합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;implement-a-javascript-reactive-programming-library-—-part-1-–-medium&quot;&gt;Implement a JavaScript reactive programming library — part 1 – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bohou/implement-a-javascript-reactive-programming-library-part-1-f564ac6ad789&quot; title=&quot;Implement a JavaScript reactive programming library — part 1 – Medium&quot;&gt;medium.com/@bohou/implement-a-javascript-reactive-programming-library-part-1-f564ac6ad789&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Reactive한 JavaScript 라이브러리를 구현하는 과정을 연재하는 글입니다.&lt;br&gt;
- &lt;a href=&quot;https://github.com/bhou/bouton.js&quot; title=&quot;bhou/bouton.js: A framework to build your asynchronous reactive library.&quot;&gt;bhou/bouton.js: A framework to build your asynchronous reactive library.&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;watch-out-for-undefined-state&quot;&gt;Watch Out for Undefined State&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/watch-out-for-undefined-state/&quot; title=&quot;Watch Out for Undefined State&quot;&gt;daveceddia.com/watch-out-for-undefined-state/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
React 컴포넌트에서 컴포넌트 내의 state로 의존 하고 있는 것을 props로 이동시키는 일종의 리팩터링 기법을 소개합니다.&lt;br&gt;
컴포넌트의 state는 기본적으로 undefined인 상태로 시작되기 때문에 &lt;code&gt;render()&lt;/code&gt; 작성 시 고려해야하는 점과 효율적으로 작성하는 방법을 다루고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-promise-of-a-burger-party---mariko-kosaka&quot;&gt;The Promise of a Burger Party - Mariko Kosaka&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://kosamari.com/notes/the-promise-of-a-burger-party&quot; title=&quot;The Promise of a Burger Party - Mariko Kosaka&quot;&gt;kosamari.com/notes/the-promise-of-a-burger-party&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;다이어그램&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Promise를 햄버거 가게를 예로 들어 소개하고 있는 글입니다.&lt;br&gt;
각 절마다 다이어그램 또는 그림을 인용해가면서 Promise의 resolve와 reject의 동작 방식에 대해 알기 쉽게 설명돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;detecting-text-in-an-image-on-the-web-in-real-time---tales-of-a-developer-advocate-by-paul-kinlan&quot;&gt;Detecting text in an image on the web in real-time - Tales of a Developer Advocate by Paul Kinlan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://paul.kinlan.me/detecting-text-in-an-image/&quot; title=&quot;Detecting text in an image on the web in real-time - Tales of a Developer Advocate by Paul Kinlan&quot;&gt;paul.kinlan.me/detecting-text-in-an-image/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
이미지 인식, 얼굴 인식, 바코드 인식, 이미지에서 텍스트를 인식하는 브라우저 API에 관해 소개돼 있습니다.&lt;br&gt;
- &lt;a href=&quot;https://wicg.github.io/shape-detection-api/&quot; title=&quot;Accelerated Shape Detection in Images&quot;&gt;Accelerated Shape Detection in Images&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-the-critical-rendering-path&quot;&gt;Understanding the Critical Rendering Path&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsofco.de/understanding-the-critical-rendering-path/&quot; title=&quot;Understanding the Critical Rendering Path&quot;&gt;bitsofco.de/understanding-the-critical-rendering-path/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
크리티컬 렌더링 패스란 무엇인지 설명돼 있는 글입니다.&lt;br&gt;
브라우저가 어떤 흐름으로 렌더링까지 이뤄지는지 소개하고 개발자 도구를 사용해 렌더링 흐름과 관련된 이벤트를 살펴보는 방법도 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-@-2017-01-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2017-01 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2017/01/30/ecmascript-proposals-status&quot; title=&quot;ECMAScript proposal updates @ 2017-01 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2017/01/30/ecmascript-proposals-status&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
2017년 1월 지점에서의 ECMAScript Proposal의 Stage가 정리돼 있습니다. 2017년 1월의 미팅에서 5개의 Proposal이 추가됐고 Shared memory and atomics는 ES2017에 들어갔습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimizing-the-performance-of-your-react-application&quot;&gt;Optimizing the Performance of Your React Application&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/optimizing-react/&quot; title=&quot;Optimizing the Performance of Your React Application&quot;&gt;auth0.com/blog/optimizing-react/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
&lt;code&gt;react-addons-perf&lt;/code&gt;를 사용해 React 컴포넌트의 성능을 측정하는 방법을 소개하는 글입니다.&lt;br&gt;
또, &lt;code&gt;React.PureComponent&lt;/code&gt;를 사용해 &lt;code&gt;shouldComponentUpdate&lt;/code&gt;의 판정이 제대로 이뤄지도록 하여 성능 개선하는 방법도 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;knq/chromedp:-package-chromedp-is-a-faster,-simpler-way-to-drive-browsers-(chrome,-edge,-safari,-android,-etc)-without-external-dependencies-(ie,-selenium,-phantomjs,-etc).&quot;&gt;knq/chromedp: Package chromedp is a faster, simpler way to drive browsers (Chrome, Edge, Safari, Android, etc) without external dependencies (ie, Selenium, PhantomJS, etc).&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/knq/chromedp&quot; title=&quot;knq/chromedp: Package chromedp is a faster, simpler way to drive browsers (Chrome, Edge, Safari, Android, etc) without external dependencies (ie, Selenium, PhantomJS, etc).&quot;&gt;github.com/knq/chromedp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;golang&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
ChromeDebugging Protocol을 사용해 구현한 브라우저를 조작할 수 있는 도구입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-isomorphic-development-with-javascript&quot;&gt;Manning | Isomorphic Development with JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/isomorphic-development-with-javascript&quot; title=&quot;Manning | Isomorphic Development with JavaScript&quot;&gt;www.manning.com/books/isomorphic-development-with-javascript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;br&gt;
Isomorphic JavaScript에 대해 설명하는 도서입니다.&lt;br&gt;
브라우저와 Node.js에서 공유하면서 웹 애플리케이션을 만드는 방법을 소개합니다.&lt;br&gt;
React + Redux와 Angular2 그리고 Ember를 다루고 있습니다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 30 Jan 2017 23:30:24 +0900</pubDate>
        <link>https://jser.info/ko/2017/01/30/safari-10.1-firefox51.0-type-refactoring/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/01/30/safari-10.1-firefox51.0-type-refactoring/</guid>
        
        <category>Firefox</category>
        
        <category>Safari</category>
        
        <category>TypeScript</category>
        
        <category>Flow</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-01-17 JS: Safari Technology Preview Release 21, Protractor 5.0.0</title>
        <description>&lt;p&gt;JSer.info #314 - &lt;a href=&quot;https://webkit.org/blog/7265/release-notes-for-safari-technology-preview-21/&quot; title=&quot;Safari Technology Preview Release 21&quot;&gt;Safari Technology Preview Release 21&lt;/a&gt;이 릴리즈됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt;&lt;/code&gt;을 지원하며 ECMAScript modules를 이용할 수 있습니다.&lt;br&gt;
 ECMAScript modules에 대한 것은 아래의 문서에 잘 정리돼 있으며 Safari 에서의 설정 방법도 소개돼 있으므로 함께 살펴보면 좋을 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-the-first-overview&quot; title=&quot;Native ECMAScript modules - the first overview&quot;&gt;Native ECMAScript modules - the first overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;E2E 테스트 프레임워크 &lt;a href=&quot;http://www.protractortest.org/&quot; title=&quot;Protractor&quot;&gt;Protractor&lt;/a&gt; &lt;a href=&quot;https://github.com/angular/protractor/blob/5.0.0/CHANGELOG.md&quot; title=&quot;5.0.0&quot;&gt;5.0.0&lt;/a&gt;이 릴리즈 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/protractor/blob/5.0.0/CHANGELOG.md&quot; title=&quot;protractor/CHANGELOG.md at 5.0.0 · angular/protractor&quot;&gt;protractor/CHANGELOG.md at 5.0.0 · angular/protractor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/CHANGES.md#v300&quot; title=&quot;selenium-webdriver&quot;&gt;selenium-webdriver v3.x&lt;/a&gt;로 업데이트 됐기 때문에 API 인터페이스도 함께 변경됐습니다.&lt;br&gt;
또, 실행에 필요한 Node.js의 버전도 v6.9.x 이상으로 변경됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;공지&quot;&gt;공지&lt;/h2&gt;

&lt;p&gt;1월 15일에 JSer.info 6주년 기념 이벤트를 개최했습니다.&lt;br&gt;
당일에 발표된 슬라이드 및 속기록 등은 아래 문서에 정리했으니 관심있는 분은 보시길 바랍니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2017/01/15/jser-info-6years/&quot; title=&quot;JSer.info 6주년 기념 이벤트를 개최했습니다 - JSer.info&quot;&gt;JSer.info 6주년 기념 이벤트를 개최했습니다 - JSer.info&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.4.0-·-karma-runner/karma&quot;&gt;Release v1.4.0 · karma-runner/karma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karma-runner/karma/releases/tag/v1.4.0&quot; title=&quot;Release v1.4.0 · karma-runner/karma&quot;&gt;github.com/karma-runner/karma/releases/tag/v1.4.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Karma v1.4.0이 릴리즈됐습니다.&lt;br&gt;
HTTP module을 설정하는 것으로 &lt;code&gt;node-http2&lt;/code&gt; 등을 이용할 수 있고, 상수를 &lt;code&gt;karma.constants&lt;/code&gt;로 export할 수 있게 되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mobx/changelog.md-at-3.0.0-·-mobxjs/mobx&quot;&gt;mobx/CHANGELOG.md at 3.0.0 · mobxjs/mobx&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx/blob/3.0.0/CHANGELOG.md&quot; title=&quot;mobx/CHANGELOG.md at 3.0.0 · mobxjs/mobx&quot;&gt;github.com/mobxjs/mobx/blob/3.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MobX 3이 릴리즈됐습니다.&lt;br&gt;
각 타입에 대한 옵저버블을 생성할 수 있는 옵저버블 팩토리 메서드 추가, 전달 받은 객체를 clone 하도록 변경, 에러 핸들링의 개선 등이 이뤄졌습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://lealog.hateblo.jp/entry/2017/01/11/140607&quot; title=&quot;MobX 3.0.0 MobX 3.0.0의 변경 사항에 대해 - console.lealog();&quot;&gt;MobX 3.0.0의 변경 사항에 대해 - console.lealog();&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@mweststrate/mobx-3-released-unpeeling-the-onion-ca877382f443&quot; title=&quot;MobX 3 released: Unpeeling the onion – Medium&quot;&gt;MobX 3 released: Unpeeling the onion – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-21-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 21 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7265/release-notes-for-safari-technology-preview-21/&quot; title=&quot;Release Notes for Safari Technology Preview 21 | WebKit&quot;&gt;webkit.org/blog/7265/release-notes-for-safari-technology-preview-21/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 21이 릴리즈됐습니다.&lt;br&gt;
Concurrent GC와 &lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt;&lt;/code&gt; 활성화했고 &lt;code&gt;global&lt;/code&gt;이 지원됐었지만 break the web으로 인해 backout 되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://trac.webkit.org/changeset/210570&quot; title=&quot;체인지 셋 210570 – WebKit&quot;&gt;체인지 셋 210570 – WebKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-global/issues/20&quot; title=&quot;global breaks flickr.com · Issue #20 · tc39/proposal-global&quot;&gt;global breaks flickr.com · Issue #20 · tc39/proposal-global&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.hospodarets.com/native-ecmascript-modules-the-first-overview&quot; title=&quot;Native ECMAScript modules - the first overview&quot;&gt;Native ECMAScript modules - the first overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;protractor/changelog.md-at-5.0.0-·-angular/protractor&quot;&gt;protractor/CHANGELOG.md at 5.0.0 · angular/protractor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor/blob/5.0.0/CHANGELOG.md&quot; title=&quot;protractor/CHANGELOG.md at 5.0.0 · angular/protractor&quot;&gt;github.com/angular/protractor/blob/5.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Protractor 5.0.0이 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;selenium-webdriver&lt;/code&gt; 3.0.x로 업데이트 하면서 API 인터페이스가 변경됐으며 알 수 없는 플러그는 에러를 발생 시키도록 변경 됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript:-the-missing-introduction&quot;&gt;TypeScript: the missing introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://toddmotto.com/typescript-the-missing-introduction&quot; title=&quot;TypeScript: the missing introduction&quot;&gt;toddmotto.com/typescript-the-missing-introduction&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript라는 언어가 어떠한 구조로 동작하고 또 JavaScript와 비교해 어떠한 역할을 담당하고 있는지 등 개요 격의 이야기를 친절하게 설명하고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;practical-redux-·-mark&amp;#x27;s-dev-blog&quot;&gt;Practical Redux · Mark&amp;#x27;s Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.isquaredsoftware.com/series/practical-redux/&quot; title=&quot;Practical Redux · Mark&amp;#39;s Dev Blog&quot;&gt;blog.isquaredsoftware.com/series/practical-redux/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;게임 관리 도구를 소재로 Redux에 관해 소개하는 연재 글입니다.&lt;br&gt;
&lt;code&gt;Redux-ORM&lt;/code&gt;을 사용한 모델 작성, Semantic-UI로 UI 작성, 디렉터리 구조, 디버깅 방법, 컴포넌트 리팩터링 방법 등을 다루고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;side-effects-in-js-promise-chains-–-medium&quot;&gt;Side Effects in JS Promise chains – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@gabrielcatalin/side-effects-in-js-promise-chains-7db50b6302f3&quot; title=&quot;Side Effects in JS Promise chains – Medium&quot;&gt;medium.com/@gabrielcatalin/side-effects-in-js-promise-chains-7db50b6302f3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promise chain에서 사이드 이펙트가 있는 처리를 포함할 때 처리가 도중에 끊어져 버리는 문제에 관해 이야기합니다.&lt;br&gt;
&lt;code&gt;passThrough()&lt;/code&gt;와 같은 고차 함수를 준비하고 사이드 이펙트 관련 처리를 명시적으로 다뤄 버그를 줄일 수 있는 방법을 소개하고 있습니다&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typedarray-or-dataview:-understanding-byte-order-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;TypedArray or DataView: Understanding byte order ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2017/01/typedarray-or-dataview-understanding-byte-order/&quot; title=&quot;TypedArray or DataView: Understanding byte order ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2017/01/typedarray-or-dataview-understanding-byte-order/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, &lt;code&gt;DataView&lt;/code&gt;을 설명하는 글입니다.&lt;br&gt;
&lt;code&gt;ArrayBuffer&lt;/code&gt;가 바이너리 데이터 구조고 &lt;em&gt;view&lt;/em&gt;로써 &lt;code&gt;TypedArray&lt;/code&gt;와 &lt;code&gt;DataView&lt;/code&gt;가 있다는 이야기입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-components-v1---the-next-generation-|-web-|-google-developers&quot;&gt;Web Components v1 - the next generation  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/01/webcomponents-org&quot; title=&quot;Web Components v1 - the next generation  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2017/01/webcomponents-org&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Components v1에 맞춰 webcomponents.org가 업데이트 됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;arqex/freezer:-a-tree-data-structure-that-emits-events-on-updates,-even-if-the-modification-is-triggered-by-one-of-the-leaves,-making-it-easier-to-think-in-a-reactive-way.&quot;&gt;arqex/freezer: A tree data structure that emits events on updates, even if the modification is triggered by one of the leaves, making it easier to think in a reactive way.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/arqex/freezer&quot; title=&quot;arqex/freezer: A tree data structure that emits events on updates, even if the modification is triggered by one of the leaves, making it easier to think in a reactive way.&quot;&gt;github.com/arqex/freezer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Immutable.js와 같은 Immutable한 데이터 구조를 다룰 수 있는 라이브러리입니다.&lt;br&gt;
변경을 통지하는 이벤트 시스템을 제공하고 Immutable.js 보다 용량도 작습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;siema---lightweight-and-simple-carousel-with-no-dependencies&quot;&gt;Siema - Lightweight and simple carousel with no dependencies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pawelgrzybek.com/siema/&quot; title=&quot;Siema - Lightweight and simple carousel with no dependencies&quot;&gt;pawelgrzybek.com/siema/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;의존 라이브러리 없이 구현한 캐러셀(Carrousel) 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angus-c/just:-a-library-of-dependency-free-utilities-that-do-just-do-one-thing.&quot;&gt;angus-c/just: A library of dependency-free utilities that do just do one thing.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angus-c/just&quot; title=&quot;angus-c/just: A library of dependency-free utilities that do just do one thing.&quot;&gt;github.com/angus-c/just&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;의존성 없는 작은 사이즈의 유틸리티 라이브러리 셋입니다&lt;br&gt;
각각의 기능을 개별 모듈로써 설치해 사용할 수 있습니다.&lt;br&gt;
각각의 &lt;code&gt;just-*&lt;/code&gt; 모듈 간에서도 의존 관계가 없이 만들어져 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@angustweets/just-a12d54221f65&quot; title=&quot;Why I wrote Just. – Medium&quot;&gt;Why I wrote Just. – Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angus-c/just/issues/4&quot; title=&quot;Just vs lodash · Issue #4 · angus-c/just&quot;&gt;Just vs lodash · Issue #4 · angus-c/just&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yamafaktory/shrimpit:-shrimpit-is-a-small-cli-analysis-tool-for-checking-unused-javascript,-jsx-&amp;amp;-vue-templates-es6-exports-in-your-project.&quot;&gt;yamafaktory/shrimpit: Shrimpit is a small CLI analysis tool for checking unused JavaScript, JSX &amp;amp; Vue templates ES6 exports in your project.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yamafaktory/shrimpit&quot; title=&quot;yamafaktory/shrimpit: Shrimpit is a small CLI analysis tool for checking unused JavaScript, JSX &amp;amp; Vue templates ES6 exports in your project.&quot;&gt;github.com/yamafaktory/shrimpit&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;각 모듈의 import/export를 훑어 보면서 미사용 모듈을 출력해주는 CLI 도구입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;katat/vbot:-json-based-visual-regression-testing-tool,-particularly-useful-for-spa-or-complicated-web-app&quot;&gt;katat/vbot: JSON based visual regression testing tool, particularly useful for SPA or complicated web app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/katat/vbot&quot; title=&quot;katat/vbot: JSON based visual regression testing tool, particularly useful for SPA or complicated web app&quot;&gt;github.com/katat/vbot&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSON 기반의 회귀(regression) 테스트 도구입니다.&lt;br&gt;
JSON으로 시나리오를 작성하며 스크린샷으로 결과를 비교할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://katat.github.io/2017/01/09/vbot/&quot; title=&quot;vbot - JSON based visual regression tester - Kata Tech Life&quot;&gt;vbot - JSON based visual regression tester - Kata Tech Life&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;landmarks-browser-extension&quot;&gt;Landmarks browser extension&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://matatk.agrip.org.uk/landmarks/&quot; title=&quot;Landmarks browser extension&quot;&gt;matatk.agrip.org.uk/landmarks/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WAI-ARIA의 landmark 네비게이션을 활성화하는 브라우저 확장 플러그인(extension)입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tsayen/dom-to-image:-generates-an-image-from-a-dom-node-using-html5-canvas&quot;&gt;tsayen/dom-to-image: Generates an image from a DOM node using HTML5 canvas&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tsayen/dom-to-image&quot; title=&quot;tsayen/dom-to-image: Generates an image from a DOM node using HTML5 canvas&quot;&gt;github.com/tsayen/dom-to-image&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVG의 &lt;code&gt;&amp;lt;foreignObject&amp;gt;&lt;/code&gt;를 사용해 HTML의 렌더링 결과를 Canvas를 경유해 사진으로 취득할 수 있는 라이브러리입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas&quot; title=&quot;Drawing DOM objects into a canvas - HTML | MDN&quot;&gt;Drawing DOM objects into a canvas - HTML | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modclean/modclean:-remove-unwanted-files-and-directories-from-your-node_modules-folder&quot;&gt;ModClean/modclean: Remove unwanted files and directories from your node_modules folder&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ModClean/modclean&quot; title=&quot;ModClean/modclean: Remove unwanted files and directories from your node\_modules folder&quot;&gt;github.com/ModClean/modclean&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;node_modules에서 불필요한 파일을 삭제할 수 있는 도구입니다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 17 Jan 2017 09:49:00 +0900</pubDate>
        <link>https://jser.info/ko/2017/01/17/safari-technology-preview-release-21-protractor-5.0.0/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/01/17/safari-technology-preview-release-21-protractor-5.0.0/</guid>
        
        <category>Safari</category>
        
        <category>testing</category>
        
        <category>E2E</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-01-11 JS: Node.js v7.4.0와 npm v4, PhantomJS 2.5.0 Beta, 클린코드</title>
        <description>&lt;p&gt;JSer.info #313 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v7.4.0/&quot; title=&quot;Node v7.4.0&quot;&gt;Node v7.4.0&lt;/a&gt;이 릴리즈됐습니다.&lt;br&gt;
Buffer와 EventEmitter의 성능 개선이 이뤄졌습니다.&lt;br&gt;
또, 이번 버전부터 npm의 버전이 &lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.0.5&quot; title=&quot;v4.0.5&quot;&gt;v4.0.5&lt;/a&gt;로 변경됩니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/npm/blob/v4.0.5/CHANGELOG.md&quot; title=&quot;npm/CHANGELOG.md at v4.0.5 · npm/npm&quot;&gt;npm/CHANGELOG.md at v4.0.5 · npm/npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm v4에서는 &lt;code&gt;prepublish&lt;/code&gt; 라이프 사이클이 &lt;code&gt;prepublishOnly&lt;/code&gt;와 &lt;code&gt;prepare&lt;/code&gt;로 분할됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://iamakulov.com/notes/all/npm-4-prepublish/&quot; title=&quot;npm 4 is splitting the “prepublish” script into “prepublishOnly” and “prepare”&quot;&gt;npm 4 is splitting the “prepublish” script into “prepublishOnly” and “prepare”&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;에 기본적으로 &lt;code&gt;devDependencies&lt;/code&gt;가 포함돼도록 변경 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/shinout/items/97e4ae21800bbc98f2c0&quot; title=&quot;npm shrinkwrap를 운용에서 사용하기 위한 요령 - Qiita&quot;&gt;npm shrinkwrap를 운용에서 사용하기 위한 요령 - Qiita&lt;/a&gt;(일본어)

&lt;ul&gt;
&lt;li&gt;npm v3 이하 환경에서의 shrinkwrap 동작에 관해 작성돼 있습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외에도 비권장 커맨드가 삭제되거나 일부 동작을 변경 및 개선하는 등 다양한 변경 사항이 있습니다. 자세한 내용은 아래 CHANGELOG를 참조해주길 바랍니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/npm/blob/v4.0.5/CHANGELOG.md&quot; title=&quot;npm/CHANGELOG.md at v4.0.5 · npm/npm&quot;&gt;npm/CHANGELOG.md at v4.0.5 · npm/npm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/ko/2016/10/24/npm-4.0.0-node.js-v6.9.0-lts-webpack2/&quot; title=&quot;2016-10-24 JS: npm 4.0.0, Node.js v6.9.0 (LTS), webpack@2 마이그레이션 - JSer.info&quot;&gt;2016-10-24 JS: npm 4.0.0, Node.js v6.9.0 (LTS), webpack@2 마이그레이션 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.risingstack.com/yarn-vs-npm-node-js-package-managers/&quot; title=&quot;Yarn vs npm - The State of Node.js Package Managers | @RisingStack&quot;&gt;Yarn vs npm - The State of Node.js Package Managers | @RisingStack&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;npm v4의 변경 사항에 관해서도 작성돼 있으니 함께 살펴보면 좋을 것 같습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;헤드리스 브라우저 &lt;a href=&quot;https://groups.google.com/forum/#!topic/phantomjs/AefOuwkgBh0&quot; title=&quot;PhantomJS 2.5.0 Beta&quot;&gt;PhantomJS 2.5.0 Beta&lt;/a&gt;가 릴리즈됐습니다.&lt;/p&gt;

&lt;p&gt;의존하는 QTWebKit이 업데이트 되어 ES2015의 기능을 지원하게 됐습니다.&lt;br&gt;
QTWebKit에 관한 변경 내용은 아래를 참고해주세요.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/annulen/webkit/wiki/Comparison-with-QtWebKit-5.6&quot; title=&quot;Comparison with QtWebKit 5.6 · annulen/webkit Wiki&quot;&gt;Comparison with QtWebKit 5.6 · annulen/webkit Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot; title=&quot;ryanmcdermott/clean-code-javascript: Clean Code concepts adapted for JavaScript&quot;&gt;ryanmcdermott/clean-code-javascript&lt;/a&gt;에는 &lt;a href=&quot;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot; title=&quot;Clean Code&quot;&gt;Clean Code&lt;/a&gt;의 내용을 기반으로 한 가이드라인이 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;ES2015 기반으로 작성한 샘플 코드와 함께 읽기 쉽고 재사용 및 리팩터링하기 쉬운 코드에 관해 이야기합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;공지사항&quot;&gt;공지사항&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.connpass.com/event/46997/&quot; title=&quot;JSer.info 6주년과 300회 기념 이벤트&quot;&gt;JSer.info 6주년과 300회 기념 이벤트&lt;/a&gt;(일본어)는 이번 주말 2017/01/15(日)에 개최합니다(개장은 13:30부터).&lt;/p&gt;

&lt;p&gt;행사 입장에 필요한 출입 ID는 connpass의 메시지를 통해 메일로 발송 됐을 것입니다. 한번 확인 부탁드립니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-inferno-1.0-–-inferno_js-–-medium&quot;&gt;Introducing Inferno 1.0 – inferno_js – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/inferno-js/introducing-inferno-1-0-f3da5c4e773b&quot; title=&quot;Introducing Inferno 1.0 – inferno\_js – Medium&quot;&gt;medium.com/inferno-js/introducing-inferno-1-0-f3da5c4e773b&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Inferno 1.0이 릴리즈됐습니다.&lt;br&gt;
Inferno가 왜 만들어졌는지 이야기하고 향후 로드맵을 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.4.0-(current)-|-node.js&quot;&gt;Node v7.4.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.4.0/&quot; title=&quot;Node v7.4.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.4.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 7.4.0이 릴리즈됐습니다.&lt;br&gt;
Buffer, &lt;code&gt;EventEmitter.once&lt;/code&gt;의 성능이 개선 됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;[release]-phantomjs-2.5.0-beta---google-그룹스&quot;&gt;[Release] PhantomJS 2.5.0 Beta - Google 그룹스&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/topic/phantomjs/AefOuwkgBh0&quot; title=&quot;\[Release\] PhantomJS 2.5.0 Beta - Google グループ&quot;&gt;groups.google.com/d/topic/phantomjs/AefOuwkgBh0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PhantomJS 2.5.0β가 릴리즈됐습니다.&lt;br&gt;
QtWebKit이 업데이트 되어 ES2015와 WebP를 사용할 수 있게 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/annulen/webkit/wiki/Comparison-with-QtWebKit-5.6&quot; title=&quot;Comparison with QtWebKit 5.6 · annulen/webkit Wiki&quot;&gt;Comparison with QtWebKit 5.6 · annulen/webkit Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-build-15002-changelog---microsoft-edge-development&quot;&gt;Microsoft Edge build 15002 changelog - Microsoft Edge Development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/15002/&quot; title=&quot;Microsoft Edge build 15002 changelog - Microsoft Edge Development&quot;&gt;developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/15002/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Windows 10 build 15002가 릴리즈 됐습니다.&lt;br&gt;
MSEdge에서 Flash를 클릭해야만 재생되도록(Click to play) 변경 됐고 Web Payments를 시험적으로 지원하며 CSP 2.0과 WebVR API를 지원합니다. 또, 오리진이 다른 페이지에서의 setTimeout/requestAnimationFrame 호출을 억제하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-arrow-functions-in-depth&quot;&gt;ES6 arrow functions in depth&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codesi.nz/es6-arrow-functions-in-depth/&quot; title=&quot;ES6 arrow functions in depth&quot;&gt;codesi.nz/es6-arrow-functions-in-depth/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Arrow Function관해 세세하게 소개하는 글입니다.&lt;br&gt;
&lt;code&gt;this&lt;/code&gt;의 동작과 암묵적 &lt;code&gt;return&lt;/code&gt;에 관해 설명 돼 있습니다.&lt;br&gt;
또, &lt;code&gt;new&lt;/code&gt;가 불가능한 점, &lt;code&gt;new.target&lt;/code&gt;나 &lt;code&gt;arguements&lt;/code&gt;를 사용할 수 없는 점에 관해서도 이야기합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-sass-to-postcss-by-tyler-gaw&quot;&gt;From Sass to PostCSS by Tyler Gaw&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tylergaw.com/articles/sass-to-postcss&quot; title=&quot;From Sass to PostCSS by Tyler Gaw&quot;&gt;tylergaw.com/articles/sass-to-postcss&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sass였던 환경을 PostCSS로 바꾸기 까지의 일종의 삽질기입니다.&lt;br&gt;
Sass의 구문과 PostCSS의 확장(cssnext)을 비교합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es-proposal:-import()&quot;&gt;ES proposal: import()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2017/01/import-operator.html&quot; title=&quot;ES proposal: import()&quot;&gt;www.2ality.com/2017/01/import-operator.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;현재 Stage 3의 Proposal인 &lt;code&gt;import()&lt;/code&gt;에 관해 설명하는 글입니다.&lt;br&gt;
dynamic module imports에 관한 사양에 대해 다루고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yarn-vs-npm---the-state-of-node.js-package-managers-|-@risingstack&quot;&gt;Yarn vs npm - The State of Node.js Package Managers | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.risingstack.com/yarn-vs-npm-node-js-package-managers/&quot; title=&quot;Yarn vs npm - The State of Node.js Package Managers | @RisingStack&quot;&gt;blog.risingstack.com/yarn-vs-npm-node-js-package-managers/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm v4와 Yarn에 관해 이야기합니다.&lt;br&gt;
npm v4에서 추가된 기능을 소개하고 Yarn의 기능이나 lock 파일에 관해 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-animation-in-2017-|-nothing-new&quot;&gt;Web animation in 2017 | Nothing new&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://birtles.wordpress.com/2017/01/10/web-animation-in-2017/&quot; title=&quot;Web animation in 2017 | Nothing new&quot;&gt;birtles.wordpress.com/2017/01/10/web-animation-in-2017/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Animation과 관련된 사양의 스테이터스가 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-a-custom-tag-input-with-skate.js&quot;&gt;Building a custom tag input with Skate.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hackernoon.com/building-a-custom-tag-input-with-skate-js-fbd4cdf744f&quot; title=&quot;Building a custom tag input with Skate.js&quot;&gt;hackernoon.com/building-a-custom-tag-input-with-skate-js-fbd4cdf744f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Components 프레임워크인 Skate.js를 사용해 태그 입력 컴포넌트를 만드는 과정을 소개합니다.&lt;br&gt;
값이나 스타일을 정의하는 방법 등에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux를-사용하지-않고-react-컴포넌트-간-커뮤니케이션-하는-8가지-방법---qiita(일본어)&quot;&gt;Flux를 사용하지 않고 React 컴포넌트 간 커뮤니케이션 하는 8가지 방법 - Qiita(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/kyoshidajp/items/0ddb156d96bb6337f623&quot; title=&quot;Flux를 사용하지 않고 React 컴포넌트 간 커뮤니케이션 하는 8가지 방법 - Qiita&quot;&gt;qiita.com/kyoshidajp/items/0ddb156d96bb6337f623&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;번역&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React 컴포넌트 간 값이나 상태를 전달하거나 동기화하는 패턴에 관해 소개하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://andrewhfarmer.com/component-communication/&quot;&gt;8 no-Flux strategies for React component communication&lt;/a&gt;(원문, 영어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ryanmcdermott/clean-code-javascript:-clean-code-concepts-adapted-for-javascript&quot;&gt;ryanmcdermott/clean-code-javascript: Clean Code concepts adapted for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanmcdermott/clean-code-javascript&quot; title=&quot;ryanmcdermott/clean-code-javascript: Clean Code concepts adapted for JavaScript&quot;&gt;github.com/ryanmcdermott/clean-code-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OOP&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;클린코드를 자바스크립트 환경에서 실천하는 가이드 라인입니다.&lt;br&gt;
읽기 쉬운 코드를 작성하는 방법과 객체 지향 프로그래밍 및 SOLID 실천법 등을 ES2015+ 문법을 사용해 알기 쉽게 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;세로-쓰기-web-보급-위원회(일본어)&quot;&gt;세로 쓰기 Web 보급 위원회(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tategaki.github.io/&quot; title=&quot;세로 쓰기 Web 보급 위원회&quot;&gt;tategaki.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;세로 쓰기 CSS관해 설명돼 있는 사이트입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow-runtime&quot;&gt;Flow Runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codemix.github.io/flow-runtime/&quot; title=&quot;Flow Runtime&quot;&gt;codemix.github.io/flow-runtime/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow와 호환되는 런타임 타입 체크 바벨 플러그인입니다.&lt;br&gt;
Flow로 작성한 코드를 런타임 체크할 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;talyssonoc/structure:-a-simple-schema/attributes-library-built-on-top-of-modern-javascript&quot;&gt;talyssonoc/structure: A simple schema/attributes library built on top of modern JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/talyssonoc/structure&quot; title=&quot;talyssonoc/structure: A simple schema/attributes library built on top of modern JavaScript&quot;&gt;github.com/talyssonoc/structure&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015 classes의 모델에 대응해 스키마를 정의할 수 있는 라이브러입니다.&lt;br&gt;
작성된 스키마를 바탕으로 값을 검증하거나 직렬화 할 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wheresrhys/fetch-mock:-mock-http-requests-made-using-fetch-(or-isomorphic-fetch)&quot;&gt;wheresrhys/fetch-mock: Mock http requests made using fetch (or isomorphic-fetch)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wheresrhys/fetch-mock&quot; title=&quot;wheresrhys/fetch-mock: Mock http requests made using fetch (or isomorphic-fetch)&quot;&gt;github.com/wheresrhys/fetch-mock&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch API의 목(Mock) 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;danculley/real-dom:-a-~1k-non-virtual-dom-non-framework-framework-for-simple-apps&quot;&gt;danculley/real-dom: A ~1K non-virtual DOM non-framework framework for simple apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/danculley/real-dom&quot; title=&quot;danculley/real-dom: A ~1K non-virtual DOM non-framework framework for simple apps&quot;&gt;github.com/danculley/real-dom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux 스러운 State 머신을 다루는 DOM 컴포넌트 라이브러리입니다. 컴포넌트 작성시엔 JSX로도 작성할 수 있습니다.&lt;br&gt;
약 50줄 정도의 코드로 구현돼 있는 정말 작은 사이즈의 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xvg&quot;&gt;xvg&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://xvg.now.sh/&quot; title=&quot;xvg&quot;&gt;xvg.now.sh/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVG path의 아웃라인 및 앵커를 표시하여 디버깅할 수 있도록 하는 Chrome 확장 플러그인입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodekit&quot;&gt;NodeKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodekit.io/&quot; title=&quot;NodeKit&quot;&gt;nodekit.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js를 iOS/Android/Windows 등의 애플리케이션에 넣어 사용할 수 있도록 하는 프레임워크입니다. &lt;br&gt;
JavaScript 바인딩에 JavaScriptCore나 ChackraCore를 사용합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jlongster/prettier:-prettier-is-an-opinionated-javascript-formatter.&quot;&gt;jlongster/prettier: Prettier is an opinionated JavaScript formatter.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jlongster/prettier&quot; title=&quot;jlongster/prettier: Prettier is an opinionated JavaScript formatter.&quot;&gt;github.com/jlongster/prettier&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;탭 사이즈, 한 줄 사이즈 등을 설정해 코드를 일괄 정리할 수 있는 JavaScript 포멧팅 도구입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jlongster.com/A-Prettier-Formatter&quot; title=&quot;A Prettier JavaScript Formatter&quot;&gt;A Prettier JavaScript Formatter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;o&amp;#x27;reilly-japan---처음-시작하는-javascript-제-3-판(일본어)&quot;&gt;O&amp;#x27;Reilly Japan - 처음 시작하는 JavaScript 제 3 판(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oreilly.co.jp/books/9784873117836/&quot; title=&quot;O&amp;#39;Reilly Japan - 처음 시작하는 JavaScript 제 3 판&quot;&gt;www.oreilly.co.jp/books/9784873117836/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017년 1월 20일에 출간되는 Learning JavaScript의 번역서 입니다.&lt;br&gt;
ES2015+에 대한 내용이 추가됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.marlin-arms.com/support/ljs3/&quot; title=&quot;처음 시작하는 JavaScript 제 3 판 서포트 페이지 - 마린 암즈&quot;&gt;처음 시작하는 JavaScript 제 3 판 서포트 페이지 마린 암즈&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920035534.do&quot;&gt;Learning JavaScript, 3rd Edition&lt;/a&gt;(원서, 영어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-handbook-2017-·-gitbook&quot;&gt;Front-end Handbook 2017 · GitBook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gitbook.com/book/frontendmasters/front-end-handbook-2017/details&quot; title=&quot;Front-end Handbook 2017 · GitBook&quot;&gt;www.gitbook.com/book/frontendmasters/front-end-handbook-2017/details&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;프런트엔드에 관한 정보를 정리한 2017년 버전의 전자 서적입니다. 2016년 버전은 아래 링크를 참고해주세요.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/frontendmasters/front-end-handbook/details&quot; title=&quot;Front-end Handbook 2016 · GitBook&quot;&gt;Front-end Handbook 2016 · GitBook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 11 Jan 2017 09:36:00 +0900</pubDate>
        <link>https://jser.info/ko/2017/01/11/Node.js-v7.4.0-npm-v4-PhantomJS-2.5.0-Beta-clean-code/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/01/11/Node.js-v7.4.0-npm-v4-PhantomJS-2.5.0-Beta-clean-code/</guid>
        
        <category>Node.js</category>
        
        <category>npm</category>
        
        <category>webkit</category>
        
        <category>PhantomJS</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2017-01-04 JS: PostCSS 개요, Chrome 개발자 도구, FuseBox</title>
        <description>&lt;p&gt;JSer.info #312 - &lt;a href=&quot;http://qiita.com/morishitter/items/4a04eb144abf49f41d7d&quot; title=&quot;PostCSS 정리 - Qiita&quot;&gt;PostCSS 정리 - Qiita&lt;/a&gt;(일본어)에는 &lt;a href=&quot;https://github.com/postcss/postcss&quot; title=&quot;PostCSS&quot;&gt;PostCSS&lt;/a&gt;란 무엇인지에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;PostCSS는 CSS의 기반 도구 또는 일종의 프레임워크로 CSS 파서나 제너레이터 등을 플러그인으로서 추가해 CSS 관련 여러가지 처리를 할 수 있는 기능을 제공합니다(파서 자체도 플러그인으로 확장할 수 있으므로 Sass도 포함할 수 있습니다).&lt;/p&gt;

&lt;p&gt;이 글에서는 PostCSS의 정의 뿐 아니라 PostCSS 환경에서 사용할 수 있는 프리프로세스와 Linter 관련 도구 등도 함께 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://umaar.github.io/devtools-optimise-your-web-development-workflow-2016/#/&quot; title=&quot;Optimise your web development workflow 2016&quot;&gt;Optimise your web development workflow 2016&lt;/a&gt;에는 Chrome 개발자 도구의 다양한 기능을 GIF 사진과 함께 자세히 소개돼 있습니다.&lt;/p&gt;

&lt;p&gt;Elements, Timeline, Networks, Audits 패널에 있는 기능과 이와 관련된 사양 및 도구 등도 함께 소개합니다.&lt;br&gt;
한번 살펴보면 재미있을 것 같습니다.&lt;/p&gt;

&lt;p&gt;또, 아래 사이트에서는 1Tips/1Page 형식으로 개발자 도구 관련 팁을 소개하고 있으므로 앞서 소개드린 슬라이드와 함께 읽으면 좋을 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://umaar.com/dev-tips/&quot; title=&quot;Dev Tips - Developer Tips by Umar Hansa&quot;&gt;Dev Tips - Developer Tips by Umar Hansa&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;bundler/module loader 도구 &lt;a href=&quot;http://fuse-box.org/&quot; title=&quot;Fusebox&quot;&gt;Fusebox&lt;/a&gt;가 공개됐습니다.&lt;br&gt;
webpack 등과 같은 도구로 플러그인으로 변환 레이어를 추가할 수 있고, 그 결과를 단일 파일로 묶어주는 bundler 입니다.&lt;br&gt;
또, webpack이나 SystemJS 등과 비슷한 기능을 제공하는 &lt;code&gt;FuseBox.import&lt;/code&gt; 라는 Loader API도 함께 이용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;빠른 변환 속도가 장점 중 하나로 모듈의 의존 관계와 변환 후의 파일을 캐시하여 재변환 시의 처리 시간을 줄이도록 설계 돼 있습니다.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;FuseBox cache and deps.json &lt;a href=&quot;https://t.co/4EjS62HY28&quot;&gt;pic.twitter.com/4EjS62HY28&lt;/a&gt;&lt;/p&gt;&amp;mdash; azu (@azu_re) &lt;a href=&quot;https://twitter.com/azu_re/status/816568272736788480&quot;&gt;January 4, 2017&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;이제 막 공개된 도구이므로 소스 코드를 살펴보는 것도 재미있을 것 같습니다. 소스 코드는 TypeScript로 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;공지사항&quot;&gt;공지사항&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/ping&quot; title=&quot;jser/ping&quot;&gt;jser/ping&lt;/a&gt;에 Ping의 Issue를 등록하면 &lt;a href=&quot;https://twitter.com/jser_info&quot; title=&quot;@jser_info&quot;&gt;@jser_info&lt;/a&gt;의 Twitter에 전달되도록 했습니다.&lt;/li&gt;
&lt;li&gt;데이터 분석 용으로 &lt;a href=&quot;https://jser.info/data-dashboard/&quot; title=&quot;JSer.info Data Dashboard&quot;&gt;JSer.info Data Dashboard&lt;/a&gt;를 만들었습니다.

&lt;ul&gt;
&lt;li&gt;JSer.info에서 소개한 글이나 URL 등에 관한 데이터를 여러가지 분류로 살펴볼 목적으로 생성한 페이지입니다.&lt;/li&gt;
&lt;li&gt;데이터를 읽는 재미있는 분류 방법이 있다면 &lt;a href=&quot;https://github.com/jser/data-dashboard&quot; title=&quot;jser/data-dashboard: JSer.info Data Dashboard.&quot;&gt;jser/data-dashboard: JSer.info Data Dashboard.&lt;/a&gt;에 Issue 또는 PR을 생성해 주시면 좋을 것 같습니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stealjs-1.0-release&quot;&gt;StealJS 1.0 Release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.bitovi.com/blog/stealjs-1.0-release&quot; title=&quot;StealJS 1.0 Release&quot;&gt;www.bitovi.com/blog/stealjs-1.0-release&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;개발 시엔 동적인 모듈 로더로 개발하고 배포 시엔 steal-tool를 이용해 production build 가능한 StealJS 1.0이 릴리즈됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=VKydmxRm6w8&quot; title=&quot;Easy ES6 with StealJS - YouTube&quot;&gt;Easy ES6 with StealJS - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimizing-page-speeds-with-lazyloading-|-jscrambler-blog&quot;&gt;Optimizing Page Speeds With Lazyloading | Jscrambler Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jscrambler.com/optimizing-page-speeds-with-lazyloading/&quot; title=&quot;Optimizing Page Speeds With Lazyloading | Jscrambler Blog&quot;&gt;blog.jscrambler.com/optimizing-page-speeds-with-lazyloading/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Angular의 라우팅과 컴포넌트를 LazyLoad할 수 있는 방법 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-loading---react&quot;&gt;Lazy Loading - React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webpack.js.org/guides/lazy-load-react/&quot; title=&quot;Lazy Loading - React&quot;&gt;webpack.js.org/guides/lazy-load-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack2를 사용해 React 컴포넌트를 LazyLoad 하는 방법에 관해 소개하고 있는 문서입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flowtype으로-flux-아키텍처에-타입-시스템을-적용하는-것에-관해-발표했다---please-drive-faster(일본어)&quot;&gt;Flowtype으로 Flux 아키텍처에 타입 시스템을 적용하는 것에 관해 발표했다 - Please Drive Faster(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://joe-re.hatenablog.com/entry/2016/12/29/204917&quot; title=&quot;Flowtype으로 Flux 아키텍처에 타입 시스템을 적용하는 것에 관해 발표했다 - Please Drive Faster&quot;&gt;joe-re.hatenablog.com/entry/2016/12/29/204917&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowType를 사용해 타입 시스템을 적용한 Flux 아키텍처 패턴에 관해 이야기합니다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/joe-re/items/d6fd262a8c6017f41e22&quot; title=&quot;flowtype으로 Flux에서의 타입 안전성을 손에 넣는다 - Qiita&quot;&gt;flowtype으로 Flux에서의 타입 안전성을 손에 넣는다 - Qiita&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-interview-questions-and-answers-(2017-edition)-|-@risingstack&quot;&gt;Node.js Interview Questions and Answers (2017 Edition) | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.risingstack.com/node-js-interview-questions-and-answers-2017/&quot; title=&quot;Node.js Interview Questions and Answers (2017 Edition) | @RisingStack&quot;&gt;blog.risingstack.com/node-js-interview-questions-and-answers-2017/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 관해 자주 있는 질문과 답변을 Q&amp;amp;A 형식으로 풀어낸 글입니다.&lt;br&gt;
코딩 스타일, 자주하게 되는 작성 실수, 보안, 타이밍 공격 등에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-interview-questions&quot;&gt;React Interview Questions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tylermcginnis.com/react-interview-questions/&quot; title=&quot;React Interview Questions&quot;&gt;tylermcginnis.com/react-interview-questions/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React에 관한 여러가지 의문을 Q&amp;amp;A 형식으로 풀어 작성한 글입니다.&lt;br&gt;
Class로 작성한 컴포넌트와 함수로 작성한 컴포넌트의 차이, &lt;code&gt;refs&lt;/code&gt;란 무엇인지, &lt;code&gt;key&lt;/code&gt; 속성은 왜 중요한지 등 컴포넌트와 관련된 패턴에 관해 이야기합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-html-with-accessibility-in-mind-–-medium&quot;&gt;Writing HTML with accessibility in mind – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@matuzo/writing-html-with-accessibility-in-mind-a62026493412&quot; title=&quot;Writing HTML with accessibility in mind – Medium&quot;&gt;medium.com/@matuzo/writing-html-with-accessibility-in-mind-a62026493412&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTML와 접근성(스크린리더)에 관해 작성된 글입니다.&lt;br&gt;
&lt;code&gt;lang&lt;/code&gt; 속성, &lt;code&gt;alt&lt;/code&gt; 속성, &lt;code&gt;&amp;lt;buton&amp;gt;&lt;/code&gt; 속성, landmarks 등을 이야기합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postcss-정리---qiita(일본어)&quot;&gt;PostCSS 정리 - Qiita(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/morishitter/items/4a04eb144abf49f41d7d&quot; title=&quot;PostCSS まとめ - Qiita&quot;&gt;qiita.com/morishitter/items/4a04eb144abf49f41d7d&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PostCSS의 개요와 특징 그리고 만든 동기 등을 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-performance-checklist-2017-(pdf,-apple-pages)-–-smashing-magazine&quot;&gt;Front-End Performance Checklist 2017 (PDF, Apple Pages) – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/12/front-end-performance-checklist-2017-pdf-pages/&quot; title=&quot;Front-End Performance Checklist 2017 (PDF, Apple Pages) – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/12/front-end-performance-checklist-2017-pdf-pages/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;웹 프론트엔드의 성능과 관련된 체크 리스트가 정리돼 있습니다.&lt;br&gt;
파일 사이즈, 전송 방법, 렌더링, 모니터링, 테스트 방법 등을 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-reflect-api-of-es6-–-zsolt-nagy&quot;&gt;The Reflect API of ES6 – Zsolt Nagy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zsoltnagy.eu/the-reflect-api-of-es6/&quot; title=&quot;The Reflect API of ES6 – Zsolt Nagy&quot;&gt;www.zsoltnagy.eu/the-reflect-api-of-es6/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reflect API를 소개하는 글입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mozanime-in-2016-|-nothing-new&quot;&gt;MozAnime in 2016 | Nothing new&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://birtles.wordpress.com/2016/12/27/mozanime-in-2016/&quot; title=&quot;MozAnime in 2016 | Nothing new&quot;&gt;birtles.wordpress.com/2016/12/27/mozanime-in-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016년 시점에서 Firefox의 Web Animations 대응 수준과 새롭게 바뀐 디버깅 기능에 관해 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimise-your-web-development-workflow-2016&quot;&gt;Optimise your web development workflow 2016&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://umaar.github.io/devtools-optimise-your-web-development-workflow-2016/&quot; title=&quot;Optimise your web development workflow 2016&quot;&gt;umaar.github.io/devtools-optimise-your-web-development-workflow-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 개발자 도구의 기능과 활용법을 소개하는 슬라이드입니다.&lt;br&gt;
주로 CSS, 접근성, 성능과 관련된 기능과 활용법을 GIF 애니메이션과 함께 소개하고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fuse-box-bundler-/-api-reference&quot;&gt;Fuse-Box bundler / API Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fuse-box.org/&quot; title=&quot;Fuse-Box bundler / API Reference&quot;&gt;fuse-box.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack/Browserify와 같은 bundler 기능과 JSPM/SystemJS와 같은 loader 기능을 가지고 있는 도구입니다.&lt;br&gt;
모듈의 의존 관계와 변환 후의 파일을 캐시하여 빠르게 변환됩니다.&lt;br&gt;
플러그인으로 변환 방법을 확장할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@ivanorlov/fusebox-bundle-your-project-within-a-fraction-of-a-second-f2360ba95727&quot; title=&quot;FuseBox — bundle your project within a fraction of a second&quot;&gt;FuseBox — bundle your project within a fraction of a second&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gothdo/range:-a-javascript-implementation-of-the-python&amp;#x27;s-range()-function.&quot;&gt;Gothdo/range: A JavaScript implementation of the Python&amp;#x27;s range() function.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Gothdo/range&quot; title=&quot;Gothdo/range: A JavaScript implementation of the Python&amp;#39;s range() function.&quot;&gt;github.com/Gothdo/range&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Python의 &lt;code&gt;range()&lt;/code&gt;를 JavaScript 구현한 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;andywer/leakage:-🐛-memory-leak-testing-for-node.&quot;&gt;andywer/leakage: 🐛 Memory leak testing for node.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andywer/leakage&quot; title=&quot;andywer/leakage: 🐛 Memory leak testing for node.&quot;&gt;github.com/andywer/leakage&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;libn&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js에서 메모리 누수와 관련된 테스트 코드를 작성할 수 있는 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nolanlawson/marky:-high-resolution-javascript-timer-based-on-performance.mark()-and-measure()&quot;&gt;nolanlawson/marky: High-resolution JavaScript timer based on performance.mark() and measure()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nolanlawson/marky&quot; title=&quot;nolanlawson/marky: High-resolution JavaScript timer based on performance.mark() and measure()&quot;&gt;github.com/nolanlawson/marky&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;libn&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;User Timing API(&lt;code&gt;performance.mark&lt;/code&gt;와 &lt;code&gt;performance.measure&lt;/code&gt;) 기반으로 구현한 처리 시간 측정 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maniart/diffyjs:-a-dependency-free-motion-detection-library-for-the-browser&quot;&gt;maniart/diffyjs: A dependency-free motion detection library for the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/maniart/diffyjs&quot; title=&quot;maniart/diffyjs: A dependency-free motion detection library for the browser&quot;&gt;github.com/maniart/diffyjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;를 사용해 얻은 사진 이용해 프레임별 움직임을 diif하여 취득할 수 있는 라이브러리입니다.&lt;br&gt;
motion detection 라이브러리로 불립니다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 04 Jan 2017 17:28:00 +0900</pubDate>
        <link>https://jser.info/ko/2017/01/04/postcss-chrome-fusebox/</link>
        <guid isPermaLink="true">https://jser.info/ko/2017/01/04/postcss-chrome-fusebox/</guid>
        
        <category>bundler</category>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        <category>PostCSS</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-29 JS: Node.js v7.2.0, Yarn으로 오프라인 인스톨</title>
        <description>&lt;p&gt;JSer.info #307 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0&quot;&gt;Node v7.2.0&lt;/a&gt;이 릴리즈됐습니다.&lt;br&gt;
Windows 10 유저를 위한 보안 관련 수정도 포함돼 있는 버전입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0 (Current) | Node.js&quot;&gt;Node v7.2.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/weekly-updates/weekly-update.2016-11-24/&quot; title=&quot;Weekly Update - November 24th, 2016 | Node.js&quot;&gt;Weekly Update - November 24th, 2016&lt;/a&gt;에 의하면 Node.js의 코드 커버리지를 볼 수 있는 &lt;a href=&quot;https://coverage.nodejs.org/&quot; title=&quot;Node.js Nightly Code Coverage&quot;&gt;Node.js Nightly Code Coverage&lt;/a&gt;와 Node.js v7의 벤치마크를 볼 수 있는 &lt;a href=&quot;https://benchmarking.nodejs.org/&quot; title=&quot;Node.js Benchmarks&quot;&gt;Node.js Benchmarks&lt;/a&gt;가 공개됐다고 합니다.&lt;/p&gt;

&lt;p&gt;벤치마크에 관심이 있는 분은 &lt;a href=&quot;https://github.com/nodejs/benchmarking&quot; title=&quot;Benchmarking Work Group&quot;&gt;Benchmarking Work Group&lt;/a&gt;를 함께 살펴보면 좋을 것 같습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror&quot; title=&quot;Running Yarn offline&quot;&gt;Running Yarn offline&lt;/a&gt;에는 Yarn을 사용한 오프라인 인스톨 기능에 관해 소개돼 있습니다.&lt;/p&gt;

&lt;p&gt;Yarn은 &lt;code&gt;yarn.lock&lt;/code&gt;의 &lt;code&gt;resolved&lt;/code&gt; 필드에서 특정 모듈의 저장 장소(URL이나 경로)를 지정할 수 있습니다. 즉. 이 &lt;code&gt;resolved&lt;/code&gt;필드를 상대 경로로 하면 로컬에서 모듈을 가져와 오프라인 설치를 할 수 있는 구조입니다. 이때 &lt;code&gt;.yarnrc&lt;/code&gt;의 &lt;code&gt;yarn-offline-mirror&lt;/code&gt;의 설정에서 오프라인 미러 용의 모듈 저장 장소를 지정하여 프로젝트 하위에 모듈을 보관할 수 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many Facebook teams, including the React Native team, decided to check in their “Offline mirror”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 기사에서 흥미로운 부분은 페이스북에서는 오프라인 미러를 버전 관리에 포함해 사용하고 있다는 점입니다.&lt;/p&gt;

&lt;p&gt;최근 iOS(CocoaPods, Carthage 패키지 관리 도구) 커뮤니티에서도 동일한 주제에 대해 논의되고 있는 점을 미루어 볼때 프로젝트에서 의존 모듈을 취급하는 방법이 변화하고 있는 것일지도 모르겠습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mono0926/items/636819c42e96a8c4e12d&quot; title=&quot;CocoaPods・Carthage에서 인스톨한 결과물을 버전 관리에 포함해야 할까?- Qiita&quot;&gt;CocoaPods・Carthage에서 인스톨한 결과물을 버전 관리에 포함해야 할까? - Qiita&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;공지사항&quot;&gt;공지사항&lt;/h2&gt;

&lt;p&gt;JSer.info 6 주년과 300 회 기념 이벤트를 2017년 1월 15일(일요일)에 진행할 예정입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/89&quot; title=&quot;JSer.info 6주년 &amp;amp;amp;&amp;amp;amp; 300회 기념 이벤트 @ 1月15日(日) · Issue #89 · jser/jser.info&quot;&gt;JSer.info 6주년 &amp;amp;&amp;amp; 300회 기념 이벤트 @ 1月15日(日) · Issue #89 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.connpass.com/event/24202/&quot; title=&quot;JSer.info 5주년 기념 이벤트&quot;&gt;JSer.info 5주년 기념 이벤트&lt;/a&gt;와 비슷한 이벤트가 될 것으로 생각합니다만 아직 무엇을 할 지 확실히 정하진 않았습니다.&lt;/p&gt;

&lt;p&gt;부디 무엇인가 하고 싶은 것이 있다면 Issue에 의견 주세요.&lt;/p&gt;

&lt;p&gt;예) 죽어가는 Flash에 관해 이야기하고 싶다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/89&quot;&gt;https://github.com/jser/jser.info/issues/89&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;이런 발표를 하고 싶다는 사전 예고도 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이벤트 페이지(아직없음)를 통한 모집 일정은 12월 중순 정도로 예정하고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.1.0-·-vuejs/vue&quot;&gt;Release v2.1.0 · vuejs/vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.1.0&quot; title=&quot;Release v2.1.0 · vuejs/vue&quot;&gt;github.com/vuejs/vue/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.1.0이 릴리즈됐습니다.&lt;br&gt;
Scoped Slots, &lt;code&gt;v-else-if&lt;/code&gt;, &lt;code&gt;dist&lt;/code&gt; 하위의 파일 변경, JSX를 대응한 개선, 서버 사이드 렌더링 시 &lt;code&gt;process.env.VUE_ENV=server&lt;/code&gt;를 때에 따라 자동으로 활성화 되도록 변경 되는 등 여러가지 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/yyx990803/faebe22e8763f5b17572b35ed96f52fe&quot; title=&quot;2.1.0.md&quot;&gt;2.1.0.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;大変お待たせしました。Vue.js 2.0 公式ドキュメントの日本語サイトリリースしました！最新バージョン 2.1 まで対応しています。今回の翻訳プロジェクトにご協力頂いた方には大変感謝です！ありがとうございました！ &lt;a href=&quot;https://t.co/nCleWsMtft&quot;&gt;https://t.co/nCleWsMtft&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/vuejs?src=hash&quot;&gt;#vuejs&lt;/a&gt;&lt;/p&gt;&amp;mdash; 🐤kazuya kawaguchi🐤 (@kazu_pon) &lt;a href=&quot;https://twitter.com/kazu_pon/status/801529603223273472&quot;&gt;2016年11月23日&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;트위터 번역 : 대단히 오래 기다리셨습니다 Vue.js 공식 문서의 일본어 버전 사이트를 릴리즈 했습니다 최신 버전인 2.1 까지 대응하고 있습니. 이번 번역 프로젝트에 협력해주신 분에게 감사의 말씀을 전하고 싶습니다! 감사합니다!&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.11.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.11.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/11/eslint-v3.11.0-released&quot; title=&quot;ESLint v3.11.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/11/eslint-v3.11.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v3.11.0이 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;capitalized-comments&lt;/code&gt;, &lt;code&gt;require-await&lt;/code&gt; 규칙이 추가됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.2.0-(current)-|-node.js&quot;&gt;Node v7.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.2.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v7.2.0이 릴리즈됐습니다.&lt;br&gt;
Windows 관련 보안 개선이 포함된 릴리즈입니다. &lt;code&gt;process.memoryUsage().external&lt;/code&gt; 프로퍼티가 추가되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/weekly-updates/weekly-update.2016-11-24/&quot; title=&quot;Weekly Update - November 24th, 2016 | Node.js&quot;&gt;Weekly Update - November 24th, 2016 | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-·-riot.js&quot;&gt;Release notes · Riot.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://riotjs.com/release-notes/#november-22-2016&quot; title=&quot;Release notes · Riot.js&quot;&gt;riotjs.com/release-notes/#november-22-2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Riot.js 3.0이 릴리즈됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/riot/riot/issues/1694&quot; title=&quot;Riot 3.0.0 roadmap · Issue #1694 · riot/riot&quot;&gt;Riot 3.0.0 roadmap · Issue #1694 · riot/riot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;running-yarn-offline-|-yarn&quot;&gt;Running Yarn offline | Yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror&quot; title=&quot; Running Yarn offline | Yarn&quot;&gt;yarnpkg.com/blog/2016/11/24/offline-mirror&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;yarn을 오프라인 환경에서 사용할 수 있는 방법이나 오프라인 미러를 저장소에 포함하는 방법에 관해서 소개하는 기사입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-css-pseudo-classes-work,-explained-with-code-and-lots-of-diagrams&quot;&gt;How CSS pseudo-classes work, explained with code and lots of diagrams&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.com/explained-css-pseudo-classes-cef3c3177361&quot; title=&quot;How CSS pseudo-classes work, explained with code and lots of diagrams&quot;&gt;medium.freecodecamp.com/explained-css-pseudo-classes-cef3c3177361&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;다이어그램을 이용해 &lt;code&gt;:*-of-type&lt;/code&gt;와 &lt;code&gt;:*-child&lt;/code&gt; 등의 의사 클래스를 알기 쉽게 소개하고 있는 글입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-iterators-and-generators-in-practice-–-zsolt-nagy&quot;&gt;ES6 Iterators and Generators in Practice – Zsolt Nagy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zsoltnagy.eu/es6-iterators-and-generators-in-practice/&quot; title=&quot;ES6 Iterators and Generators in Practice – Zsolt Nagy&quot;&gt;www.zsoltnagy.eu/es6-iterators-and-generators-in-practice/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Iterator, Iterable, Generator에 관해 이야기합니다.&lt;br&gt;
샘플 코드를 중심으로 어떤 식으로 동작하는지 자세히 소개하는 글입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dassur.ma-–-how-to-read-web-specs-part-iia-–-or:-ecmascript-symbols&quot;&gt;DasSur.ma – How to read web specs Part IIa – Or: ECMAScript Symbols&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dassur.ma/things/reading-specs-2/&quot; title=&quot;DasSur.ma – How to read web specs Part IIa – Or: ECMAScript Symbols&quot;&gt;dassur.ma/things/reading-specs-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript 사양을 읽는 방법에 관해 이야기합니다.&lt;br&gt;
&lt;code&gt;@@iterator&lt;/code&gt;는 무엇인지, 어느 부분부터 &lt;code&gt;Symbol&lt;/code&gt;에 관한 사양을 살펴보면 되는지 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-2.0:-built-in-type-declarations-|-marius-schulz&quot;&gt;TypeScript 2.0: Built-In Type Declarations | Marius Schulz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mariusschulz.com/2016/11/25/typescript-2-0-built-in-type-declarations&quot; title=&quot;TypeScript 2.0: Built-In Type Declarations | Marius Schulz&quot;&gt;blog.mariusschulz.com/2016/11/25/typescript-2-0-built-in-type-declarations&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.0의 Built-In Type에 관해 소개합니다.&lt;br&gt;
&lt;code&gt;--lib&lt;/code&gt; 옵션으로 포함할 빌트인 lib를 지정할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot; title=&quot;Compiler Options · TypeScript&quot;&gt;Compiler Options · TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-javascript-micro-templating-–-medium&quot;&gt;Understanding JavaScript Micro-Templating – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@zfrisch/understanding-javascript-micro-templating-f37a37b3b40e&quot; title=&quot;Understanding JavaScript Micro-Templating – Medium&quot;&gt;medium.com/@zfrisch/understanding-javascript-micro-templating-f37a37b3b40e&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;John Resig이 개발한 140bytes만으로 구현된 Micro Templating이 어떤 구조로 동작하고 있는지를 살펴볼 수 있는 글입니다.&lt;br&gt;
Function 생성자, 정규 표현 등의 구성 요소를 친절하게 소개하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ejohn.org/blog/javascript-micro-templating/&quot; title=&quot;John Resig - JavaScript Micro-Templating&quot;&gt;John Resig - JavaScript Micro-Templating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/Fedia/20d41d8533e0903f0123&quot; title=&quot;John Resig&amp;amp;amp;#39;s Micro-Templating in 140 bytes&quot;&gt;John Resig&amp;#39;s Micro-Templating in 140 bytes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-numbers-on-webpack-1-vs-2-–-medium&quot;&gt;The numbers on Webpack 1 vs 2 – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@u_glow/the-numbers-on-webpack-1-vs-2-7f457bb4658c&quot; title=&quot;The numbers on Webpack 1 vs 2 – Medium&quot;&gt;medium.com/@u_glow/the-numbers-on-webpack-1-vs-2-7f457bb4658c&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 1.x와 2.0β의 빌드 사이즈와 빌드 시간(prod/dev)을 비교한 글입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;advanced-data-tables-in-react&quot;&gt;Advanced Data Tables in React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.commercetools.com/advanced-data-tables-in-react-dbe33f8345ab&quot; title=&quot;Advanced Data Tables in React&quot;&gt;techblog.commercetools.com/advanced-data-tables-in-react-dbe33f8345ab&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React 용 grid 라이브러리가 비교 및 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-to-mo.js-|-css-tricks&quot;&gt;An Introduction to mo.js | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/introduction-mo-js/&quot; title=&quot;An Introduction to mo.js | CSS-Tricks&quot;&gt;css-tricks.com/introduction-mo-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;선언적인 애니메이션 라이브러리인 mo.js를 학습할 수 있는 튜토리얼 입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;katatema.js---✘╹◡╹✘&quot;&gt;katatema.js - ✘╹◡╹✘&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://r7kamura.hatenablog.com/entry/2016/11/24/030101&quot; title=&quot;katatema.js - ✘╹◡╹✘&quot;&gt;r7kamura.hatenablog.com/entry/2016/11/24/030101&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Next.js 처럼 타입별로 구분된 디렉터리에 React의 컴포넌트를 배치하여 그에 대응하는 HTML로 각각 변환할 수 있는 도구입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/r7kamura/katatema&quot; title=&quot;r7kamura/katatema: A handy static site generator using React.js&quot;&gt;r7kamura/katatema: A handy static site generator using React.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-at-product-hunt-//-speaker-deck&quot;&gt;React at Product Hunt // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/rstankov/react-at-product-hunt&quot; title=&quot;React at Product Hunt // Speaker Deck&quot;&gt;speakerdeck.com/rstankov/react-at-product-hunt&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;슬라이드&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.producthunt.com/&quot;&gt;ProductHunt&lt;/a&gt;의 JavaScript 스택 변천 과정에 관해서 알 수 있는 슬라이드 입니다(jQuery -&amp;gt; Backbone -&amp;gt; React + Redux)&lt;br&gt;
컴포넌트 디자인 방식이나 자체 개발한 Duxy를 사용한 Rest API 조작 방법 등에 관해서도 이야기합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/producthunt/duxy&quot; title=&quot;producthunt/duxy: RESTful resources&quot;&gt;producthunt/duxy: RESTful resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azat-co/you-dont-know-node:-you-don&amp;#x27;t-know-node.js&quot;&gt;azat-co/you-dont-know-node: You Don&amp;#x27;t Know Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azat-co/you-dont-know-node&quot; title=&quot;azat-co/you-dont-know-node: You Don&amp;#39;t Know Node.js&quot;&gt;github.com/azat-co/you-dont-know-node&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js는 어떤 특징을 가지고 있는지 소개하는 입문자를 대상으로 한 서적입니다.&lt;br&gt;
비동기 I/O, Stream, 에러 핸들링, 네이티브 모듈에 관해 설명합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-reference---a-free-visual-guide-to-the-most-popular-css-properties.&quot;&gt;CSS Reference - A free visual guide to the most popular CSS properties.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cssreference.io/&quot; title=&quot;CSS Reference - A free visual guide to the most popular CSS properties.&quot;&gt;cssreference.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;레퍼런스&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS 레퍼런스 사이트입니다.&lt;br&gt;
각각의 프로퍼티를 적용했을 때의 결과를 그림으로 표현해 주고 있어 이해하기 쉽습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;feature.js&quot;&gt;Feature.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://featurejs.com/&quot; title=&quot;Feature.js&quot;&gt;featurejs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Modernizr 처럼 여러가지 기능들을 이용할 수 있는지를 일괄적으로 판정해주는 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reframe.js&quot;&gt;Reframe.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dollarshaveclub.github.io/reframe.js&quot; title=&quot;Reframe.js&quot;&gt;dollarshaveclub.github.io/reframe.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iframe과 같은 컨텐츠를 포함하는 비반응적(unresponsive) 요소를 반응적(responsive)으로 다룰 수 있도록 만들어주는 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;immutable-css&quot;&gt;immutable-css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://immutablecss.com/&quot; title=&quot;immutable-css&quot;&gt;immutablecss.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A CSS linter for immutable selectors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;덮어쓰여진(override) 셀렉터를 체크하는 검증 도구 입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxt/nuxt.js:-a-minimalistic-framework-for-server-rendered-vue.js-applications-(inspired-by-next.js)&quot;&gt;nuxt/nuxt.js: A minimalistic framework for server-rendered Vue.js applications (inspired by Next.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js&quot; title=&quot;nuxt/nuxt.js: A minimalistic framework for server-rendered Vue.js applications (inspired by Next.js)&quot;&gt;github.com/nuxt/nuxt.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Next.js에서 영감을 받아 시작된 Vue.js용의 서버사이드 렌더링 프레임워크 입니다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 29 Nov 2016 09:37:00 +0900</pubDate>
        <link>https://jser.info/ko/2016/11/29/node.js-v7.2.0-yarn/</link>
        <guid isPermaLink="true">https://jser.info/ko/2016/11/29/node.js-v7.2.0-yarn/</guid>
        
        <category>Node</category>
        
        <category>Yarn</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-01 JS: Node.js v7, Node.js v0.10 EOL, WebAssembly Browser Preview</title>
        <description>&lt;p&gt;JSer.info #303　- 지난주 &lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS)&quot;&gt;Node.js v6.9.0 (LTS)&lt;/a&gt;가 릴리즈됐으며 개발 버전(LTS가 아닌)인 &lt;a href=&quot;https://nodejs.org/en/blog/release/v7.0.0/&quot; title=&quot;Node.js v7.0.0&quot;&gt;Node v7.0.0&lt;/a&gt;도 릴리즈됐습니다.&lt;/p&gt;

&lt;p&gt;V8 업데이트, WHATWG URL의 시험적 지원 등이 포함됐습니다.&lt;/p&gt;

&lt;p&gt;WHATWG URL에 관해서는 아래 문서 잘 소개돼 있으므로 함께 읽어보면 좋을 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7에 들어간 WHATWG URL 구현에 관하여  | blog.jxck.io&quot;&gt;Node v7에 들어간 WHATWG URL 구현에 관하여 | blog.jxck.io&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, 2016년 10월 31일로 Node.js v0.10의 메인터넌스가 종료되고 &lt;a href=&quot;https://ja.wikipedia.org/wiki/EOL&quot; title=&quot;EOL&quot;&gt;EOL&lt;/a&gt;이 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/kkYTd5VdXRZOAJEebIvt8eWCk34Sb7.png&quot; alt=&quot;Node.js LTS timeline&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/LTS&quot; title=&quot;nodejs/LTS: Node.js Foundation Long-term Support Working Group&quot;&gt;nodejs/LTS: Node.js Foundation Long-term Support Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js v0.12도 2016년 12월 31일로 메인터넌스가 종료되기 때문에 v4 또는 v6의 Active한 LTS 버전으로 이전할 필요가 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://webassembly.org/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;가 &lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Browser Preview&quot;&gt;Browser Preview&lt;/a&gt; 마일스톤이 됐으며 이에 따라 각 브라우저에서 구현 진척도에 관한 기사를 속속 공개했습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/10/webassembly-browser-preview.html&quot;&gt;V8 JavaScript Engine: WebAssembly Browser Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/10/webassembly-browser-preview/&quot;&gt;WebAssembly Browser Preview ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/10/31/webassembly-browser-preview/&quot;&gt;A peek into the WebAssembly Browser Preview | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/status/#specification-webassembly&quot;&gt;WebKit Feature Status | WebKit&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;WebKit은 &lt;a href=&quot;https://jser.info/ko/2016/03/17/react-webassembly-art-of-javascript/&quot;&gt;2016년 3월 17일자&lt;/a&gt;에서 소개드린 것과 같이 아직 특별한 발표는 없지만 Status는 &lt;strong&gt;In Development&lt;/strong&gt; 상태입니다.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;각각의 기사에는 시험적으로 사용할 수 있는 방법이 작성돼 있으며 각 구현이나 사양에 대한 피드백을 보낼 수 있는 &lt;a href=&quot;http://webassembly.org/community/feedback/&quot; title=&quot;Submitting Feedback &amp;amp;amp; Issues&quot;&gt;Submitting Feedback &amp;amp; Issues&lt;/a&gt;도 있으니 관심있는 분은 참고하시길 바랍니다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The tentative goal of the CG is for the Browser Preview to conclude in Q1 2017, though significant findings during the Browser Preview could potentially extend the duration&lt;br&gt;
-- &lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;WebAssembly 커뮤니티의 향후 로드맵은 &lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;에 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.0.0-(current)-|-node.js&quot;&gt;Node v7.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.0.0/&quot; title=&quot;Node v7.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.0.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v7.0.0이 릴리즈됐습니다.&lt;br&gt;
V8 업데이트, WHATWG URL Parser를 시험적으로 지원하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;6.18.0-released-·-babel&quot;&gt;6.18.0 Released · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2016/10/24/6.18.0&quot; title=&quot;6.18.0 Released · Babel&quot;&gt;babeljs.io/blog/2016/10/24/6.18.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.18.0이 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;import()&lt;/code&gt;의 initial 지원, &lt;code&gt;helper-builder-react-jsx&lt;/code&gt;에 &lt;code&gt;useBuiltIns&lt;/code&gt; 옵션이 추가됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-16-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 16 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7030/release-notes-for-safari-technology-preview-16/&quot; title=&quot;Release Notes for Safari Technology Preview 16 | WebKit&quot;&gt;webkit.org/blog/7030/release-notes-for-safari-technology-preview-16/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 16이 릴리즈됐습니다.&lt;br&gt;
URL의 파서가 웹 표준에 근거하도록 변경됐고, Gamepad API와 &lt;code&gt;Intl.getCanonicalLocales&lt;/code&gt;을 지원합니다. 또, ES2016의 non-simple parameters에 의한 early error에 대응하는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.9.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.9.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/10/eslint-v3.9.0-released&quot; title=&quot;ESLint v3.9.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/10/eslint-v3.9.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v3.9.0이 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;codeframe&lt;/code&gt;이라는 새로운 formatter가 추가됐고 커스텀 파서가 규칙을 위한 정보를 제공하는 객체(&lt;code&gt;context.parserServices&lt;/code&gt;)를 정의할 수 있게 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/abc7885b373b5b37ce97&quot; title=&quot;ESLint v3.9.0 - Qiita&quot;&gt;ESLint v3.9.0 - Qiita&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/6974&quot; title=&quot;Proposal for Parser Services · Issue #6974 · eslint/eslint&quot;&gt;Proposal for Parser Services · Issue #6974 · eslint/eslint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-without-react-—-state-management-in-vanilla-javascript&quot;&gt;Redux without React — State Management in Vanilla JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/redux-without-react-state-management-vanilla-javascript/&quot; title=&quot;Redux without React — State Management in Vanilla JavaScript&quot;&gt;www.sitepoint.com/redux-without-react-state-management-vanilla-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React를 사용하지 않고 Redux를 다루는 것에 대해 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;visual-debugging-with-es6-and-node.js-–-good-eggs-product-–-medium&quot;&gt;Visual Debugging with ES6 and Node.js – Good Eggs Product – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/good-eggs-product/visual-debugging-with-es6-and-node-js-44631b3b040f&quot; title=&quot;Visual Debugging with ES6 and Node.js – Good Eggs Product – Medium&quot;&gt;medium.com/good-eggs-product/visual-debugging-with-es6-and-node-js-44631b3b040f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js와 Babel을 조합한 환경에서 GUI로 디버깅하는 방법에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-webassembly-browser-preview&quot;&gt;V8 JavaScript Engine: WebAssembly Browser Preview&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/10/webassembly-browser-preview.html&quot; title=&quot;V8 JavaScript Engine: WebAssembly Browser Preview&quot;&gt;v8project.blogspot.com/2016/10/webassembly-browser-preview.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome이 플러그를 붙여 WebAssernbly를 시험적으로 지원합니다. 여러 피드백을 기다리고 있으니 참고하길 바랍니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;different-ways-to-debug-javascript-code-–-medium&quot;&gt;Different ways to debug JavaScript code – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@sandeep.scet/different-ways-to-debug-javascript-code-579e7f58cf10&quot; title=&quot;Different ways to debug JavaScript code – Medium&quot;&gt;medium.com/@sandeep.scet/different-ways-to-debug-javascript-code-579e7f58cf10&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScript의 여러가지 디버깅 방법에 관해 이야기합니다.&lt;br&gt;
alert, console, breakpoint, &lt;code&gt;debugger;&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;monitor&lt;/code&gt; 등의 API와 그것을 사용하는 방법이 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7에-들어간-whatwg-url-구현에-대해-|-blog.jxck.io(일본어)&quot;&gt;Node v7에 들어간 WHATWG URL 구현에 대해 | blog.jxck.io(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2016-10-27/whatwg-url.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;URL&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v7에 실험적으로 구현된 WHATWG URL에 관해 이야기합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-–-next.js&quot;&gt;ZEIT – Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zeit.co/blog/next&quot; title=&quot;ZEIT – Next.js&quot;&gt;zeit.co/blog/next&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React를 사용한 서버 사이드 렌더링 지원 용 프레임워크를 소개합니다.&lt;br&gt;
CSS in JS, Head, 라우팅이나 개발자 도구 등이 세트로 구성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-&amp;amp;-react-performance-in-16+-steps&quot;&gt;Webpack &amp;amp; React Performance in 16+ Steps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/grgur/webpack-react-performance-in-16-steps&quot; title=&quot;Webpack &amp;amp; React Performance in 16+ Steps&quot;&gt;www.slideshare.net/grgur/webpack-react-performance-in-16-steps&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack과 React에서 빌드 성능이나 파일 사이즈 측면에서 조심해야할 점에 대해 설명하는 슬라이드입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timarney/react-faq:-a-collection-of-links-to-help-answer-your-questions-about-react.js&quot;&gt;timarney/react-faq: A collection of links to help answer your questions about React.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timarney/react-faq&quot; title=&quot;timarney/react-faq: A collection of links to help answer your questions about React.js&quot;&gt;github.com/timarney/react-faq&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React에 관한 FAQ를 정리한 페이지입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-|-web-|-google-developers&quot;&gt;Performance | Web | Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/&quot; title=&quot;Performance  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;웹 사이트의 성능 개선에 관한 내용이 정리돼 있는 문서입니다.&lt;br&gt;
크리티컬 렌더링 패스의 개선, 네트워크, 애니메이션 등 여러가지 성능 개선에 대한 글이 정리돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;퍼포먼스---개발도구-|-mdn(일본어)&quot;&gt;퍼포먼스 - 개발도구 | MDN(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Tools/Performance&quot; title=&quot;パフォーマンス - 開発ツール | MDN&quot;&gt;developer.mozilla.org/ja/docs/Tools/Performance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 개발자 도구의 레퍼런스 페이지입니다.&lt;br&gt;
기본적인 사용 방법이나 도구를 살펴보는 방법에 관해 작성돼 있습니다.&lt;br&gt;
다양한 CSS 애니메이션, UI 스레드를 블록킹하는 JS의 문제를 개선 방법을 시나리오를 바탕으로 잘 설명하고 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance&quot;&gt;영어페이지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Tools/Performance&quot;&gt;한글페이지&lt;/a&gt;(영어나 일본어에 비해 글이 적습니다)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pelotoncycle/resize-observer&quot;&gt;pelotoncycle/resize-observer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pelotoncycle/resize-observer&quot; title=&quot;pelotoncycle/resize-observer&quot;&gt;github.com/pelotoncycle/resize-observer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Resize Observer의 polyfill 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;raynos/jsig:-from-scratch-type-checker&quot;&gt;Raynos/jsig: From scratch type-checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Raynos/jsig&quot; title=&quot;Raynos/jsig: From scratch type-checker&quot;&gt;github.com/Raynos/jsig&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDoc와 비슷하게 애너테이션 코멘트를 작성하고 이를 통해 형을 추론하고 정적 체크할 수 있는 도구입니다.&lt;br&gt;
FlowType과는 다르게 ES5에 초점을 두고 있고 모호함을 최대한 피하는 방식으로 개발되고 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;taichi/ci-yarn-upgrade:-keep-npm-dependencies-up-to-date-with-ci,-providing-version-to-version-diff-for-each-library&quot;&gt;taichi/ci-yarn-upgrade: Keep NPM dependencies up-to-date with CI, providing version-to-version diff for each library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/taichi/ci-yarn-upgrade&quot; title=&quot;taichi/ci-yarn-upgrade: Keep NPM dependencies up-to-date with CI, providing version-to-version diff for each library&quot;&gt;github.com/taichi/ci-yarn-upgrade&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;yarn을 사용해 package.json의 의존 모듈을 갱신하는 PR을 보낼 수 있는 도구입니다.&lt;br&gt;
또, 갱신하는 모듈을 테이블 형식으로 살펴볼 수도 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu/ui-event-observer:-provide-performant-way-to-subscribe-to-browser-ui-events.&quot;&gt;azu/ui-event-observer: Provide performant way to subscribe to browser UI Events.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/ui-event-observer&quot; title=&quot;azu/ui-event-observer: Provide performant way to subscribe to browser UI Events.&quot;&gt;github.com/azu/ui-event-observer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;같은 요소에 대한 이벤트를 구독하는 복수의 &lt;code&gt;addEventListener&lt;/code&gt;를 1개로 정리해 다룰 수 있는 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modular-javascript-book-series&quot;&gt;Modular JavaScript Book Series&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mjavascript.com/&quot; title=&quot;Modular JavaScript Book Series&quot;&gt;mjavascript.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;클라우드 펀딩으로 시작된 JavaScript의 서적 시리즈입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/books/practical-es6/chapters#toc&quot; title=&quot;Table of Contents — Practical ES6&quot;&gt;Table of Contents — Practical ES6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;함수형-프로그래밍의-기초-javascript로-배우다-:-타츠카와-아키미치,-나가세-요시히데-:-本-:-amazon.co.jp(일본어)&quot;&gt;함수형 프로그래밍의 기초 JavaScript로 배우다 : 타츠카와 아키미치, 나가세 요시히데 : 本 : Amazon.co.jp(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E5%9F%BA%E7%A4%8E-JavaScript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%AD%A6%E3%81%B6-%E7%AB%8B%E5%B7%9D%E5%AF%9F%E7%90%86/dp/4865940596&quot; title=&quot;関数型プログラミングの基礎 JavaScriptを使って学ぶ : 立川察理, 長瀬嘉秀 : 本 : Amazon.co.jp&quot;&gt;www.amazon.co.jp/%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E5%9F%BA%E7%A4%8E-JavaScript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%AD%A6%E3%81%B6-%E7%AB%8B%E5%B7%9D%E5%AF%9F%E7%90%86/dp/4865940596&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;함수형 프로그래밍&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016년 10월 29일에 출간된 JavaScript에서의 함수형 프로그래밍에 대해 다루는 서적입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www2.ric.co.jp/create/book/contents/book_1059.html&quot; title=&quot;릭텔레콤 서적 정보&quot;&gt;릭텔레콤 서적 정보&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 01 Nov 2016 09:57:00 +0900</pubDate>
        <link>https://jser.info/ko/2016/11/01/node.js-v7-node.js-v0.10-eol-webassembly-browser-preview/</link>
        <guid isPermaLink="true">https://jser.info/ko/2016/11/01/node.js-v7-node.js-v0.10-eol-webassembly-browser-preview/</guid>
        
        <category>Node.js</category>
        
        <category>WebAssembly</category>
        
        <category>Browser</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-10-24 JS: npm 4.0.0, Node.js v6.9.0 (LTS), webpack@2 마이그레이션</title>
        <description>&lt;p&gt;JSer.info #302 - npm 4.0.0이 프리 릴리즈(PreRelease) 됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · npm/npm&quot;&gt;Release v4.0.0 · npm/npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -g npm@4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같은 커멘트로 설치할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm search&lt;/code&gt;의 속도 개선이 이뤄졌으며 &lt;code&gt;publish&lt;/code&gt; 라이프 사이클이 depreated 되는 대신 &lt;code&gt;prepare&lt;/code&gt;나 &lt;code&gt;prepublishOnly&lt;/code&gt;를 이용하도록 변경 됐습니다. &lt;br&gt;
또, &lt;code&gt;npm tag&lt;/code&gt;가 &lt;code&gt;npm dist-tag&lt;/code&gt;로 변경됐고, &lt;code&gt;npm outdated&lt;/code&gt;가 exit status를 올바르게 반환하도록 수정 되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS) | Node.js&quot;&gt;Node.js v6.9.0 (LTS)&lt;/a&gt;이 릴리즈됐습니다&lt;/p&gt;

&lt;p&gt;6.x의 LTS 버전으로, 자세한 지원 계획은 아래 링크에 잘 설명돼 있습니다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159#.c8d2tljbn&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js v0.10/v0.12는 2016년 12월으로 지원이 종료되고, Node.js v4.x은 2017년 4월부터 메인터넌스 모드로 변경됩니다.&lt;br&gt;
또, 다음 개발 버전인 Node.js v7.x는 10월 25일에 릴리즈될 예정입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&quot; title=&quot;Migrating to Webpack 2&quot;&gt;Migrating to Webpack 2&lt;/a&gt;라는 글에서는 webpack@2(베타 버전)로 마이그레이션 하는 방법에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;p&gt;webpack의 공식 사이트에도 업데이트된 새로운 마이그레이션 가이드가 공개돼 있으니 함께 참고하시길 바랍니다&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/how-to/upgrade-from-webpack-1/&quot; title=&quot;How to Upgrade from Webpack 1?&quot;&gt;How to Upgrade from Webpack 1?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack@2부터는 설정 파일을 벨리데이션하는 단계가 도입됐기 때문에 잘못된 설정을 하면 에러가 발생합니다.&lt;br&gt;
마이그레이션 시 에러가 발생한 경우 위 가이드를 참고해 수정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;세세하게 기술이 많이 변경됐으며, &lt;code&gt;OccurrenceOrderPlugin&lt;/code&gt;가 기본이 되고, 커멘드라인 인수을 전달하는 방법이 추가되는 등 다양한 변경 사항이 있습니다. &lt;/p&gt;

&lt;p&gt;또, ES modules을 그대로 사용할 수 있도록 변경 됐기 때문에 Babel을 통해 ES modules 변환하지 않도록 설정하는 방법에 대해서도 소개하고 있습니다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{
  &amp;quot;presets&amp;quot;: [
    [&amp;quot;es2015&amp;quot;, { &amp;quot;modules&amp;quot;: false }]
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.0.0-·-npm/npm&quot;&gt;Release v4.0.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v4.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm v4 프리 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;npm i -g npm@4&lt;/code&gt;으로 설치할 수 있으며 &lt;code&gt;npm search&lt;/code&gt; 속도 개선, &lt;code&gt;publish&lt;/code&gt; 라이프 사이클이 depreated 되는 대신 &lt;code&gt;prepare&lt;/code&gt;나 &lt;code&gt;prepublishOnly&lt;/code&gt;을 사용할 수 있도록 변경됐습니다. 또, &lt;code&gt;npm tag&lt;/code&gt;가 삭제되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/othiym23/c98bd4ef5d9fb3f496835bd481ef40ae&quot; title=&quot;node-gakuen-201610.md&quot;&gt;node-gakuen-201610.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/azu_re/status/789985478065790976&quot; title=&quot;$ npm search npm # on npm@4&quot;&gt;$ npm search npm # on npm@4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-jshint-2.9.4-·-jshint/jshint&quot;&gt;Release JSHint 2.9.4 · jshint/jshint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jshint/jshint/releases/tag/2.9.4&quot; title=&quot;Release JSHint 2.9.4 · jshint/jshint&quot;&gt;github.com/jshint/jshint/releases/tag/2.9.4&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSHint 2.9.4가 릴리즈됐습니다.&lt;br&gt;
TDZ를 대응하고 에러를 중복해서 리포트하지 않도록 수정됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.8-lts,-2.9-and-2.10-beta-released&quot;&gt;Ember.js - Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/10/17/ember-2-9-released.html&quot; title=&quot;Ember.js - Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released&quot;&gt;emberjs.com/blog/2016/10/17/ember-2-9-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.8-LTS, 2.9, 2.10β가 릴리즈됐습니다.&lt;br&gt;
2.8-LTS는 2018년 2월까지 보안 패치가 릴리즈됩니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux/changelog.md-at-3.1.0-·-facebook/flux&quot;&gt;flux/CHANGELOG.md at 3.1.0 · facebook/flux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flux/blob/3.1.0/CHANGELOG.md&quot; title=&quot;flux/CHANGELOG.md at 3.1.0 · facebook/flux&quot;&gt;github.com/facebook/flux/blob/3.1.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebook/flux 3.0.0이 릴리즈됐습니다.&lt;br&gt;
&lt;code&gt;FluxMapStore&lt;/code&gt;가 삭제됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-55-beta:-input-handling-improvements-and-async/await-functions&quot;&gt;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2016/10/chrome-55-beta-input-handling.html&quot; title=&quot;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&quot;&gt;blog.chromium.org/2016/10/chrome-55-beta-input-handling.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 55 Beta가 릴리즈됐습니다.&lt;br&gt;
Pointer Events, async/await, CSS &lt;code&gt;hyphens&lt;/code&gt;, Persistent Storage 등을 지원합니다.&lt;br&gt;
&lt;code&gt;document.write&lt;/code&gt;로 주입한 cross origin 그리고 parser-blocking 스크립트를 2G 회선에서 로드되지 않도록 변경 되는 등 다양한 변경 사항이 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.9.0-(lts)-|-node.js&quot;&gt;Node v6.9.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.9.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6.9.0(LTS)이 릴리즈됐습니다.&lt;br&gt;
Node.js v4.x(LTS)에서의 마이그레이션 가이드도 작성돼 있습니다.&lt;br&gt;
v6.x는 2018년 4월까지 액티브한 LTS가 됩니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-v6-transitions-to-lts-–-medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6 이후의 LTS 계획에 관해 작성돼 있습니다.&lt;br&gt;
Node.js v0.10/v0.12는 2016년 12월 까지가 End of Line입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;auxclick-is-coming-to-chrome-55-|-web-|-google-developers&quot;&gt;auxclick is Coming to Chrome 55  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/auxclick&quot; title=&quot;auxclick is Coming to Chrome 55  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2016/10/auxclick&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;왼쪽 클릭 이외에 반응하는 &lt;code&gt;click&lt;/code&gt; 이벤트인 &lt;code&gt;auxclick&lt;/code&gt; 이벤트에 관해 소개돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;once-upon-an-event-listener-|-web-|-google-developers&quot;&gt;Once Upon an Event Listener  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/addeventlistener-once&quot; title=&quot;Once Upon an Event Listener  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2016/10/addeventlistener-once&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HTMLElement#addEventListener&lt;/code&gt;의 &lt;code&gt;{once}&lt;/code&gt;옵션에 관해 설명 돼 있습니다.&lt;br&gt;
일회용 이벤트 핸들링을 지정할 때 사용하는 옵션입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-to-webpack-2&quot;&gt;Migrating to Webpack 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&quot; title=&quot;Migrating to Webpack 2&quot;&gt;javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack@1에서 @2로 마이그레이션 하는 방법에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/how-to/upgrade-from-webpack-1/&quot; title=&quot;How to Upgrade from Webpack 1?&quot;&gt;How to Upgrade from Webpack 1?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async-functions---making-promises-friendly-|-web-|-google-developers&quot;&gt;Async functions - making promises friendly  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot; title=&quot;Async functions - making promises friendly  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/getting-started/primers/async-functions&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/await에 관해 작성돼 있습니다.&lt;br&gt;
sequential과 parallel한 작성법의 차이점을 샘플 코드와 함께 설명합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tips-for-using-async-functions-(es2017)&quot;&gt;Tips for using async functions (ES2017)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/10/async-function-tips.html&quot; title=&quot;Tips for using async functions (ES2017)&quot;&gt;www.2ality.com/2016/10/async-function-tips.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/await의 주의점에 관해 세세하게 설명합니다.&lt;br&gt;
async의 동작 방식, await를 깜빡한 경우의 동작, &lt;code&gt;await Promise.all()&lt;/code&gt;, 콜백과 async, unhandled rejection에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe로-브라우저-자동-테스트(e2e테스트)-|-web-scratch(일본어)&quot;&gt;TestCafe로 브라우저 자동 테스트(E2E테스트) | Web Scratch(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/10/23/testcafe/&quot; title=&quot;TestCafe로 브라우저 자동 테스트(E2E테스트) | Web Scratch&quot;&gt;efcl.info/2016/10/23/testcafe/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;브라우저 자동 테스트 프레임워크인 TestCafe를 사용하는 방법을 설명합니다.&lt;br&gt;
특별한 설정 없이 동작하는 구조, 원격 테스트, 테스트 코드 등에 관해 작성돼 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;syntax:-language-agnostic-parser-generator-–-medium&quot;&gt;Syntax: language agnostic parser generator – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@DmitrySoshnikov/syntax-language-agnostic-parser-generator-bd24468d7cfc&quot; title=&quot;Syntax: language agnostic parser generator – Medium&quot;&gt;medium.com/@DmitrySoshnikov/syntax-language-agnostic-parser-generator-bd24468d7cfc&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;언어를 따지지 않는 agnostic한 파서이며 제너레이터 툴 킷을 소개합니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DmitrySoshnikov/syntax&quot; title=&quot;DmitrySoshnikov/syntax: Syntactic analysis toolkit for education, tracing the parsing process, and parsers generation.&quot;&gt;DmitrySoshnikov/syntax: Syntactic analysis toolkit for education, tracing the parsing process, and parsers generation.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pragmatic,-practical,-and-progressive-theming-with-custom-properties-–-css-wizardry-–-css,-oocss,-front-end-architecture,-performance-and-more,-by-harry-roberts&quot;&gt;Pragmatic, Practical, and Progressive Theming with Custom Properties – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://csswizardry.com/2016/10/pragmatic-practical-progressive-theming-with-custom-properties/&quot; title=&quot;Pragmatic, Practical, and Progressive Theming with Custom Properties – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&quot;&gt;csswizardry.com/2016/10/pragmatic-practical-progressive-theming-with-custom-properties/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Custom Property를 사용한 테밍 구현을 소개합니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymer-summit-2016---youtube&quot;&gt;Polymer Summit 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcICc687SxHQRuo9TVNOJelSZ&quot; title=&quot;Polymer Summit 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PLNYkxOF6rcICc687SxHQRuo9TVNOJelSZ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;이벤트&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Polymer Summit 2016의 발표 영상이 공개됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/summit&quot; title=&quot;Polymer Summit 2016&quot;&gt;Polymer Summit 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-javascript-library-for-building-user-interfaces---react&quot;&gt;A JavaScript library for building user interfaces - React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; title=&quot;A JavaScript library for building user interfaces - React&quot;&gt;facebook.github.io/react/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React 웹사이트(공식 문서)가 업데이트 됐습니다.&lt;br&gt;
Codepen에서 샘플 코드를 실행해볼 수 있도록 기능이 추가됐습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dan_abramov/status/789573515750076417&quot; title=&quot;Dan Abramov on Twitter: &amp;amp;amp;#34;New React docs are live! Featuring all-new guides written from scratch, ES6 examples, and CodePen snippets. https://t.co/cNZZC1vVZc https://t.co/8cZCO1W5pG&amp;amp;amp;#34;&quot;&gt;Dan Abramov on Twitter: &amp;amp;#34;New React docs are live! Featuring all-new guides written from scratch, ES6 examples, and CodePen snippets. https://t.co/cNZZC1vVZc https://t.co/8cZCO1W5pG&amp;amp;#34;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsperf:-javascript-performance-playground&quot;&gt;jsPerf: JavaScript performance playground&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsperf.com/&quot; title=&quot;jsPerf: JavaScript performance playground&quot;&gt;jsperf.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScript 스니펫 코드의 성능을 측정 및 공유할 수 있는 서비스 jsPerf가 새롭게 리뉴얼 돼 공개됐습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;beautify-web/js-beautify-·-github&quot;&gt;beautify-web/js-beautify · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/beautify-web/js-beautify&quot; title=&quot;beautify-web/js-beautify · GitHub&quot;&gt;github.com/beautify-web/js-beautify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScript를 Beautify 할 수 있는 도구와 사이트, &lt;code&gt;.jsbeautifyrc&lt;/code&gt;로 설정하고 관리할 수 있습니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jgraph/mxgraph:-mxgraph-is-a-fully-client-side-javascript-diagramming-library&quot;&gt;jgraph/mxgraph: mxGraph is a fully client side JavaScript diagramming library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jgraph/mxgraph&quot; title=&quot;jgraph/mxgraph: mxGraph is a fully client side JavaScript diagramming library&quot;&gt;github.com/jgraph/mxgraph&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;draw.io에서 사용하고 있는 SVG로 제도할 수 있는 라이브러리입니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jgraph.github.io/mxgraph/javascript/&quot; title=&quot;JavaScript Diagram Editor&quot;&gt;JavaScript Diagram Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jgraph/draw.io&quot; title=&quot;jgraph/draw.io: Source to www.draw.io&quot;&gt;jgraph/draw.io: Source to www.draw.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;automated-browser-testing-for-the-modern-web-development-stack-|-testcafe&quot;&gt;Automated browser testing for the modern web development stack | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/&quot; title=&quot;Automated browser testing for the modern web development stack | TestCafe&quot;&gt;devexpress.github.io/testcafe/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;특별한 설정 없이 사용할 수 있는 자동 테스트 프레임워크입니다.&lt;br&gt;
Selenium을 사용하고 있지 않기 때문에 단독으로 동작합니다.&lt;br&gt;
Babel을 내장하고 있어 async/await 등의 구문을 사용할 수 있고 자동적으로 일정 시간을 대기하는 등의 구조를 가지고 있습니다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/10/23/testcafe/&quot; title=&quot;TestCafe로 브라우저의 자동 테스트(E2E테스트) | Web Scratch&quot;&gt;TestCafe로 브라우저의 자동 테스트(E2E테스트) | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://testcafe-discuss.devexpress.com/t/why-not-use-selenium/47/2&quot; title=&quot;Why not use Selenium? - Questions - TestCafe Discussion Board&quot;&gt;Why not use Selenium? - Questions - TestCafe Discussion Board&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyperform---capture-form-validation-back-from-the-browser&quot;&gt;Hyperform - Capture form validation back from the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hyperform.js.org/&quot; title=&quot;Hyperform - Capture form validation back from the browser&quot;&gt;hyperform.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTML5 form validation API를 polyfill 및 대체 구현을 통해 제공하는 폼 검증 라이브러리입니다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-프레임워크-입문-:-쇼유다츠야노-:-책-:-amazon.co.jp&quot;&gt;JavaScript 프레임워크 입문 : 쇼유다츠야노 : 책 : Amazon.co.jp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/JavaScript-%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E5%85%A5%E9%96%80-%E6%8E%8C%E7%94%B0%E6%B4%A5%E8%80%B6%E4%B9%83/dp/4798047848&quot; title=&quot;JavaScript フレームワーク入門 : 掌田津耶乃 : 本 : Amazon.co.jp&quot;&gt;www.amazon.co.jp/JavaScript-%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E5%85%A5%E9%96%80-%E6%8E%8C%E7%94%B0%E6%B4%A5%E8%80%B6%E4%B9%83/dp/4798047848&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript, npm과 Bower, webpack, jQuery, Vue.js, Backbone.js, Angular, React, Aurelia 등 JavaScript의 여러가지 도구와 프레임워크에 관해 소개 및 설명하는 책입니다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 24 Oct 2016 09:36:00 +0900</pubDate>
        <link>https://jser.info/ko/2016/10/24/npm-4.0.0-node.js-v6.9.0-lts-webpack2/</link>
        <guid isPermaLink="true">https://jser.info/ko/2016/10/24/npm-4.0.0-node.js-v6.9.0-lts-webpack2/</guid>
        
        <category>npm</category>
        
        <category>Node.js</category>
        
        <category>webpack</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>JSer.info 300회째 &amp;&amp; https 적용 &amp;&amp; 사용자 투고 기능</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://jser.info/ko/2016/10/10/javascriptunicodeweb-componentsnpm-scripts/&quot;&gt;지난 번 글&lt;/a&gt;로써 JSer.info의 자바스크립트 소식에 관한 글이 300회 째를 맞이했습니다&lt;/p&gt;

&lt;p&gt;일단, 300주간 끈기있게 포스팅을 했다는 사실이 좋았습니다&lt;/p&gt;

&lt;p&gt;300회를 맞기한 김에 최근 JSer.info에 있었던 변경을 소개하겠습니다&lt;br&gt;
과거에 있었던 변경 사항은 아래 슽라이드에 정리돼 있으니 궁금하신 분은 참고하시길 바랍니다.&lt;br&gt;
(&lt;a href=&quot;https://jser.info/trends/&quot; title=&quot;JSer.info 트렌드&quot;&gt;JSer.info 트렌드&lt;/a&gt;도 가끔 보면 편리하니 많은 관심 부탁드립니다)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/jser.info.html&quot; title=&quot;JSer.info 5주년&quot;&gt;JSer.info 5주년&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;https-적용&quot;&gt;https 적용&lt;/h2&gt;

&lt;p&gt;JSer.info는 모두 https로 돼있습니다(만약 http로 접근하면 https로 리다이렉트 됩니다).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/&quot;&gt;https://jser.info/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com/&quot; title=&quot;Cloudflare&quot;&gt;Cloudflare&lt;/a&gt;를 사용하고 있으므로 큰 수고스러움 없이 적용 가능했지만, 외부의 일부 사이트가 이상하게 동작(&lt;a href=&quot;https://iwb.jp/hatenabookmark-toolbar-ssl-title-bug/&quot;&gt;참고(일본어)&lt;/a&gt;하는 정도의 결점이 있습니다(현 사이트 내의 컨텐츠는 모두 https이기 때문에 별다른 문제는 없습니다).&lt;/p&gt;

&lt;h2 id=&quot;사용자-투고-기능&quot;&gt;사용자 투고 기능&lt;/h2&gt;

&lt;p&gt;제목에 약간 오해의 여지가 있어 부가설명을 하자면 JSer.info에서 소개햇으면 하는 글/사이트/라이브러리 등의 URL을 관리자에게 전달할 수 있는 기능을 말합니다. &lt;/p&gt;

&lt;p&gt;화면 우측 하단의 &amp;quot;&lt;a href=&quot;https://jser.info/ping/&quot;&gt;기사소개하기(記事を紹介する)&lt;/a&gt;&amp;quot; 버튼을 통해 JSer.info에 소개하고 싶은 URL을 전달할 수 있습니다. 특별히 계정 정보를 필요로 하지 않으므로 언제든지 편하게 URL을 투고할 수 있습니다.&lt;/p&gt;

&lt;p&gt;투고한 내용은 오픈돼 &lt;a href=&quot;https://github.com/jser/ping&quot; title=&quot;jser/ping&quot;&gt;jser/ping&lt;/a&gt;에서 관리됩니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/ping/&quot; title=&quot;Ping! to JSer.info&quot;&gt;&lt;img src=&quot;https://jser.info/ping/img/site.gif&quot; alt=&quot;ping&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;단독 폼으로써 &lt;a href=&quot;https://jser.info/ping/&quot; title=&quot;Ping! to JSer.info&quot;&gt;Ping! to JSer.info&lt;/a&gt;에서도 동일하게 투고할 수 있습니다.&lt;/p&gt;

&lt;p&gt;투고하게되면 봇이 &lt;a href=&quot;https://github.com/jser/ping/issues&quot;&gt;jser/ping&lt;/a&gt;에 새로운 Issue를 만들고 나중에 자신 또는 누군가가 살펴보고 소개하게 되는 가벼운 느낌의 기능입니다.&lt;br&gt;
소개될 때에 레스(Pong)를 원하는 사람만 계정 정보를 입력하는 정도이기 때문에 기본적으로는 입력하지 않아도 됩니다(등록된 이슈에 &lt;img class=&#39;emoji&#39; title=&#39;:+1:&#39; alt=&#39;:+1:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f44d.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; 등의 리액션 버튼을 이용해 투표하면 참고할 수 있도록 하겠습니다).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;Gitter&lt;/a&gt;, Issue, Pull Request 등을 이용해 전달하는 방식은 어느정도 용기가 필요하기 때문에 이 보다 더욱 부담없이 전다할 수 있는 방법이 있으면 좋을 것 같아 이 기능을 만들게 됐습니다&lt;/p&gt;

&lt;p&gt;익명(봇이 대신)으로 이슈를 등록하기 위해 &lt;a href=&quot;https://github.com/jser/serverless&quot;&gt;lambda와 Gateway&lt;/a&gt;를 이용해 API를 만들었습니다 &lt;/p&gt;

&lt;p&gt;물론 지금까지 처럼 Gitter 등에서 이야기해도 문제 없습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;끝으로&quot;&gt;끝으로&lt;/h2&gt;

&lt;p&gt;300회 기념 이벤트를 하지 못했기 때문에 6주년이 되는 2017년 1월에 무엇인가 준비해서 할 수 있으면 좋겠네요. &lt;/p&gt;

&lt;p&gt;그럼, 앞으로도 잘 부탁드리겠습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 23:37:00 +0900</pubDate>
        <link>https://jser.info/ko/2016/10/10/300posts/</link>
        <guid isPermaLink="true">https://jser.info/ko/2016/10/10/300posts/</guid>
        
        <category>JSer.info</category>
        
        
        <category>_i18n</category>
        
        <category>ko</category>
        
        <category>기타</category>
        
      </item>
    
  </channel>
</rss>
